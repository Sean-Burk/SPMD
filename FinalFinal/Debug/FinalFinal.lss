
FinalFinal.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001c2c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00802000  00001c2c  00001cc0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000007e  00802016  00802016  00001cd6  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00001cd6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d38  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00001d78  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003c47  00000000  00000000  00001ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002c08  00000000  00000000  00005b17  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000154b  00000000  00000000  0000871f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000568  00000000  00000000  00009c6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002464  00000000  00000000  0000a1d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000168d  00000000  00000000  0000c638  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  0000dcc5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 18 01 	jmp	0x230	; 0x230 <__ctors_end>
       4:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
       8:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
       c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      10:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      14:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      18:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      1c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      20:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      24:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      28:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      2c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      30:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      34:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      38:	0c 94 8f 01 	jmp	0x31e	; 0x31e <__vector_14>
      3c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      40:	0c 94 d3 01 	jmp	0x3a6	; 0x3a6 <__vector_16>
      44:	0c 94 ec 01 	jmp	0x3d8	; 0x3d8 <__vector_17>
      48:	0c 94 05 02 	jmp	0x40a	; 0x40a <__vector_18>
      4c:	0c 94 1e 02 	jmp	0x43c	; 0x43c <__vector_19>
      50:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      54:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      58:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      5c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      60:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      64:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__vector_25>
      68:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      6c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__vector_27>
      70:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      74:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      78:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      7c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      80:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      84:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      88:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      8c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      90:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      94:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      98:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      9c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      a0:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      a4:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      a8:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      ac:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      b0:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      b4:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      b8:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      bc:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      c0:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      c4:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      c8:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      cc:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      d0:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      d4:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      d8:	0c 94 37 02 	jmp	0x46e	; 0x46e <__vector_54>
      dc:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__vector_55>
      e0:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      e4:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      e8:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      ec:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      f0:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      f4:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      f8:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
      fc:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     100:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     104:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     108:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     10c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     110:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     114:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     118:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     11c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     120:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     124:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     128:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     12c:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__vector_75>
     130:	0c 94 80 02 	jmp	0x500	; 0x500 <__vector_76>
     134:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     138:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     13c:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     140:	0c 94 39 01 	jmp	0x272	; 0x272 <__bad_interrupt>
     144:	07 63       	ori	r16, 0x37	; 55
     146:	42 36       	cpi	r20, 0x62	; 98
     148:	b7 9b       	sbis	0x16, 7	; 22
     14a:	d8 a7       	std	Y+40, r29	; 0x28
     14c:	1a 39       	cpi	r17, 0x9A	; 154
     14e:	68 56       	subi	r22, 0x68	; 104
     150:	18 ae       	std	Y+56, r1	; 0x38
     152:	ba ab       	std	Y+50, r27	; 0x32
     154:	55 8c       	ldd	r5, Z+29	; 0x1d
     156:	1d 3c       	cpi	r17, 0xCD	; 205
     158:	b7 cc       	rjmp	.-1682   	; 0xfffffac8 <__eeprom_end+0xff7efac8>
     15a:	57 63       	ori	r21, 0x37	; 55
     15c:	bd 6d       	ori	r27, 0xDD	; 221
     15e:	ed fd       	.word	0xfded	; ????
     160:	75 3e       	cpi	r23, 0xE5	; 229
     162:	f6 17       	cp	r31, r22
     164:	72 31       	cpi	r23, 0x12	; 18
     166:	bf 00       	.word	0x00bf	; ????
     168:	00 00       	nop
     16a:	80 3f       	cpi	r24, 0xF0	; 240
     16c:	e3 0b       	sbc	r30, r19
     16e:	b6 0b       	sbc	r27, r22
     170:	bb 0b       	sbc	r27, r27
     172:	b6 0b       	sbc	r27, r22
     174:	c0 0b       	sbc	r28, r16
     176:	b6 0b       	sbc	r27, r22
     178:	c5 0b       	sbc	r28, r21
     17a:	b6 0b       	sbc	r27, r22
     17c:	ca 0b       	sbc	r28, r26
     17e:	b6 0b       	sbc	r27, r22
     180:	cf 0b       	sbc	r28, r31
     182:	b6 0b       	sbc	r27, r22
     184:	d4 0b       	sbc	r29, r20
     186:	b6 0b       	sbc	r27, r22
     188:	d9 0b       	sbc	r29, r25
     18a:	b6 0b       	sbc	r27, r22
     18c:	b6 0b       	sbc	r27, r22
     18e:	b6 0b       	sbc	r27, r22
     190:	b6 0b       	sbc	r27, r22
     192:	b6 0b       	sbc	r27, r22
     194:	b6 0b       	sbc	r27, r22
     196:	b6 0b       	sbc	r27, r22
     198:	b6 0b       	sbc	r27, r22
     19a:	b6 0b       	sbc	r27, r22
     19c:	b6 0b       	sbc	r27, r22
     19e:	b6 0b       	sbc	r27, r22
     1a0:	b6 0b       	sbc	r27, r22
     1a2:	b6 0b       	sbc	r27, r22
     1a4:	b6 0b       	sbc	r27, r22
     1a6:	b6 0b       	sbc	r27, r22
     1a8:	b6 0b       	sbc	r27, r22
     1aa:	b6 0b       	sbc	r27, r22
     1ac:	de 0b       	sbc	r29, r30
     1ae:	08 00       	.word	0x0008	; ????
     1b0:	00 00       	nop
     1b2:	be 92       	st	-X, r11
     1b4:	24 49       	sbci	r18, 0x94	; 148
     1b6:	12 3e       	cpi	r17, 0xE2	; 226
     1b8:	ab aa       	std	Y+51, r10	; 0x33
     1ba:	aa 2a       	or	r10, r26
     1bc:	be cd       	rjmp	.-1156   	; 0xfffffd3a <__eeprom_end+0xff7efd3a>
     1be:	cc cc       	rjmp	.-1640   	; 0xfffffb58 <__eeprom_end+0xff7efb58>
     1c0:	4c 3e       	cpi	r20, 0xEC	; 236
     1c2:	00 00       	nop
     1c4:	00 80       	ld	r0, Z
     1c6:	be ab       	std	Y+54, r27	; 0x36
     1c8:	aa aa       	std	Y+50, r10	; 0x32
     1ca:	aa 3e       	cpi	r26, 0xEA	; 234
     1cc:	00 00       	nop
     1ce:	00 00       	nop
     1d0:	bf 00       	.word	0x00bf	; ????
     1d2:	00 00       	nop
     1d4:	80 3f       	cpi	r24, 0xF0	; 240
     1d6:	00 00       	nop
     1d8:	00 00       	nop
     1da:	00 08       	sbc	r0, r0
     1dc:	41 78       	andi	r20, 0x81	; 129
     1de:	d3 bb       	out	0x13, r29	; 19
     1e0:	43 87       	std	Z+11, r20	; 0x0b
     1e2:	d1 13       	cpse	r29, r17
     1e4:	3d 19       	sub	r19, r13
     1e6:	0e 3c       	cpi	r16, 0xCE	; 206
     1e8:	c3 bd       	out	0x23, r28	; 35
     1ea:	42 82       	std	Z+2, r4	; 0x02
     1ec:	ad 2b       	or	r26, r29
     1ee:	3e 68       	ori	r19, 0x8E	; 142
     1f0:	ec 82       	std	Y+4, r14	; 0x04
     1f2:	76 be       	out	0x36, r7	; 54
     1f4:	d9 8f       	std	Y+25, r29	; 0x19
     1f6:	e1 a9       	ldd	r30, Z+49	; 0x31
     1f8:	3e 4c       	sbci	r19, 0xCE	; 206
     1fa:	80 ef       	ldi	r24, 0xF0	; 240
     1fc:	ff be       	out	0x3f, r15	; 63
     1fe:	01 c4       	rjmp	.+2050   	; 0xa02 <main+0x44>
     200:	ff 7f       	andi	r31, 0xFF	; 255
     202:	3f 00       	.word	0x003f	; ????
     204:	00 00       	nop
	...

00000208 <__trampolines_start>:
     208:	0c 94 d9 0b 	jmp	0x17b2	; 0x17b2 <GetSystemClocks+0x124>
     20c:	0c 94 c0 0b 	jmp	0x1780	; 0x1780 <GetSystemClocks+0xf2>
     210:	0c 94 ca 0b 	jmp	0x1794	; 0x1794 <GetSystemClocks+0x106>
     214:	0c 94 e3 0b 	jmp	0x17c6	; 0x17c6 <GetSystemClocks+0x138>
     218:	0c 94 b6 0b 	jmp	0x176c	; 0x176c <GetSystemClocks+0xde>
     21c:	0c 94 d4 0b 	jmp	0x17a8	; 0x17a8 <GetSystemClocks+0x11a>
     220:	0c 94 cf 0b 	jmp	0x179e	; 0x179e <GetSystemClocks+0x110>
     224:	0c 94 c5 0b 	jmp	0x178a	; 0x178a <GetSystemClocks+0xfc>
     228:	0c 94 de 0b 	jmp	0x17bc	; 0x17bc <GetSystemClocks+0x12e>
     22c:	0c 94 bb 0b 	jmp	0x1776	; 0x1776 <GetSystemClocks+0xe8>

00000230 <__ctors_end>:
     230:	11 24       	eor	r1, r1
     232:	1f be       	out	0x3f, r1	; 63
     234:	cf ef       	ldi	r28, 0xFF	; 255
     236:	cd bf       	out	0x3d, r28	; 61
     238:	df e3       	ldi	r29, 0x3F	; 63
     23a:	de bf       	out	0x3e, r29	; 62
     23c:	00 e0       	ldi	r16, 0x00	; 0
     23e:	0c bf       	out	0x3c, r16	; 60

00000240 <__do_copy_data>:
     240:	10 e2       	ldi	r17, 0x20	; 32
     242:	a0 e0       	ldi	r26, 0x00	; 0
     244:	b0 e2       	ldi	r27, 0x20	; 32
     246:	ec e2       	ldi	r30, 0x2C	; 44
     248:	fc e1       	ldi	r31, 0x1C	; 28
     24a:	00 e0       	ldi	r16, 0x00	; 0
     24c:	0b bf       	out	0x3b, r16	; 59
     24e:	02 c0       	rjmp	.+4      	; 0x254 <__do_copy_data+0x14>
     250:	07 90       	elpm	r0, Z+
     252:	0d 92       	st	X+, r0
     254:	a6 31       	cpi	r26, 0x16	; 22
     256:	b1 07       	cpc	r27, r17
     258:	d9 f7       	brne	.-10     	; 0x250 <__do_copy_data+0x10>

0000025a <__do_clear_bss>:
     25a:	20 e2       	ldi	r18, 0x20	; 32
     25c:	a6 e1       	ldi	r26, 0x16	; 22
     25e:	b0 e2       	ldi	r27, 0x20	; 32
     260:	01 c0       	rjmp	.+2      	; 0x264 <.do_clear_bss_start>

00000262 <.do_clear_bss_loop>:
     262:	1d 92       	st	X+, r1

00000264 <.do_clear_bss_start>:
     264:	a4 39       	cpi	r26, 0x94	; 148
     266:	b2 07       	cpc	r27, r18
     268:	e1 f7       	brne	.-8      	; 0x262 <.do_clear_bss_loop>
     26a:	0e 94 df 04 	call	0x9be	; 0x9be <main>
     26e:	0c 94 14 0e 	jmp	0x1c28	; 0x1c28 <_exit>

00000272 <__bad_interrupt>:
     272:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000276 <__vector_27>:
void PwmUpdate();

XUSARTst stU;
volatile char bSend = 0, bReadFlag=0;

ISR(USARTC0_TXC_vect){
     276:	1f 92       	push	r1
     278:	0f 92       	push	r0
     27a:	0f b6       	in	r0, 0x3f	; 63
     27c:	0f 92       	push	r0
     27e:	11 24       	eor	r1, r1
     280:	0b b6       	in	r0, 0x3b	; 59
     282:	0f 92       	push	r0
     284:	2f 93       	push	r18
     286:	3f 93       	push	r19
     288:	4f 93       	push	r20
     28a:	5f 93       	push	r21
     28c:	6f 93       	push	r22
     28e:	7f 93       	push	r23
     290:	8f 93       	push	r24
     292:	9f 93       	push	r25
     294:	af 93       	push	r26
     296:	bf 93       	push	r27
     298:	ef 93       	push	r30
     29a:	ff 93       	push	r31
	Tx_Handler(&stU);
     29c:	8a e2       	ldi	r24, 0x2A	; 42
     29e:	90 e2       	ldi	r25, 0x20	; 32
     2a0:	0e 94 3e 09 	call	0x127c	; 0x127c <Tx_Handler>
}
     2a4:	ff 91       	pop	r31
     2a6:	ef 91       	pop	r30
     2a8:	bf 91       	pop	r27
     2aa:	af 91       	pop	r26
     2ac:	9f 91       	pop	r25
     2ae:	8f 91       	pop	r24
     2b0:	7f 91       	pop	r23
     2b2:	6f 91       	pop	r22
     2b4:	5f 91       	pop	r21
     2b6:	4f 91       	pop	r20
     2b8:	3f 91       	pop	r19
     2ba:	2f 91       	pop	r18
     2bc:	0f 90       	pop	r0
     2be:	0b be       	out	0x3b, r0	; 59
     2c0:	0f 90       	pop	r0
     2c2:	0f be       	out	0x3f, r0	; 63
     2c4:	0f 90       	pop	r0
     2c6:	1f 90       	pop	r1
     2c8:	18 95       	reti

000002ca <__vector_25>:
ISR(USARTC0_RXC_vect){
     2ca:	1f 92       	push	r1
     2cc:	0f 92       	push	r0
     2ce:	0f b6       	in	r0, 0x3f	; 63
     2d0:	0f 92       	push	r0
     2d2:	11 24       	eor	r1, r1
     2d4:	0b b6       	in	r0, 0x3b	; 59
     2d6:	0f 92       	push	r0
     2d8:	2f 93       	push	r18
     2da:	3f 93       	push	r19
     2dc:	4f 93       	push	r20
     2de:	5f 93       	push	r21
     2e0:	6f 93       	push	r22
     2e2:	7f 93       	push	r23
     2e4:	8f 93       	push	r24
     2e6:	9f 93       	push	r25
     2e8:	af 93       	push	r26
     2ea:	bf 93       	push	r27
     2ec:	ef 93       	push	r30
     2ee:	ff 93       	push	r31
	Rx_Handler(&stU);
     2f0:	8a e2       	ldi	r24, 0x2A	; 42
     2f2:	90 e2       	ldi	r25, 0x20	; 32
     2f4:	0e 94 65 09 	call	0x12ca	; 0x12ca <Rx_Handler>
}
     2f8:	ff 91       	pop	r31
     2fa:	ef 91       	pop	r30
     2fc:	bf 91       	pop	r27
     2fe:	af 91       	pop	r26
     300:	9f 91       	pop	r25
     302:	8f 91       	pop	r24
     304:	7f 91       	pop	r23
     306:	6f 91       	pop	r22
     308:	5f 91       	pop	r21
     30a:	4f 91       	pop	r20
     30c:	3f 91       	pop	r19
     30e:	2f 91       	pop	r18
     310:	0f 90       	pop	r0
     312:	0b be       	out	0x3b, r0	; 59
     314:	0f 90       	pop	r0
     316:	0f be       	out	0x3f, r0	; 63
     318:	0f 90       	pop	r0
     31a:	1f 90       	pop	r1
     31c:	18 95       	reti

0000031e <__vector_14>:
ISR(TCC0_OVF_vect){
     31e:	1f 92       	push	r1
     320:	0f 92       	push	r0
     322:	0f b6       	in	r0, 0x3f	; 63
     324:	0f 92       	push	r0
     326:	11 24       	eor	r1, r1
     328:	0b b6       	in	r0, 0x3b	; 59
     32a:	0f 92       	push	r0
     32c:	8f 93       	push	r24
     32e:	9f 93       	push	r25
     330:	ef 93       	push	r30
     332:	ff 93       	push	r31
	PORTE_OUT&=0b11111010;
     334:	e4 e8       	ldi	r30, 0x84	; 132
     336:	f6 e0       	ldi	r31, 0x06	; 6
     338:	80 81       	ld	r24, Z
     33a:	8a 7f       	andi	r24, 0xFA	; 250
     33c:	80 83       	st	Z, r24
	PORTA_OUT&=0b11111010;
     33e:	e4 e0       	ldi	r30, 0x04	; 4
     340:	f6 e0       	ldi	r31, 0x06	; 6
     342:	80 81       	ld	r24, Z
     344:	8a 7f       	andi	r24, 0xFA	; 250
     346:	80 83       	st	Z, r24
	count++;
     348:	80 91 26 20 	lds	r24, 0x2026	; 0x802026 <count>
     34c:	90 91 27 20 	lds	r25, 0x2027	; 0x802027 <count+0x1>
     350:	01 96       	adiw	r24, 0x01	; 1
     352:	80 93 26 20 	sts	0x2026, r24	; 0x802026 <count>
     356:	90 93 27 20 	sts	0x2027, r25	; 0x802027 <count+0x1>
	countpuck++;
     35a:	80 91 16 20 	lds	r24, 0x2016	; 0x802016 <__data_end>
     35e:	90 91 17 20 	lds	r25, 0x2017	; 0x802017 <__data_end+0x1>
     362:	01 96       	adiw	r24, 0x01	; 1
     364:	80 93 16 20 	sts	0x2016, r24	; 0x802016 <__data_end>
     368:	90 93 17 20 	sts	0x2017, r25	; 0x802017 <__data_end+0x1>
	gearcount++;
     36c:	80 91 18 20 	lds	r24, 0x2018	; 0x802018 <gearcount>
     370:	90 91 19 20 	lds	r25, 0x2019	; 0x802019 <gearcount+0x1>
     374:	01 96       	adiw	r24, 0x01	; 1
     376:	80 93 18 20 	sts	0x2018, r24	; 0x802018 <gearcount>
     37a:	90 93 19 20 	sts	0x2019, r25	; 0x802019 <gearcount+0x1>
	countUpdate++;
     37e:	80 91 22 20 	lds	r24, 0x2022	; 0x802022 <countUpdate>
     382:	90 91 23 20 	lds	r25, 0x2023	; 0x802023 <countUpdate+0x1>
     386:	01 96       	adiw	r24, 0x01	; 1
     388:	80 93 22 20 	sts	0x2022, r24	; 0x802022 <countUpdate>
     38c:	90 93 23 20 	sts	0x2023, r25	; 0x802023 <countUpdate+0x1>
}
     390:	ff 91       	pop	r31
     392:	ef 91       	pop	r30
     394:	9f 91       	pop	r25
     396:	8f 91       	pop	r24
     398:	0f 90       	pop	r0
     39a:	0b be       	out	0x3b, r0	; 59
     39c:	0f 90       	pop	r0
     39e:	0f be       	out	0x3f, r0	; 63
     3a0:	0f 90       	pop	r0
     3a2:	1f 90       	pop	r1
     3a4:	18 95       	reti

000003a6 <__vector_16>:
ISR(TCC0_CCA_vect){//left motor
     3a6:	1f 92       	push	r1
     3a8:	0f 92       	push	r0
     3aa:	0f b6       	in	r0, 0x3f	; 63
     3ac:	0f 92       	push	r0
     3ae:	11 24       	eor	r1, r1
     3b0:	0b b6       	in	r0, 0x3b	; 59
     3b2:	0f 92       	push	r0
     3b4:	8f 93       	push	r24
     3b6:	ef 93       	push	r30
     3b8:	ff 93       	push	r31
	PORTE_OUT|=0b00000001;
     3ba:	e4 e8       	ldi	r30, 0x84	; 132
     3bc:	f6 e0       	ldi	r31, 0x06	; 6
     3be:	80 81       	ld	r24, Z
     3c0:	81 60       	ori	r24, 0x01	; 1
     3c2:	80 83       	st	Z, r24
}
     3c4:	ff 91       	pop	r31
     3c6:	ef 91       	pop	r30
     3c8:	8f 91       	pop	r24
     3ca:	0f 90       	pop	r0
     3cc:	0b be       	out	0x3b, r0	; 59
     3ce:	0f 90       	pop	r0
     3d0:	0f be       	out	0x3f, r0	; 63
     3d2:	0f 90       	pop	r0
     3d4:	1f 90       	pop	r1
     3d6:	18 95       	reti

000003d8 <__vector_17>:
ISR(TCC0_CCB_vect){//right motor
     3d8:	1f 92       	push	r1
     3da:	0f 92       	push	r0
     3dc:	0f b6       	in	r0, 0x3f	; 63
     3de:	0f 92       	push	r0
     3e0:	11 24       	eor	r1, r1
     3e2:	0b b6       	in	r0, 0x3b	; 59
     3e4:	0f 92       	push	r0
     3e6:	8f 93       	push	r24
     3e8:	ef 93       	push	r30
     3ea:	ff 93       	push	r31
	PORTE_OUT|=0b00000100;
     3ec:	e4 e8       	ldi	r30, 0x84	; 132
     3ee:	f6 e0       	ldi	r31, 0x06	; 6
     3f0:	80 81       	ld	r24, Z
     3f2:	84 60       	ori	r24, 0x04	; 4
     3f4:	80 83       	st	Z, r24
}
     3f6:	ff 91       	pop	r31
     3f8:	ef 91       	pop	r30
     3fa:	8f 91       	pop	r24
     3fc:	0f 90       	pop	r0
     3fe:	0b be       	out	0x3b, r0	; 59
     400:	0f 90       	pop	r0
     402:	0f be       	out	0x3f, r0	; 63
     404:	0f 90       	pop	r0
     406:	1f 90       	pop	r1
     408:	18 95       	reti

0000040a <__vector_18>:
ISR(TCC0_CCC_vect){//gear
     40a:	1f 92       	push	r1
     40c:	0f 92       	push	r0
     40e:	0f b6       	in	r0, 0x3f	; 63
     410:	0f 92       	push	r0
     412:	11 24       	eor	r1, r1
     414:	0b b6       	in	r0, 0x3b	; 59
     416:	0f 92       	push	r0
     418:	8f 93       	push	r24
     41a:	ef 93       	push	r30
     41c:	ff 93       	push	r31
	PORTA_OUT|=0b00000001;
     41e:	e4 e0       	ldi	r30, 0x04	; 4
     420:	f6 e0       	ldi	r31, 0x06	; 6
     422:	80 81       	ld	r24, Z
     424:	81 60       	ori	r24, 0x01	; 1
     426:	80 83       	st	Z, r24
}
     428:	ff 91       	pop	r31
     42a:	ef 91       	pop	r30
     42c:	8f 91       	pop	r24
     42e:	0f 90       	pop	r0
     430:	0b be       	out	0x3b, r0	; 59
     432:	0f 90       	pop	r0
     434:	0f be       	out	0x3f, r0	; 63
     436:	0f 90       	pop	r0
     438:	1f 90       	pop	r1
     43a:	18 95       	reti

0000043c <__vector_19>:
ISR(TCC0_CCD_vect){//puck
     43c:	1f 92       	push	r1
     43e:	0f 92       	push	r0
     440:	0f b6       	in	r0, 0x3f	; 63
     442:	0f 92       	push	r0
     444:	11 24       	eor	r1, r1
     446:	0b b6       	in	r0, 0x3b	; 59
     448:	0f 92       	push	r0
     44a:	8f 93       	push	r24
     44c:	ef 93       	push	r30
     44e:	ff 93       	push	r31
	PORTA_OUT|=0b00000100;
     450:	e4 e0       	ldi	r30, 0x04	; 4
     452:	f6 e0       	ldi	r31, 0x06	; 6
     454:	80 81       	ld	r24, Z
     456:	84 60       	ori	r24, 0x04	; 4
     458:	80 83       	st	Z, r24
}
     45a:	ff 91       	pop	r31
     45c:	ef 91       	pop	r30
     45e:	8f 91       	pop	r24
     460:	0f 90       	pop	r0
     462:	0b be       	out	0x3b, r0	; 59
     464:	0f 90       	pop	r0
     466:	0f be       	out	0x3f, r0	; 63
     468:	0f 90       	pop	r0
     46a:	1f 90       	pop	r1
     46c:	18 95       	reti

0000046e <__vector_54>:
ISR(PORTE_INT0_vect){
     46e:	1f 92       	push	r1
     470:	0f 92       	push	r0
     472:	0f b6       	in	r0, 0x3f	; 63
     474:	0f 92       	push	r0
     476:	11 24       	eor	r1, r1
     478:	8f 93       	push	r24
     47a:	9f 93       	push	r25
	countR++;
     47c:	80 91 20 20 	lds	r24, 0x2020	; 0x802020 <countR>
     480:	90 91 21 20 	lds	r25, 0x2021	; 0x802021 <countR+0x1>
     484:	01 96       	adiw	r24, 0x01	; 1
     486:	80 93 20 20 	sts	0x2020, r24	; 0x802020 <countR>
     48a:	90 93 21 20 	sts	0x2021, r25	; 0x802021 <countR+0x1>
}
     48e:	9f 91       	pop	r25
     490:	8f 91       	pop	r24
     492:	0f 90       	pop	r0
     494:	0f be       	out	0x3f, r0	; 63
     496:	0f 90       	pop	r0
     498:	1f 90       	pop	r1
     49a:	18 95       	reti

0000049c <__vector_55>:
ISR(PORTE_INT1_vect){
     49c:	1f 92       	push	r1
     49e:	0f 92       	push	r0
     4a0:	0f b6       	in	r0, 0x3f	; 63
     4a2:	0f 92       	push	r0
     4a4:	11 24       	eor	r1, r1
     4a6:	8f 93       	push	r24
     4a8:	9f 93       	push	r25
	countL++;
     4aa:	80 91 1e 20 	lds	r24, 0x201E	; 0x80201e <countL>
     4ae:	90 91 1f 20 	lds	r25, 0x201F	; 0x80201f <countL+0x1>
     4b2:	01 96       	adiw	r24, 0x01	; 1
     4b4:	80 93 1e 20 	sts	0x201E, r24	; 0x80201e <countL>
     4b8:	90 93 1f 20 	sts	0x201F, r25	; 0x80201f <countL+0x1>
}
     4bc:	9f 91       	pop	r25
     4be:	8f 91       	pop	r24
     4c0:	0f 90       	pop	r0
     4c2:	0f be       	out	0x3f, r0	; 63
     4c4:	0f 90       	pop	r0
     4c6:	1f 90       	pop	r1
     4c8:	18 95       	reti

000004ca <__vector_75>:
ISR(PORTA_INT0_vect){//limit switch
     4ca:	1f 92       	push	r1
     4cc:	0f 92       	push	r0
     4ce:	0f b6       	in	r0, 0x3f	; 63
     4d0:	0f 92       	push	r0
     4d2:	11 24       	eor	r1, r1
     4d4:	8f 93       	push	r24
     4d6:	9f 93       	push	r25
	if(gearcount>10)
     4d8:	80 91 18 20 	lds	r24, 0x2018	; 0x802018 <gearcount>
     4dc:	90 91 19 20 	lds	r25, 0x2019	; 0x802019 <gearcount+0x1>
     4e0:	0b 97       	sbiw	r24, 0x0b	; 11
     4e2:	3c f0       	brlt	.+14     	; 0x4f2 <__vector_75+0x28>
	{
		bdirchange=1;
     4e4:	81 e0       	ldi	r24, 0x01	; 1
     4e6:	80 93 1b 20 	sts	0x201B, r24	; 0x80201b <bdirchange>
		gearcount=0;
     4ea:	10 92 18 20 	sts	0x2018, r1	; 0x802018 <gearcount>
     4ee:	10 92 19 20 	sts	0x2019, r1	; 0x802019 <gearcount+0x1>
	}
}
     4f2:	9f 91       	pop	r25
     4f4:	8f 91       	pop	r24
     4f6:	0f 90       	pop	r0
     4f8:	0f be       	out	0x3f, r0	; 63
     4fa:	0f 90       	pop	r0
     4fc:	1f 90       	pop	r1
     4fe:	18 95       	reti

00000500 <__vector_76>:
ISR(PORTA_INT1_vect){
     500:	1f 92       	push	r1
     502:	0f 92       	push	r0
     504:	0f b6       	in	r0, 0x3f	; 63
     506:	0f 92       	push	r0
     508:	11 24       	eor	r1, r1
     50a:	8f 93       	push	r24
     50c:	9f 93       	push	r25
	//bfound=1;
	if(SignalIn==0)
     50e:	80 91 1a 20 	lds	r24, 0x201A	; 0x80201a <SignalIn>
     512:	81 11       	cpse	r24, r1
     514:	07 c0       	rjmp	.+14     	; 0x524 <__vector_76+0x24>
	{
		countpuck=0;
     516:	10 92 16 20 	sts	0x2016, r1	; 0x802016 <__data_end>
     51a:	10 92 17 20 	sts	0x2017, r1	; 0x802017 <__data_end+0x1>
		SignalIn=1;
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	80 93 1a 20 	sts	0x201A, r24	; 0x80201a <SignalIn>
	}
	PulseCount++;
     524:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <PulseCount>
     528:	90 91 1d 20 	lds	r25, 0x201D	; 0x80201d <PulseCount+0x1>
     52c:	01 96       	adiw	r24, 0x01	; 1
     52e:	80 93 1c 20 	sts	0x201C, r24	; 0x80201c <PulseCount>
     532:	90 93 1d 20 	sts	0x201D, r25	; 0x80201d <PulseCount+0x1>
}
     536:	9f 91       	pop	r25
     538:	8f 91       	pop	r24
     53a:	0f 90       	pop	r0
     53c:	0f be       	out	0x3f, r0	; 63
     53e:	0f 90       	pop	r0
     540:	1f 90       	pop	r1
     542:	18 95       	reti

00000544 <SetInt>:
}

void SetInt()
{
	//counter stuf===============>
	TCC0_PER = CLKPER;
     544:	84 ec       	ldi	r24, 0xC4	; 196
     546:	99 e0       	ldi	r25, 0x09	; 9
     548:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
     54c:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
	TCC0_CTRLA = 0x04;		//set to 8
     550:	84 e0       	ldi	r24, 0x04	; 4
     552:	80 93 00 08 	sts	0x0800, r24	; 0x800800 <__TEXT_REGION_LENGTH__+0x700800>
	TCC0_CCA = (uint16_t)(((double)CLKPER))*PWLeft;//forward left 
     556:	20 e0       	ldi	r18, 0x00	; 0
     558:	30 e4       	ldi	r19, 0x40	; 64
     55a:	4c e1       	ldi	r20, 0x1C	; 28
     55c:	55 e4       	ldi	r21, 0x45	; 69
     55e:	60 91 0e 20 	lds	r22, 0x200E	; 0x80200e <PWLeft>
     562:	70 91 0f 20 	lds	r23, 0x200F	; 0x80200f <PWLeft+0x1>
     566:	80 91 10 20 	lds	r24, 0x2010	; 0x802010 <PWLeft+0x2>
     56a:	90 91 11 20 	lds	r25, 0x2011	; 0x802011 <PWLeft+0x3>
     56e:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
     572:	0e 94 45 07 	call	0xe8a	; 0xe8a <__fixunssfsi>
     576:	60 93 28 08 	sts	0x0828, r22	; 0x800828 <__TEXT_REGION_LENGTH__+0x700828>
     57a:	70 93 29 08 	sts	0x0829, r23	; 0x800829 <__TEXT_REGION_LENGTH__+0x700829>
	TCC0_CCB =(uint16_t)(((double)CLKPER))*PWRight;//right
     57e:	20 e0       	ldi	r18, 0x00	; 0
     580:	30 e4       	ldi	r19, 0x40	; 64
     582:	4c e1       	ldi	r20, 0x1C	; 28
     584:	55 e4       	ldi	r21, 0x45	; 69
     586:	60 91 12 20 	lds	r22, 0x2012	; 0x802012 <PWRight>
     58a:	70 91 13 20 	lds	r23, 0x2013	; 0x802013 <PWRight+0x1>
     58e:	80 91 14 20 	lds	r24, 0x2014	; 0x802014 <PWRight+0x2>
     592:	90 91 15 20 	lds	r25, 0x2015	; 0x802015 <PWRight+0x3>
     596:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
     59a:	0e 94 45 07 	call	0xe8a	; 0xe8a <__fixunssfsi>
     59e:	60 93 2a 08 	sts	0x082A, r22	; 0x80082a <__TEXT_REGION_LENGTH__+0x70082a>
     5a2:	70 93 2b 08 	sts	0x082B, r23	; 0x80082b <__TEXT_REGION_LENGTH__+0x70082b>
	TCC0_CCC = (uint16_t)(((double)CLKPER))*PWGear;//gear
     5a6:	20 e0       	ldi	r18, 0x00	; 0
     5a8:	30 e4       	ldi	r19, 0x40	; 64
     5aa:	4c e1       	ldi	r20, 0x1C	; 28
     5ac:	55 e4       	ldi	r21, 0x45	; 69
     5ae:	60 91 0a 20 	lds	r22, 0x200A	; 0x80200a <PWGear>
     5b2:	70 91 0b 20 	lds	r23, 0x200B	; 0x80200b <PWGear+0x1>
     5b6:	80 91 0c 20 	lds	r24, 0x200C	; 0x80200c <PWGear+0x2>
     5ba:	90 91 0d 20 	lds	r25, 0x200D	; 0x80200d <PWGear+0x3>
     5be:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
     5c2:	0e 94 45 07 	call	0xe8a	; 0xe8a <__fixunssfsi>
     5c6:	60 93 2c 08 	sts	0x082C, r22	; 0x80082c <__TEXT_REGION_LENGTH__+0x70082c>
     5ca:	70 93 2d 08 	sts	0x082D, r23	; 0x80082d <__TEXT_REGION_LENGTH__+0x70082d>
	TCC0_CCD =(uint16_t)(((double)CLKPER))*PWPuck;//puck
     5ce:	20 e0       	ldi	r18, 0x00	; 0
     5d0:	30 e4       	ldi	r19, 0x40	; 64
     5d2:	4c e1       	ldi	r20, 0x1C	; 28
     5d4:	55 e4       	ldi	r21, 0x45	; 69
     5d6:	60 91 06 20 	lds	r22, 0x2006	; 0x802006 <PWPuck>
     5da:	70 91 07 20 	lds	r23, 0x2007	; 0x802007 <PWPuck+0x1>
     5de:	80 91 08 20 	lds	r24, 0x2008	; 0x802008 <PWPuck+0x2>
     5e2:	90 91 09 20 	lds	r25, 0x2009	; 0x802009 <PWPuck+0x3>
     5e6:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
     5ea:	0e 94 45 07 	call	0xe8a	; 0xe8a <__fixunssfsi>
     5ee:	60 93 2e 08 	sts	0x082E, r22	; 0x80082e <__TEXT_REGION_LENGTH__+0x70082e>
     5f2:	70 93 2f 08 	sts	0x082F, r23	; 0x80082f <__TEXT_REGION_LENGTH__+0x70082f>
	TCC0_INTCTRLB = PMIC_LOLVLEX_bm|PMIC_LOLVLEX_bm<<2|PMIC_LOLVLEX_bm<<4;
     5f6:	85 e1       	ldi	r24, 0x15	; 21
     5f8:	80 93 07 08 	sts	0x0807, r24	; 0x800807 <__TEXT_REGION_LENGTH__+0x700807>
	TCC0_INTCTRLA = PMIC_MEDLVLEX_bm;// set the timer interrupt to medium level
     5fc:	82 e0       	ldi	r24, 0x02	; 2
     5fe:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <__TEXT_REGION_LENGTH__+0x700806>
	//external stuff ============================>
	PORTA_INT0MASK=0x01<<4|0x01<<6;//set pin 4 and 6 to int 0 for limit switches 
     602:	80 e5       	ldi	r24, 0x50	; 80
     604:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x70060a>
	PORTA_INT1MASK=0x01<<5;//set pin 5 to int 1 for metal detector signal
     608:	20 e2       	ldi	r18, 0x20	; 32
     60a:	20 93 0b 06 	sts	0x060B, r18	; 0x80060b <__TEXT_REGION_LENGTH__+0x70060b>
	PORTA_PIN4CTRL=0x01;//set to rising edge0x01
     60e:	81 e0       	ldi	r24, 0x01	; 1
     610:	80 93 14 06 	sts	0x0614, r24	; 0x800614 <__TEXT_REGION_LENGTH__+0x700614>
	PORTA_PIN5CTRL=0x01;
     614:	80 93 15 06 	sts	0x0615, r24	; 0x800615 <__TEXT_REGION_LENGTH__+0x700615>
	PORTA_PIN6CTRL=0x01;
     618:	80 93 16 06 	sts	0x0616, r24	; 0x800616 <__TEXT_REGION_LENGTH__+0x700616>
	PORTA_INTCTRL=PMIC_MEDLVLEX_bm|PMIC_MEDLVLEX_bm<<2;//set
     61c:	9a e0       	ldi	r25, 0x0A	; 10
     61e:	90 93 09 06 	sts	0x0609, r25	; 0x800609 <__TEXT_REGION_LENGTH__+0x700609>
	PORTE_INT0MASK=0x01<<4;//set pin 4 to int 0 for right drive motor
     622:	30 e1       	ldi	r19, 0x10	; 16
     624:	30 93 8a 06 	sts	0x068A, r19	; 0x80068a <__TEXT_REGION_LENGTH__+0x70068a>
	PORTE_INT1MASK=0x01<<5;//set pin 5 to int 1 for left drive motor
     628:	20 93 8b 06 	sts	0x068B, r18	; 0x80068b <__TEXT_REGION_LENGTH__+0x70068b>
	PORTE_PIN4CTRL=0x01;//set to rising edge
     62c:	80 93 94 06 	sts	0x0694, r24	; 0x800694 <__TEXT_REGION_LENGTH__+0x700694>
	PORTE_PIN5CTRL=0x01;
     630:	80 93 95 06 	sts	0x0695, r24	; 0x800695 <__TEXT_REGION_LENGTH__+0x700695>
	PORTE_INTCTRL=PMIC_MEDLVLEX_bm|PMIC_MEDLVLEX_bm<<2;//set encoder to med
     634:	90 93 89 06 	sts	0x0689, r25	; 0x800689 <__TEXT_REGION_LENGTH__+0x700689>
	PMIC_CTRL=PMIC_MEDLVLEN_bm | PMIC_LOLVLEN_bm | PMIC_HILVLEN_bm; //turn on medium level interrupts
     638:	87 e0       	ldi	r24, 0x07	; 7
     63a:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7000a2>
     63e:	08 95       	ret

00000640 <SetUSART>:
}

void SetUSART()
{
     640:	6f 92       	push	r6
     642:	7f 92       	push	r7
     644:	8f 92       	push	r8
     646:	af 92       	push	r10
     648:	cf 92       	push	r12
     64a:	ef 92       	push	r14
     64c:	ff 92       	push	r15
     64e:	0f 93       	push	r16
     650:	cf 93       	push	r28
     652:	df 93       	push	r29
     654:	00 d0       	rcall	.+0      	; 0x656 <SetUSART+0x16>
     656:	1f 92       	push	r1
     658:	cd b7       	in	r28, 0x3d	; 61
     65a:	de b7       	in	r29, 0x3e	; 62
	unsigned long pClk;
	GetSystemClocks(NULL, &pClk);
     65c:	be 01       	movw	r22, r28
     65e:	6f 5f       	subi	r22, 0xFF	; 255
     660:	7f 4f       	sbci	r23, 0xFF	; 255
     662:	80 e0       	ldi	r24, 0x00	; 0
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	0e 94 47 0b 	call	0x168e	; 0x168e <GetSystemClocks>
	stU.TxCB=bufTxArray;
     66a:	0f 2e       	mov	r0, r31
     66c:	fa e2       	ldi	r31, 0x2A	; 42
     66e:	6f 2e       	mov	r6, r31
     670:	f0 e2       	ldi	r31, 0x20	; 32
     672:	7f 2e       	mov	r7, r31
     674:	f0 2d       	mov	r31, r0
     676:	80 e7       	ldi	r24, 0x70	; 112
     678:	90 e2       	ldi	r25, 0x20	; 32
     67a:	f3 01       	movw	r30, r6
     67c:	86 87       	std	Z+14, r24	; 0x0e
     67e:	97 87       	std	Z+15, r25	; 0x0f
	stU.RxCB=bufRxArray;
     680:	80 e5       	ldi	r24, 0x50	; 80
     682:	90 e2       	ldi	r25, 0x20	; 32
     684:	80 8b       	std	Z+16, r24	; 0x10
     686:	91 8b       	std	Z+17, r25	; 0x11
	USART_init(&stU, 0xC0, pClk, _USART_RXCIL_LO|_USART_TXCIL_LO, 96, 0,_USART_CHSZ_8BIT, _USART_PM_DISABLED, _USART_SM_1BIT);
     688:	29 81       	ldd	r18, Y+1	; 0x01
     68a:	3a 81       	ldd	r19, Y+2	; 0x02
     68c:	4b 81       	ldd	r20, Y+3	; 0x03
     68e:	5c 81       	ldd	r21, Y+4	; 0x04
     690:	1f 92       	push	r1
     692:	81 2c       	mov	r8, r1
     694:	0f 2e       	mov	r0, r31
     696:	f3 e0       	ldi	r31, 0x03	; 3
     698:	af 2e       	mov	r10, r31
     69a:	f0 2d       	mov	r31, r0
     69c:	c1 2c       	mov	r12, r1
     69e:	0f 2e       	mov	r0, r31
     6a0:	f0 e6       	ldi	r31, 0x60	; 96
     6a2:	ef 2e       	mov	r14, r31
     6a4:	f1 2c       	mov	r15, r1
     6a6:	f0 2d       	mov	r31, r0
     6a8:	04 e1       	ldi	r16, 0x14	; 20
     6aa:	60 ec       	ldi	r22, 0xC0	; 192
     6ac:	c3 01       	movw	r24, r6
     6ae:	0e 94 8f 0a 	call	0x151e	; 0x151e <USART_init>
	USART_buffer_init(&stU, 32,32);
     6b2:	40 e2       	ldi	r20, 0x20	; 32
     6b4:	60 e2       	ldi	r22, 0x20	; 32
     6b6:	c3 01       	movw	r24, r6
     6b8:	0e 94 30 0a 	call	0x1460	; 0x1460 <USART_buffer_init>
	stU.fOutMode = 0;//_OUTPUT_CRLF;
     6bc:	f3 01       	movw	r30, r6
     6be:	14 8e       	std	Z+28, r1	; 0x1c
	stU.fInMode = _INPUT_LF;
     6c0:	82 e0       	ldi	r24, 0x02	; 2
     6c2:	83 8f       	std	Z+27, r24	; 0x1b
	USART_enable(&stU, (USART_TXEN_bm | USART_RXEN_bm));
     6c4:	68 e1       	ldi	r22, 0x18	; 24
     6c6:	c3 01       	movw	r24, r6
     6c8:	0e 94 f6 09 	call	0x13ec	; 0x13ec <USART_enable>
	PMIC_CTRL |= PMIC_LOLVLEN_bm|PMIC_MEDLVLEN_bm; //turn on low/med level interrupt
     6cc:	e2 ea       	ldi	r30, 0xA2	; 162
     6ce:	f0 e0       	ldi	r31, 0x00	; 0
     6d0:	80 81       	ld	r24, Z
     6d2:	83 60       	ori	r24, 0x03	; 3
     6d4:	80 83       	st	Z, r24
}
     6d6:	0f 90       	pop	r0
     6d8:	24 96       	adiw	r28, 0x04	; 4
     6da:	cd bf       	out	0x3d, r28	; 61
     6dc:	de bf       	out	0x3e, r29	; 62
     6de:	df 91       	pop	r29
     6e0:	cf 91       	pop	r28
     6e2:	0f 91       	pop	r16
     6e4:	ff 90       	pop	r15
     6e6:	ef 90       	pop	r14
     6e8:	cf 90       	pop	r12
     6ea:	af 90       	pop	r10
     6ec:	8f 90       	pop	r8
     6ee:	7f 90       	pop	r7
     6f0:	6f 90       	pop	r6
     6f2:	08 95       	ret

000006f4 <SetPins>:

void SetPins()
{
	PORTE_DIR=0x0f;
     6f4:	8f e0       	ldi	r24, 0x0F	; 15
     6f6:	80 93 80 06 	sts	0x0680, r24	; 0x800680 <__TEXT_REGION_LENGTH__+0x700680>
	PORTE_OUT=0x01<<1|0x01<<3;//A for back 
     6fa:	9a e0       	ldi	r25, 0x0A	; 10
     6fc:	90 93 84 06 	sts	0x0684, r25	; 0x800684 <__TEXT_REGION_LENGTH__+0x700684>
	PORTB_DIR=0xf0;//led port to out
     700:	90 ef       	ldi	r25, 0xF0	; 240
     702:	90 93 20 06 	sts	0x0620, r25	; 0x800620 <__TEXT_REGION_LENGTH__+0x700620>
	PORTB_OUT=0xf0;//LEDs off
     706:	90 93 24 06 	sts	0x0624, r25	; 0x800624 <__TEXT_REGION_LENGTH__+0x700624>
	PORTA_DIR=0x0f;//for the limit switches, gear motor, and puck motor  
     70a:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
     70e:	08 95       	ret

00000710 <ChangeState>:
}

void ChangeState(int newState)
{
     710:	0f 93       	push	r16
     712:	1f 93       	push	r17
     714:	cf 93       	push	r28
     716:	df 93       	push	r29
     718:	ec 01       	movw	r28, r24
	switch (newState)
     71a:	81 30       	cpi	r24, 0x01	; 1
     71c:	91 05       	cpc	r25, r1
     71e:	09 f4       	brne	.+2      	; 0x722 <ChangeState+0x12>
     720:	43 c0       	rjmp	.+134    	; 0x7a8 <ChangeState+0x98>
     722:	82 30       	cpi	r24, 0x02	; 2
     724:	91 05       	cpc	r25, r1
     726:	09 f4       	brne	.+2      	; 0x72a <ChangeState+0x1a>
     728:	5e c0       	rjmp	.+188    	; 0x7e6 <ChangeState+0xd6>
     72a:	89 2b       	or	r24, r25
     72c:	09 f0       	breq	.+2      	; 0x730 <ChangeState+0x20>
     72e:	79 c0       	rjmp	.+242    	; 0x822 <ChangeState+0x112>
	{
	case 0:
		TCC0_INTCTRLB |= PMIC_LOLVLEX_bm|PMIC_LOLVLEX_bm<<2;
     730:	07 e0       	ldi	r16, 0x07	; 7
     732:	18 e0       	ldi	r17, 0x08	; 8
     734:	f8 01       	movw	r30, r16
     736:	80 81       	ld	r24, Z
     738:	85 60       	ori	r24, 0x05	; 5
     73a:	80 83       	st	Z, r24
		TCC0_CCA = (uint16_t)(((double)CLKPER))*PWLeft;//for going forward
     73c:	20 e0       	ldi	r18, 0x00	; 0
     73e:	30 e4       	ldi	r19, 0x40	; 64
     740:	4c e1       	ldi	r20, 0x1C	; 28
     742:	55 e4       	ldi	r21, 0x45	; 69
     744:	60 91 0e 20 	lds	r22, 0x200E	; 0x80200e <PWLeft>
     748:	70 91 0f 20 	lds	r23, 0x200F	; 0x80200f <PWLeft+0x1>
     74c:	80 91 10 20 	lds	r24, 0x2010	; 0x802010 <PWLeft+0x2>
     750:	90 91 11 20 	lds	r25, 0x2011	; 0x802011 <PWLeft+0x3>
     754:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
     758:	0e 94 45 07 	call	0xe8a	; 0xe8a <__fixunssfsi>
     75c:	60 93 28 08 	sts	0x0828, r22	; 0x800828 <__TEXT_REGION_LENGTH__+0x700828>
     760:	70 93 29 08 	sts	0x0829, r23	; 0x800829 <__TEXT_REGION_LENGTH__+0x700829>
		TCC0_CCB = (uint16_t)(((double)CLKPER))*PWRight;
     764:	20 e0       	ldi	r18, 0x00	; 0
     766:	30 e4       	ldi	r19, 0x40	; 64
     768:	4c e1       	ldi	r20, 0x1C	; 28
     76a:	55 e4       	ldi	r21, 0x45	; 69
     76c:	60 91 12 20 	lds	r22, 0x2012	; 0x802012 <PWRight>
     770:	70 91 13 20 	lds	r23, 0x2013	; 0x802013 <PWRight+0x1>
     774:	80 91 14 20 	lds	r24, 0x2014	; 0x802014 <PWRight+0x2>
     778:	90 91 15 20 	lds	r25, 0x2015	; 0x802015 <PWRight+0x3>
     77c:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
     780:	0e 94 45 07 	call	0xe8a	; 0xe8a <__fixunssfsi>
     784:	60 93 2a 08 	sts	0x082A, r22	; 0x80082a <__TEXT_REGION_LENGTH__+0x70082a>
     788:	70 93 2b 08 	sts	0x082B, r23	; 0x80082b <__TEXT_REGION_LENGTH__+0x70082b>
		TCC0_INTCTRLB|=PMIC_LOLVLEX_bm<<4;//gear's interrupts back on
     78c:	f8 01       	movw	r30, r16
     78e:	80 81       	ld	r24, Z
     790:	80 61       	ori	r24, 0x10	; 16
     792:	80 83       	st	Z, r24
		cycle++;
     794:	80 91 24 20 	lds	r24, 0x2024	; 0x802024 <cycle>
     798:	90 91 25 20 	lds	r25, 0x2025	; 0x802025 <cycle+0x1>
     79c:	01 96       	adiw	r24, 0x01	; 1
     79e:	80 93 24 20 	sts	0x2024, r24	; 0x802024 <cycle>
     7a2:	90 93 25 20 	sts	0x2025, r25	; 0x802025 <cycle+0x1>
		break;
     7a6:	3d c0       	rjmp	.+122    	; 0x822 <ChangeState+0x112>
	case 1:
		TCC0_INTCTRLB &= ~(uint8_t)((PMIC_LOLVLEX_bm<<2)|(PMIC_LOLVLEX_bm<<4));//check this line if error=================
     7a8:	07 e0       	ldi	r16, 0x07	; 7
     7aa:	18 e0       	ldi	r17, 0x08	; 8
     7ac:	f8 01       	movw	r30, r16
     7ae:	80 81       	ld	r24, Z
     7b0:	8b 7e       	andi	r24, 0xEB	; 235
     7b2:	80 83       	st	Z, r24
		TCC0_CCA = (uint16_t)(((double)CLKPER))*PWLeft;//turning right 
     7b4:	20 e0       	ldi	r18, 0x00	; 0
     7b6:	30 e4       	ldi	r19, 0x40	; 64
     7b8:	4c e1       	ldi	r20, 0x1C	; 28
     7ba:	55 e4       	ldi	r21, 0x45	; 69
     7bc:	60 91 0e 20 	lds	r22, 0x200E	; 0x80200e <PWLeft>
     7c0:	70 91 0f 20 	lds	r23, 0x200F	; 0x80200f <PWLeft+0x1>
     7c4:	80 91 10 20 	lds	r24, 0x2010	; 0x802010 <PWLeft+0x2>
     7c8:	90 91 11 20 	lds	r25, 0x2011	; 0x802011 <PWLeft+0x3>
     7cc:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
     7d0:	0e 94 45 07 	call	0xe8a	; 0xe8a <__fixunssfsi>
     7d4:	60 93 28 08 	sts	0x0828, r22	; 0x800828 <__TEXT_REGION_LENGTH__+0x700828>
     7d8:	70 93 29 08 	sts	0x0829, r23	; 0x800829 <__TEXT_REGION_LENGTH__+0x700829>
		TCC0_INTCTRLB&=0xcf;//turn off gear's interrupts
     7dc:	f8 01       	movw	r30, r16
     7de:	80 81       	ld	r24, Z
     7e0:	8f 7c       	andi	r24, 0xCF	; 207
     7e2:	80 83       	st	Z, r24
		break;
     7e4:	1e c0       	rjmp	.+60     	; 0x822 <ChangeState+0x112>
	case 2:
		TCC0_INTCTRLB&= ~(uint8_t)((PMIC_LOLVLEX_bm)|(PMIC_LOLVLEX_bm<<4));//check this line if error=================
     7e6:	07 e0       	ldi	r16, 0x07	; 7
     7e8:	18 e0       	ldi	r17, 0x08	; 8
     7ea:	f8 01       	movw	r30, r16
     7ec:	80 81       	ld	r24, Z
     7ee:	8e 7e       	andi	r24, 0xEE	; 238
     7f0:	80 83       	st	Z, r24
		TCC0_CCB=(uint16_t)(((double)CLKPER))*PWRight;
     7f2:	20 e0       	ldi	r18, 0x00	; 0
     7f4:	30 e4       	ldi	r19, 0x40	; 64
     7f6:	4c e1       	ldi	r20, 0x1C	; 28
     7f8:	55 e4       	ldi	r21, 0x45	; 69
     7fa:	60 91 12 20 	lds	r22, 0x2012	; 0x802012 <PWRight>
     7fe:	70 91 13 20 	lds	r23, 0x2013	; 0x802013 <PWRight+0x1>
     802:	80 91 14 20 	lds	r24, 0x2014	; 0x802014 <PWRight+0x2>
     806:	90 91 15 20 	lds	r25, 0x2015	; 0x802015 <PWRight+0x3>
     80a:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
     80e:	0e 94 45 07 	call	0xe8a	; 0xe8a <__fixunssfsi>
     812:	60 93 2a 08 	sts	0x082A, r22	; 0x80082a <__TEXT_REGION_LENGTH__+0x70082a>
     816:	70 93 2b 08 	sts	0x082B, r23	; 0x80082b <__TEXT_REGION_LENGTH__+0x70082b>
		TCC0_INTCTRLB&=0xcf;//turn off gear's interrupts
     81a:	f8 01       	movw	r30, r16
     81c:	80 81       	ld	r24, Z
     81e:	8f 7c       	andi	r24, 0xCF	; 207
     820:	80 83       	st	Z, r24
		break;
	}
	count=0;
     822:	10 92 26 20 	sts	0x2026, r1	; 0x802026 <count>
     826:	10 92 27 20 	sts	0x2027, r1	; 0x802027 <count+0x1>
	state=newState;
     82a:	c0 93 28 20 	sts	0x2028, r28	; 0x802028 <state>
     82e:	d0 93 29 20 	sts	0x2029, r29	; 0x802029 <state+0x1>
}
     832:	df 91       	pop	r29
     834:	cf 91       	pop	r28
     836:	1f 91       	pop	r17
     838:	0f 91       	pop	r16
     83a:	08 95       	ret

0000083c <PwmUpdate>:

void PwmUpdate()
{
     83c:	cf 92       	push	r12
     83e:	df 92       	push	r13
     840:	ef 92       	push	r14
     842:	ff 92       	push	r15
	PWLeft-=((2.0/(1.0+exp(-0.05*(float)((TARGETV*DIFFERL)-countL))))-1.0)*(.03);
     844:	60 91 1e 20 	lds	r22, 0x201E	; 0x80201e <countL>
     848:	70 91 1f 20 	lds	r23, 0x201F	; 0x80201f <countL+0x1>
     84c:	07 2e       	mov	r0, r23
     84e:	00 0c       	add	r0, r0
     850:	88 0b       	sbc	r24, r24
     852:	99 0b       	sbc	r25, r25
     854:	0e 94 76 07 	call	0xeec	; 0xeec <__floatsisf>
     858:	9b 01       	movw	r18, r22
     85a:	ac 01       	movw	r20, r24
     85c:	60 e0       	ldi	r22, 0x00	; 0
     85e:	70 e4       	ldi	r23, 0x40	; 64
     860:	82 e1       	ldi	r24, 0x12	; 18
     862:	93 e4       	ldi	r25, 0x43	; 67
     864:	0e 94 27 06 	call	0xc4e	; 0xc4e <__subsf3>
     868:	2d ec       	ldi	r18, 0xCD	; 205
     86a:	3c ec       	ldi	r19, 0xCC	; 204
     86c:	4c e4       	ldi	r20, 0x4C	; 76
     86e:	5d eb       	ldi	r21, 0xBD	; 189
     870:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
     874:	0e 94 13 07 	call	0xe26	; 0xe26 <exp>
     878:	20 e0       	ldi	r18, 0x00	; 0
     87a:	30 e0       	ldi	r19, 0x00	; 0
     87c:	40 e8       	ldi	r20, 0x80	; 128
     87e:	5f e3       	ldi	r21, 0x3F	; 63
     880:	0e 94 28 06 	call	0xc50	; 0xc50 <__addsf3>
     884:	9b 01       	movw	r18, r22
     886:	ac 01       	movw	r20, r24
     888:	60 e0       	ldi	r22, 0x00	; 0
     88a:	70 e0       	ldi	r23, 0x00	; 0
     88c:	80 e0       	ldi	r24, 0x00	; 0
     88e:	90 e4       	ldi	r25, 0x40	; 64
     890:	0e 94 99 06 	call	0xd32	; 0xd32 <__divsf3>
     894:	20 e0       	ldi	r18, 0x00	; 0
     896:	30 e0       	ldi	r19, 0x00	; 0
     898:	40 e8       	ldi	r20, 0x80	; 128
     89a:	5f e3       	ldi	r21, 0x3F	; 63
     89c:	0e 94 27 06 	call	0xc4e	; 0xc4e <__subsf3>
     8a0:	2f e8       	ldi	r18, 0x8F	; 143
     8a2:	32 ec       	ldi	r19, 0xC2	; 194
     8a4:	45 ef       	ldi	r20, 0xF5	; 245
     8a6:	5c e3       	ldi	r21, 0x3C	; 60
     8a8:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
     8ac:	9b 01       	movw	r18, r22
     8ae:	ac 01       	movw	r20, r24
     8b0:	60 91 0e 20 	lds	r22, 0x200E	; 0x80200e <PWLeft>
     8b4:	70 91 0f 20 	lds	r23, 0x200F	; 0x80200f <PWLeft+0x1>
     8b8:	80 91 10 20 	lds	r24, 0x2010	; 0x802010 <PWLeft+0x2>
     8bc:	90 91 11 20 	lds	r25, 0x2011	; 0x802011 <PWLeft+0x3>
     8c0:	0e 94 27 06 	call	0xc4e	; 0xc4e <__subsf3>
     8c4:	6b 01       	movw	r12, r22
     8c6:	7c 01       	movw	r14, r24
     8c8:	60 93 0e 20 	sts	0x200E, r22	; 0x80200e <PWLeft>
     8cc:	70 93 0f 20 	sts	0x200F, r23	; 0x80200f <PWLeft+0x1>
     8d0:	80 93 10 20 	sts	0x2010, r24	; 0x802010 <PWLeft+0x2>
     8d4:	90 93 11 20 	sts	0x2011, r25	; 0x802011 <PWLeft+0x3>
	PWRight-=((2.0/(1.0+exp(-0.05*(float)(TARGETV-countR))))-1.0)*(.03);
     8d8:	80 91 20 20 	lds	r24, 0x2020	; 0x802020 <countR>
     8dc:	90 91 21 20 	lds	r25, 0x2021	; 0x802021 <countR+0x1>
     8e0:	66 e9       	ldi	r22, 0x96	; 150
     8e2:	70 e0       	ldi	r23, 0x00	; 0
     8e4:	68 1b       	sub	r22, r24
     8e6:	79 0b       	sbc	r23, r25
     8e8:	07 2e       	mov	r0, r23
     8ea:	00 0c       	add	r0, r0
     8ec:	88 0b       	sbc	r24, r24
     8ee:	99 0b       	sbc	r25, r25
     8f0:	0e 94 76 07 	call	0xeec	; 0xeec <__floatsisf>
     8f4:	2d ec       	ldi	r18, 0xCD	; 205
     8f6:	3c ec       	ldi	r19, 0xCC	; 204
     8f8:	4c e4       	ldi	r20, 0x4C	; 76
     8fa:	5d eb       	ldi	r21, 0xBD	; 189
     8fc:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
     900:	0e 94 13 07 	call	0xe26	; 0xe26 <exp>
     904:	20 e0       	ldi	r18, 0x00	; 0
     906:	30 e0       	ldi	r19, 0x00	; 0
     908:	40 e8       	ldi	r20, 0x80	; 128
     90a:	5f e3       	ldi	r21, 0x3F	; 63
     90c:	0e 94 28 06 	call	0xc50	; 0xc50 <__addsf3>
     910:	9b 01       	movw	r18, r22
     912:	ac 01       	movw	r20, r24
     914:	60 e0       	ldi	r22, 0x00	; 0
     916:	70 e0       	ldi	r23, 0x00	; 0
     918:	80 e0       	ldi	r24, 0x00	; 0
     91a:	90 e4       	ldi	r25, 0x40	; 64
     91c:	0e 94 99 06 	call	0xd32	; 0xd32 <__divsf3>
     920:	20 e0       	ldi	r18, 0x00	; 0
     922:	30 e0       	ldi	r19, 0x00	; 0
     924:	40 e8       	ldi	r20, 0x80	; 128
     926:	5f e3       	ldi	r21, 0x3F	; 63
     928:	0e 94 27 06 	call	0xc4e	; 0xc4e <__subsf3>
     92c:	2f e8       	ldi	r18, 0x8F	; 143
     92e:	32 ec       	ldi	r19, 0xC2	; 194
     930:	45 ef       	ldi	r20, 0xF5	; 245
     932:	5c e3       	ldi	r21, 0x3C	; 60
     934:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
     938:	9b 01       	movw	r18, r22
     93a:	ac 01       	movw	r20, r24
     93c:	60 91 12 20 	lds	r22, 0x2012	; 0x802012 <PWRight>
     940:	70 91 13 20 	lds	r23, 0x2013	; 0x802013 <PWRight+0x1>
     944:	80 91 14 20 	lds	r24, 0x2014	; 0x802014 <PWRight+0x2>
     948:	90 91 15 20 	lds	r25, 0x2015	; 0x802015 <PWRight+0x3>
     94c:	0e 94 27 06 	call	0xc4e	; 0xc4e <__subsf3>
     950:	60 93 12 20 	sts	0x2012, r22	; 0x802012 <PWRight>
     954:	70 93 13 20 	sts	0x2013, r23	; 0x802013 <PWRight+0x1>
     958:	80 93 14 20 	sts	0x2014, r24	; 0x802014 <PWRight+0x2>
     95c:	90 93 15 20 	sts	0x2015, r25	; 0x802015 <PWRight+0x3>
	TCC0_CCA=(uint16_t)(((double)CLKPER))*PWLeft;
     960:	20 e0       	ldi	r18, 0x00	; 0
     962:	30 e4       	ldi	r19, 0x40	; 64
     964:	4c e1       	ldi	r20, 0x1C	; 28
     966:	55 e4       	ldi	r21, 0x45	; 69
     968:	c7 01       	movw	r24, r14
     96a:	b6 01       	movw	r22, r12
     96c:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
     970:	0e 94 45 07 	call	0xe8a	; 0xe8a <__fixunssfsi>
     974:	60 93 28 08 	sts	0x0828, r22	; 0x800828 <__TEXT_REGION_LENGTH__+0x700828>
     978:	70 93 29 08 	sts	0x0829, r23	; 0x800829 <__TEXT_REGION_LENGTH__+0x700829>
	TCC0_CCB=(uint16_t)(((double)CLKPER))*PWRight;
     97c:	20 e0       	ldi	r18, 0x00	; 0
     97e:	30 e4       	ldi	r19, 0x40	; 64
     980:	4c e1       	ldi	r20, 0x1C	; 28
     982:	55 e4       	ldi	r21, 0x45	; 69
     984:	60 91 12 20 	lds	r22, 0x2012	; 0x802012 <PWRight>
     988:	70 91 13 20 	lds	r23, 0x2013	; 0x802013 <PWRight+0x1>
     98c:	80 91 14 20 	lds	r24, 0x2014	; 0x802014 <PWRight+0x2>
     990:	90 91 15 20 	lds	r25, 0x2015	; 0x802015 <PWRight+0x3>
     994:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
     998:	0e 94 45 07 	call	0xe8a	; 0xe8a <__fixunssfsi>
     99c:	60 93 2a 08 	sts	0x082A, r22	; 0x80082a <__TEXT_REGION_LENGTH__+0x70082a>
     9a0:	70 93 2b 08 	sts	0x082B, r23	; 0x80082b <__TEXT_REGION_LENGTH__+0x70082b>
	countR=0;
     9a4:	10 92 20 20 	sts	0x2020, r1	; 0x802020 <countR>
     9a8:	10 92 21 20 	sts	0x2021, r1	; 0x802021 <countR+0x1>
	countL=0;
     9ac:	10 92 1e 20 	sts	0x201E, r1	; 0x80201e <countL>
     9b0:	10 92 1f 20 	sts	0x201F, r1	; 0x80201f <countL+0x1>
     9b4:	ff 90       	pop	r15
     9b6:	ef 90       	pop	r14
     9b8:	df 90       	pop	r13
     9ba:	cf 90       	pop	r12
     9bc:	08 95       	ret

000009be <main>:
	PulseCount++;
}


int main(void)
{
     9be:	4f 92       	push	r4
     9c0:	5f 92       	push	r5
     9c2:	6f 92       	push	r6
     9c4:	7f 92       	push	r7
     9c6:	8f 92       	push	r8
     9c8:	9f 92       	push	r9
     9ca:	af 92       	push	r10
     9cc:	bf 92       	push	r11
     9ce:	cf 92       	push	r12
     9d0:	df 92       	push	r13
     9d2:	ef 92       	push	r14
     9d4:	ff 92       	push	r15
     9d6:	0f 93       	push	r16
     9d8:	1f 93       	push	r17
     9da:	cf 93       	push	r28
     9dc:	df 93       	push	r29
	cli();		//clear
     9de:	f8 94       	cli
	SetUSART();
     9e0:	0e 94 20 03 	call	0x640	; 0x640 <SetUSART>
	SetPins();
     9e4:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <SetPins>
	SetInt();
     9e8:	0e 94 a2 02 	call	0x544	; 0x544 <SetInt>
	sei();		//set
     9ec:	78 94       	sei
				ChangeState(2);
			break;
		case 1://turning right 
			if(SignalIn==1&&countpuck>50)
			{
				TCC0_INTCTRLB&=0x3f;//puck's PWM off
     9ee:	c7 e0       	ldi	r28, 0x07	; 7
     9f0:	d8 e0       	ldi	r29, 0x08	; 8
				//PORTB_OUT^=0x30;
				bdirchange=2;
			}
			if(bdirchange==2&&gearcount>5)
			{
				PORTA_OUT^=0x02;//change direction pin
     9f2:	04 e0       	ldi	r16, 0x04	; 4
     9f4:	16 e0       	ldi	r17, 0x06	; 6
     9f6:	68 94       	set
     9f8:	99 24       	eor	r9, r9
     9fa:	91 f8       	bld	r9, 1
				PulseCount=0;
			}
			if(SignalIn==1&&countpuck>50)
			{
				TCC0_INTCTRLB&=0x3f;//puck's PWM off
				PORTB_OUT=0xf0;
     9fc:	0f 2e       	mov	r0, r31
     9fe:	f4 e2       	ldi	r31, 0x24	; 36
     a00:	af 2e       	mov	r10, r31
     a02:	f6 e0       	ldi	r31, 0x06	; 6
     a04:	bf 2e       	mov	r11, r31
     a06:	f0 2d       	mov	r31, r0
     a08:	0f 2e       	mov	r0, r31
     a0a:	f0 ef       	ldi	r31, 0xF0	; 240
     a0c:	8f 2e       	mov	r8, r31
     a0e:	f0 2d       	mov	r31, r0
	sei();		//set

    /* Replace with your application code */
    while (1) 
    {
	if(PWLeft<.05||PWRight<.05)
     a10:	c0 90 0e 20 	lds	r12, 0x200E	; 0x80200e <PWLeft>
     a14:	d0 90 0f 20 	lds	r13, 0x200F	; 0x80200f <PWLeft+0x1>
     a18:	e0 90 10 20 	lds	r14, 0x2010	; 0x802010 <PWLeft+0x2>
     a1c:	f0 90 11 20 	lds	r15, 0x2011	; 0x802011 <PWLeft+0x3>
     a20:	40 90 12 20 	lds	r4, 0x2012	; 0x802012 <PWRight>
     a24:	50 90 13 20 	lds	r5, 0x2013	; 0x802013 <PWRight+0x1>
     a28:	60 90 14 20 	lds	r6, 0x2014	; 0x802014 <PWRight+0x2>
     a2c:	70 90 15 20 	lds	r7, 0x2015	; 0x802015 <PWRight+0x3>
     a30:	2d ec       	ldi	r18, 0xCD	; 205
     a32:	3c ec       	ldi	r19, 0xCC	; 204
     a34:	4c e4       	ldi	r20, 0x4C	; 76
     a36:	5d e3       	ldi	r21, 0x3D	; 61
     a38:	c7 01       	movw	r24, r14
     a3a:	b6 01       	movw	r22, r12
     a3c:	0e 94 94 06 	call	0xd28	; 0xd28 <__cmpsf2>
     a40:	88 23       	and	r24, r24
     a42:	0c f4       	brge	.+2      	; 0xa46 <main+0x88>
     a44:	d5 c0       	rjmp	.+426    	; 0xbf0 <main+0x232>
     a46:	2d ec       	ldi	r18, 0xCD	; 205
     a48:	3c ec       	ldi	r19, 0xCC	; 204
     a4a:	4c e4       	ldi	r20, 0x4C	; 76
     a4c:	5d e3       	ldi	r21, 0x3D	; 61
     a4e:	c3 01       	movw	r24, r6
     a50:	b2 01       	movw	r22, r4
     a52:	0e 94 94 06 	call	0xd28	; 0xd28 <__cmpsf2>
     a56:	88 23       	and	r24, r24
     a58:	0c f4       	brge	.+2      	; 0xa5c <main+0x9e>
     a5a:	ca c0       	rjmp	.+404    	; 0xbf0 <main+0x232>
		PWLeft=.04;
		PWRight=.04;
		PORTE_OUT&=0b11111010;
		return 0;//===================================================
		}
		switch (state)
     a5c:	80 91 28 20 	lds	r24, 0x2028	; 0x802028 <state>
     a60:	90 91 29 20 	lds	r25, 0x2029	; 0x802029 <state+0x1>
     a64:	81 30       	cpi	r24, 0x01	; 1
     a66:	91 05       	cpc	r25, r1
     a68:	09 f4       	brne	.+2      	; 0xa6c <main+0xae>
     a6a:	8a c0       	rjmp	.+276    	; 0xb80 <main+0x1c2>
     a6c:	82 30       	cpi	r24, 0x02	; 2
     a6e:	91 05       	cpc	r25, r1
     a70:	09 f4       	brne	.+2      	; 0xa74 <main+0xb6>
     a72:	a2 c0       	rjmp	.+324    	; 0xbb8 <main+0x1fa>
     a74:	89 2b       	or	r24, r25
     a76:	e1 f6       	brne	.-72     	; 0xa30 <main+0x72>
		{
		case 0://going straight 
			if(SignalIn==1&&countpuck>25)//handle puck output
     a78:	80 91 1a 20 	lds	r24, 0x201A	; 0x80201a <SignalIn>
     a7c:	81 30       	cpi	r24, 0x01	; 1
     a7e:	d9 f4       	brne	.+54     	; 0xab6 <main+0xf8>
     a80:	80 91 16 20 	lds	r24, 0x2016	; 0x802016 <__data_end>
     a84:	90 91 17 20 	lds	r25, 0x2017	; 0x802017 <__data_end+0x1>
     a88:	4a 97       	sbiw	r24, 0x1a	; 26
     a8a:	ac f0       	brlt	.+42     	; 0xab6 <main+0xf8>
			{
				if(PulseCount>15&&PulseCount<45)
     a8c:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <PulseCount>
     a90:	90 91 1d 20 	lds	r25, 0x201D	; 0x80201d <PulseCount+0x1>
     a94:	40 97       	sbiw	r24, 0x10	; 16
     a96:	5c f0       	brlt	.+22     	; 0xaae <main+0xf0>
     a98:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <PulseCount>
     a9c:	90 91 1d 20 	lds	r25, 0x201D	; 0x80201d <PulseCount+0x1>
     aa0:	8d 97       	sbiw	r24, 0x2d	; 45
     aa2:	2c f4       	brge	.+10     	; 0xaae <main+0xf0>
				{	
					TCC0_INTCTRLB|=PMIC_LOLVLEX_bm<<6;//puck's PWM on
     aa4:	88 81       	ld	r24, Y
     aa6:	80 64       	ori	r24, 0x40	; 64
     aa8:	88 83       	st	Y, r24
					PORTB_OUT=0x00;
     aaa:	f5 01       	movw	r30, r10
     aac:	10 82       	st	Z, r1
				}
				PulseCount=0;
     aae:	10 92 1c 20 	sts	0x201C, r1	; 0x80201c <PulseCount>
     ab2:	10 92 1d 20 	sts	0x201D, r1	; 0x80201d <PulseCount+0x1>
			}
			if(SignalIn==1&&countpuck>50)
     ab6:	80 91 1a 20 	lds	r24, 0x201A	; 0x80201a <SignalIn>
     aba:	81 30       	cpi	r24, 0x01	; 1
     abc:	69 f4       	brne	.+26     	; 0xad8 <main+0x11a>
     abe:	80 91 16 20 	lds	r24, 0x2016	; 0x802016 <__data_end>
     ac2:	90 91 17 20 	lds	r25, 0x2017	; 0x802017 <__data_end+0x1>
     ac6:	c3 97       	sbiw	r24, 0x33	; 51
     ac8:	3c f0       	brlt	.+14     	; 0xad8 <main+0x11a>
			{
				TCC0_INTCTRLB&=0x3f;//puck's PWM off
     aca:	88 81       	ld	r24, Y
     acc:	8f 73       	andi	r24, 0x3F	; 63
     ace:	88 83       	st	Y, r24
				PORTB_OUT=0xf0;
     ad0:	f5 01       	movw	r30, r10
     ad2:	80 82       	st	Z, r8
				SignalIn=0;
     ad4:	10 92 1a 20 	sts	0x201A, r1	; 0x80201a <SignalIn>
			}//done handle puck output 
			if(bdirchange==1)//handle direction change
     ad8:	80 91 1b 20 	lds	r24, 0x201B	; 0x80201b <bdirchange>
     adc:	81 30       	cpi	r24, 0x01	; 1
     ade:	49 f4       	brne	.+18     	; 0xaf2 <main+0x134>
			{
				gearcount=0;
     ae0:	10 92 18 20 	sts	0x2018, r1	; 0x802018 <gearcount>
     ae4:	10 92 19 20 	sts	0x2019, r1	; 0x802019 <gearcount+0x1>
				TCC0_INTCTRLB&=0xcf;//turn off gear's interrupts
     ae8:	88 81       	ld	r24, Y
     aea:	8f 7c       	andi	r24, 0xCF	; 207
     aec:	88 83       	st	Y, r24
				//PORTB_OUT^=0x30;
				bdirchange=2;
     aee:	90 92 1b 20 	sts	0x201B, r9	; 0x80201b <bdirchange>
			}
			if(bdirchange==2&&gearcount>5)
     af2:	80 91 1b 20 	lds	r24, 0x201B	; 0x80201b <bdirchange>
     af6:	82 30       	cpi	r24, 0x02	; 2
     af8:	99 f4       	brne	.+38     	; 0xb20 <main+0x162>
     afa:	80 91 18 20 	lds	r24, 0x2018	; 0x802018 <gearcount>
     afe:	90 91 19 20 	lds	r25, 0x2019	; 0x802019 <gearcount+0x1>
     b02:	06 97       	sbiw	r24, 0x06	; 6
     b04:	6c f0       	brlt	.+26     	; 0xb20 <main+0x162>
			{
				PORTA_OUT^=0x02;//change direction pin
     b06:	f8 01       	movw	r30, r16
     b08:	80 81       	ld	r24, Z
     b0a:	89 25       	eor	r24, r9
     b0c:	80 83       	st	Z, r24
				TCC0_INTCTRLB|=PMIC_LOLVLEX_bm<<4;//gear's interrupts back on
     b0e:	88 81       	ld	r24, Y
     b10:	80 61       	ori	r24, 0x10	; 16
     b12:	88 83       	st	Y, r24
				gearcount=0;
     b14:	10 92 18 20 	sts	0x2018, r1	; 0x802018 <gearcount>
     b18:	10 92 19 20 	sts	0x2019, r1	; 0x802019 <gearcount+0x1>
				//PORTB_OUT=0xf0;
				bdirchange=0;
     b1c:	10 92 1b 20 	sts	0x201B, r1	; 0x80201b <bdirchange>
			}//done with handling direction change 
			if(countUpdate>=10)
     b20:	80 91 22 20 	lds	r24, 0x2022	; 0x802022 <countUpdate>
     b24:	90 91 23 20 	lds	r25, 0x2023	; 0x802023 <countUpdate+0x1>
     b28:	0a 97       	sbiw	r24, 0x0a	; 10
     b2a:	34 f0       	brlt	.+12     	; 0xb38 <main+0x17a>
			{
				countUpdate=0;
     b2c:	10 92 22 20 	sts	0x2022, r1	; 0x802022 <countUpdate>
     b30:	10 92 23 20 	sts	0x2023, r1	; 0x802023 <countUpdate+0x1>
				PwmUpdate();
     b34:	0e 94 1e 04 	call	0x83c	; 0x83c <PwmUpdate>
			}
			if(count>=1000 && (cycle%2)==0)
     b38:	80 91 26 20 	lds	r24, 0x2026	; 0x802026 <count>
     b3c:	90 91 27 20 	lds	r25, 0x2027	; 0x802027 <count+0x1>
     b40:	88 3e       	cpi	r24, 0xE8	; 232
     b42:	93 40       	sbci	r25, 0x03	; 3
     b44:	54 f0       	brlt	.+20     	; 0xb5a <main+0x19c>
     b46:	80 91 24 20 	lds	r24, 0x2024	; 0x802024 <cycle>
     b4a:	90 91 25 20 	lds	r25, 0x2025	; 0x802025 <cycle+0x1>
     b4e:	80 fd       	sbrc	r24, 0
     b50:	04 c0       	rjmp	.+8      	; 0xb5a <main+0x19c>
				ChangeState(1);
     b52:	81 e0       	ldi	r24, 0x01	; 1
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	0e 94 88 03 	call	0x710	; 0x710 <ChangeState>
			if(count>=1000 && (cycle%2)!=0)	
     b5a:	80 91 26 20 	lds	r24, 0x2026	; 0x802026 <count>
     b5e:	90 91 27 20 	lds	r25, 0x2027	; 0x802027 <count+0x1>
     b62:	88 3e       	cpi	r24, 0xE8	; 232
     b64:	93 40       	sbci	r25, 0x03	; 3
     b66:	0c f4       	brge	.+2      	; 0xb6a <main+0x1ac>
     b68:	53 cf       	rjmp	.-346    	; 0xa10 <main+0x52>
     b6a:	80 91 24 20 	lds	r24, 0x2024	; 0x802024 <cycle>
     b6e:	90 91 25 20 	lds	r25, 0x2025	; 0x802025 <cycle+0x1>
     b72:	80 ff       	sbrs	r24, 0
     b74:	4d cf       	rjmp	.-358    	; 0xa10 <main+0x52>
				ChangeState(2);
     b76:	82 e0       	ldi	r24, 0x02	; 2
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	0e 94 88 03 	call	0x710	; 0x710 <ChangeState>
     b7e:	48 cf       	rjmp	.-368    	; 0xa10 <main+0x52>
			break;
		case 1://turning right 
			if(SignalIn==1&&countpuck>50)
     b80:	80 91 1a 20 	lds	r24, 0x201A	; 0x80201a <SignalIn>
     b84:	81 30       	cpi	r24, 0x01	; 1
     b86:	59 f4       	brne	.+22     	; 0xb9e <main+0x1e0>
     b88:	80 91 16 20 	lds	r24, 0x2016	; 0x802016 <__data_end>
     b8c:	90 91 17 20 	lds	r25, 0x2017	; 0x802017 <__data_end+0x1>
     b90:	c3 97       	sbiw	r24, 0x33	; 51
     b92:	2c f0       	brlt	.+10     	; 0xb9e <main+0x1e0>
			{
				TCC0_INTCTRLB&=0x3f;//puck's PWM off
     b94:	88 81       	ld	r24, Y
     b96:	8f 73       	andi	r24, 0x3F	; 63
     b98:	88 83       	st	Y, r24
				SignalIn=0;
     b9a:	10 92 1a 20 	sts	0x201A, r1	; 0x80201a <SignalIn>
			}//done handle puck output
			if(countL>=9350)//5150
     b9e:	80 91 1e 20 	lds	r24, 0x201E	; 0x80201e <countL>
     ba2:	90 91 1f 20 	lds	r25, 0x201F	; 0x80201f <countL+0x1>
     ba6:	86 38       	cpi	r24, 0x86	; 134
     ba8:	94 42       	sbci	r25, 0x24	; 36
     baa:	0c f4       	brge	.+2      	; 0xbae <main+0x1f0>
     bac:	31 cf       	rjmp	.-414    	; 0xa10 <main+0x52>
				ChangeState(0);
     bae:	80 e0       	ldi	r24, 0x00	; 0
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	0e 94 88 03 	call	0x710	; 0x710 <ChangeState>
     bb6:	2c cf       	rjmp	.-424    	; 0xa10 <main+0x52>
			break;
		case 2://turning left
			if(SignalIn==1&&countpuck>50)
     bb8:	80 91 1a 20 	lds	r24, 0x201A	; 0x80201a <SignalIn>
     bbc:	81 30       	cpi	r24, 0x01	; 1
     bbe:	59 f4       	brne	.+22     	; 0xbd6 <main+0x218>
     bc0:	80 91 16 20 	lds	r24, 0x2016	; 0x802016 <__data_end>
     bc4:	90 91 17 20 	lds	r25, 0x2017	; 0x802017 <__data_end+0x1>
     bc8:	c3 97       	sbiw	r24, 0x33	; 51
     bca:	2c f0       	brlt	.+10     	; 0xbd6 <main+0x218>
			{
				TCC0_INTCTRLB&=0x3f;//puck's PWM off
     bcc:	88 81       	ld	r24, Y
     bce:	8f 73       	andi	r24, 0x3F	; 63
     bd0:	88 83       	st	Y, r24
				SignalIn=0;
     bd2:	10 92 1a 20 	sts	0x201A, r1	; 0x80201a <SignalIn>
			}//done handle puck output
			if(countR>=9000)//49000
     bd6:	80 91 20 20 	lds	r24, 0x2020	; 0x802020 <countR>
     bda:	90 91 21 20 	lds	r25, 0x2021	; 0x802021 <countR+0x1>
     bde:	88 32       	cpi	r24, 0x28	; 40
     be0:	93 42       	sbci	r25, 0x23	; 35
     be2:	0c f4       	brge	.+2      	; 0xbe6 <main+0x228>
     be4:	15 cf       	rjmp	.-470    	; 0xa10 <main+0x52>
				ChangeState(0);
     be6:	80 e0       	ldi	r24, 0x00	; 0
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	0e 94 88 03 	call	0x710	; 0x710 <ChangeState>
     bee:	10 cf       	rjmp	.-480    	; 0xa10 <main+0x52>
    /* Replace with your application code */
    while (1) 
    {
	if(PWLeft<.05||PWRight<.05)
		{//failsafe if its overdriving the motors 
		PORTB_OUT=~0x50;
     bf0:	8f ea       	ldi	r24, 0xAF	; 175
     bf2:	80 93 24 06 	sts	0x0624, r24	; 0x800624 <__TEXT_REGION_LENGTH__+0x700624>
		PWLeft=.04;
     bf6:	8a e0       	ldi	r24, 0x0A	; 10
     bf8:	97 ed       	ldi	r25, 0xD7	; 215
     bfa:	a3 e2       	ldi	r26, 0x23	; 35
     bfc:	bd e3       	ldi	r27, 0x3D	; 61
     bfe:	80 93 0e 20 	sts	0x200E, r24	; 0x80200e <PWLeft>
     c02:	90 93 0f 20 	sts	0x200F, r25	; 0x80200f <PWLeft+0x1>
     c06:	a0 93 10 20 	sts	0x2010, r26	; 0x802010 <PWLeft+0x2>
     c0a:	b0 93 11 20 	sts	0x2011, r27	; 0x802011 <PWLeft+0x3>
		PWRight=.04;
     c0e:	80 93 12 20 	sts	0x2012, r24	; 0x802012 <PWRight>
     c12:	90 93 13 20 	sts	0x2013, r25	; 0x802013 <PWRight+0x1>
     c16:	a0 93 14 20 	sts	0x2014, r26	; 0x802014 <PWRight+0x2>
     c1a:	b0 93 15 20 	sts	0x2015, r27	; 0x802015 <PWRight+0x3>
		PORTE_OUT&=0b11111010;
     c1e:	e4 e8       	ldi	r30, 0x84	; 132
     c20:	f6 e0       	ldi	r31, 0x06	; 6
     c22:	80 81       	ld	r24, Z
     c24:	8a 7f       	andi	r24, 0xFA	; 250
     c26:	80 83       	st	Z, r24
			}//done handle puck output
			if(countR>=9000)//49000
				ChangeState(0);
		}
    }
}
     c28:	80 e0       	ldi	r24, 0x00	; 0
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	df 91       	pop	r29
     c2e:	cf 91       	pop	r28
     c30:	1f 91       	pop	r17
     c32:	0f 91       	pop	r16
     c34:	ff 90       	pop	r15
     c36:	ef 90       	pop	r14
     c38:	df 90       	pop	r13
     c3a:	cf 90       	pop	r12
     c3c:	bf 90       	pop	r11
     c3e:	af 90       	pop	r10
     c40:	9f 90       	pop	r9
     c42:	8f 90       	pop	r8
     c44:	7f 90       	pop	r7
     c46:	6f 90       	pop	r6
     c48:	5f 90       	pop	r5
     c4a:	4f 90       	pop	r4
     c4c:	08 95       	ret

00000c4e <__subsf3>:
     c4e:	50 58       	subi	r21, 0x80	; 128

00000c50 <__addsf3>:
     c50:	bb 27       	eor	r27, r27
     c52:	aa 27       	eor	r26, r26
     c54:	0e 94 3f 06 	call	0xc7e	; 0xc7e <__addsf3x>
     c58:	0c 94 13 08 	jmp	0x1026	; 0x1026 <__fp_round>
     c5c:	0e 94 05 08 	call	0x100a	; 0x100a <__fp_pscA>
     c60:	38 f0       	brcs	.+14     	; 0xc70 <__addsf3+0x20>
     c62:	0e 94 0c 08 	call	0x1018	; 0x1018 <__fp_pscB>
     c66:	20 f0       	brcs	.+8      	; 0xc70 <__addsf3+0x20>
     c68:	39 f4       	brne	.+14     	; 0xc78 <__addsf3+0x28>
     c6a:	9f 3f       	cpi	r25, 0xFF	; 255
     c6c:	19 f4       	brne	.+6      	; 0xc74 <__addsf3+0x24>
     c6e:	26 f4       	brtc	.+8      	; 0xc78 <__addsf3+0x28>
     c70:	0c 94 db 07 	jmp	0xfb6	; 0xfb6 <__fp_nan>
     c74:	0e f4       	brtc	.+2      	; 0xc78 <__addsf3+0x28>
     c76:	e0 95       	com	r30
     c78:	e7 fb       	bst	r30, 7
     c7a:	0c 94 d5 07 	jmp	0xfaa	; 0xfaa <__fp_inf>

00000c7e <__addsf3x>:
     c7e:	e9 2f       	mov	r30, r25
     c80:	0e 94 24 08 	call	0x1048	; 0x1048 <__fp_split3>
     c84:	58 f3       	brcs	.-42     	; 0xc5c <__addsf3+0xc>
     c86:	ba 17       	cp	r27, r26
     c88:	62 07       	cpc	r22, r18
     c8a:	73 07       	cpc	r23, r19
     c8c:	84 07       	cpc	r24, r20
     c8e:	95 07       	cpc	r25, r21
     c90:	20 f0       	brcs	.+8      	; 0xc9a <__addsf3x+0x1c>
     c92:	79 f4       	brne	.+30     	; 0xcb2 <__addsf3x+0x34>
     c94:	a6 f5       	brtc	.+104    	; 0xcfe <__addsf3x+0x80>
     c96:	0c 94 46 08 	jmp	0x108c	; 0x108c <__fp_zero>
     c9a:	0e f4       	brtc	.+2      	; 0xc9e <__addsf3x+0x20>
     c9c:	e0 95       	com	r30
     c9e:	0b 2e       	mov	r0, r27
     ca0:	ba 2f       	mov	r27, r26
     ca2:	a0 2d       	mov	r26, r0
     ca4:	0b 01       	movw	r0, r22
     ca6:	b9 01       	movw	r22, r18
     ca8:	90 01       	movw	r18, r0
     caa:	0c 01       	movw	r0, r24
     cac:	ca 01       	movw	r24, r20
     cae:	a0 01       	movw	r20, r0
     cb0:	11 24       	eor	r1, r1
     cb2:	ff 27       	eor	r31, r31
     cb4:	59 1b       	sub	r21, r25
     cb6:	99 f0       	breq	.+38     	; 0xcde <__addsf3x+0x60>
     cb8:	59 3f       	cpi	r21, 0xF9	; 249
     cba:	50 f4       	brcc	.+20     	; 0xcd0 <__addsf3x+0x52>
     cbc:	50 3e       	cpi	r21, 0xE0	; 224
     cbe:	68 f1       	brcs	.+90     	; 0xd1a <__addsf3x+0x9c>
     cc0:	1a 16       	cp	r1, r26
     cc2:	f0 40       	sbci	r31, 0x00	; 0
     cc4:	a2 2f       	mov	r26, r18
     cc6:	23 2f       	mov	r18, r19
     cc8:	34 2f       	mov	r19, r20
     cca:	44 27       	eor	r20, r20
     ccc:	58 5f       	subi	r21, 0xF8	; 248
     cce:	f3 cf       	rjmp	.-26     	; 0xcb6 <__addsf3x+0x38>
     cd0:	46 95       	lsr	r20
     cd2:	37 95       	ror	r19
     cd4:	27 95       	ror	r18
     cd6:	a7 95       	ror	r26
     cd8:	f0 40       	sbci	r31, 0x00	; 0
     cda:	53 95       	inc	r21
     cdc:	c9 f7       	brne	.-14     	; 0xcd0 <__addsf3x+0x52>
     cde:	7e f4       	brtc	.+30     	; 0xcfe <__addsf3x+0x80>
     ce0:	1f 16       	cp	r1, r31
     ce2:	ba 0b       	sbc	r27, r26
     ce4:	62 0b       	sbc	r22, r18
     ce6:	73 0b       	sbc	r23, r19
     ce8:	84 0b       	sbc	r24, r20
     cea:	ba f0       	brmi	.+46     	; 0xd1a <__addsf3x+0x9c>
     cec:	91 50       	subi	r25, 0x01	; 1
     cee:	a1 f0       	breq	.+40     	; 0xd18 <__addsf3x+0x9a>
     cf0:	ff 0f       	add	r31, r31
     cf2:	bb 1f       	adc	r27, r27
     cf4:	66 1f       	adc	r22, r22
     cf6:	77 1f       	adc	r23, r23
     cf8:	88 1f       	adc	r24, r24
     cfa:	c2 f7       	brpl	.-16     	; 0xcec <__addsf3x+0x6e>
     cfc:	0e c0       	rjmp	.+28     	; 0xd1a <__addsf3x+0x9c>
     cfe:	ba 0f       	add	r27, r26
     d00:	62 1f       	adc	r22, r18
     d02:	73 1f       	adc	r23, r19
     d04:	84 1f       	adc	r24, r20
     d06:	48 f4       	brcc	.+18     	; 0xd1a <__addsf3x+0x9c>
     d08:	87 95       	ror	r24
     d0a:	77 95       	ror	r23
     d0c:	67 95       	ror	r22
     d0e:	b7 95       	ror	r27
     d10:	f7 95       	ror	r31
     d12:	9e 3f       	cpi	r25, 0xFE	; 254
     d14:	08 f0       	brcs	.+2      	; 0xd18 <__addsf3x+0x9a>
     d16:	b0 cf       	rjmp	.-160    	; 0xc78 <__addsf3+0x28>
     d18:	93 95       	inc	r25
     d1a:	88 0f       	add	r24, r24
     d1c:	08 f0       	brcs	.+2      	; 0xd20 <__addsf3x+0xa2>
     d1e:	99 27       	eor	r25, r25
     d20:	ee 0f       	add	r30, r30
     d22:	97 95       	ror	r25
     d24:	87 95       	ror	r24
     d26:	08 95       	ret

00000d28 <__cmpsf2>:
     d28:	0e 94 b1 07 	call	0xf62	; 0xf62 <__fp_cmp>
     d2c:	08 f4       	brcc	.+2      	; 0xd30 <__cmpsf2+0x8>
     d2e:	81 e0       	ldi	r24, 0x01	; 1
     d30:	08 95       	ret

00000d32 <__divsf3>:
     d32:	0e 94 ad 06 	call	0xd5a	; 0xd5a <__divsf3x>
     d36:	0c 94 13 08 	jmp	0x1026	; 0x1026 <__fp_round>
     d3a:	0e 94 0c 08 	call	0x1018	; 0x1018 <__fp_pscB>
     d3e:	58 f0       	brcs	.+22     	; 0xd56 <__divsf3+0x24>
     d40:	0e 94 05 08 	call	0x100a	; 0x100a <__fp_pscA>
     d44:	40 f0       	brcs	.+16     	; 0xd56 <__divsf3+0x24>
     d46:	29 f4       	brne	.+10     	; 0xd52 <__divsf3+0x20>
     d48:	5f 3f       	cpi	r21, 0xFF	; 255
     d4a:	29 f0       	breq	.+10     	; 0xd56 <__divsf3+0x24>
     d4c:	0c 94 d5 07 	jmp	0xfaa	; 0xfaa <__fp_inf>
     d50:	51 11       	cpse	r21, r1
     d52:	0c 94 47 08 	jmp	0x108e	; 0x108e <__fp_szero>
     d56:	0c 94 db 07 	jmp	0xfb6	; 0xfb6 <__fp_nan>

00000d5a <__divsf3x>:
     d5a:	0e 94 24 08 	call	0x1048	; 0x1048 <__fp_split3>
     d5e:	68 f3       	brcs	.-38     	; 0xd3a <__divsf3+0x8>

00000d60 <__divsf3_pse>:
     d60:	99 23       	and	r25, r25
     d62:	b1 f3       	breq	.-20     	; 0xd50 <__divsf3+0x1e>
     d64:	55 23       	and	r21, r21
     d66:	91 f3       	breq	.-28     	; 0xd4c <__divsf3+0x1a>
     d68:	95 1b       	sub	r25, r21
     d6a:	55 0b       	sbc	r21, r21
     d6c:	bb 27       	eor	r27, r27
     d6e:	aa 27       	eor	r26, r26
     d70:	62 17       	cp	r22, r18
     d72:	73 07       	cpc	r23, r19
     d74:	84 07       	cpc	r24, r20
     d76:	38 f0       	brcs	.+14     	; 0xd86 <__divsf3_pse+0x26>
     d78:	9f 5f       	subi	r25, 0xFF	; 255
     d7a:	5f 4f       	sbci	r21, 0xFF	; 255
     d7c:	22 0f       	add	r18, r18
     d7e:	33 1f       	adc	r19, r19
     d80:	44 1f       	adc	r20, r20
     d82:	aa 1f       	adc	r26, r26
     d84:	a9 f3       	breq	.-22     	; 0xd70 <__divsf3_pse+0x10>
     d86:	35 d0       	rcall	.+106    	; 0xdf2 <__divsf3_pse+0x92>
     d88:	0e 2e       	mov	r0, r30
     d8a:	3a f0       	brmi	.+14     	; 0xd9a <__divsf3_pse+0x3a>
     d8c:	e0 e8       	ldi	r30, 0x80	; 128
     d8e:	32 d0       	rcall	.+100    	; 0xdf4 <__divsf3_pse+0x94>
     d90:	91 50       	subi	r25, 0x01	; 1
     d92:	50 40       	sbci	r21, 0x00	; 0
     d94:	e6 95       	lsr	r30
     d96:	00 1c       	adc	r0, r0
     d98:	ca f7       	brpl	.-14     	; 0xd8c <__divsf3_pse+0x2c>
     d9a:	2b d0       	rcall	.+86     	; 0xdf2 <__divsf3_pse+0x92>
     d9c:	fe 2f       	mov	r31, r30
     d9e:	29 d0       	rcall	.+82     	; 0xdf2 <__divsf3_pse+0x92>
     da0:	66 0f       	add	r22, r22
     da2:	77 1f       	adc	r23, r23
     da4:	88 1f       	adc	r24, r24
     da6:	bb 1f       	adc	r27, r27
     da8:	26 17       	cp	r18, r22
     daa:	37 07       	cpc	r19, r23
     dac:	48 07       	cpc	r20, r24
     dae:	ab 07       	cpc	r26, r27
     db0:	b0 e8       	ldi	r27, 0x80	; 128
     db2:	09 f0       	breq	.+2      	; 0xdb6 <__divsf3_pse+0x56>
     db4:	bb 0b       	sbc	r27, r27
     db6:	80 2d       	mov	r24, r0
     db8:	bf 01       	movw	r22, r30
     dba:	ff 27       	eor	r31, r31
     dbc:	93 58       	subi	r25, 0x83	; 131
     dbe:	5f 4f       	sbci	r21, 0xFF	; 255
     dc0:	3a f0       	brmi	.+14     	; 0xdd0 <__divsf3_pse+0x70>
     dc2:	9e 3f       	cpi	r25, 0xFE	; 254
     dc4:	51 05       	cpc	r21, r1
     dc6:	78 f0       	brcs	.+30     	; 0xde6 <__divsf3_pse+0x86>
     dc8:	0c 94 d5 07 	jmp	0xfaa	; 0xfaa <__fp_inf>
     dcc:	0c 94 47 08 	jmp	0x108e	; 0x108e <__fp_szero>
     dd0:	5f 3f       	cpi	r21, 0xFF	; 255
     dd2:	e4 f3       	brlt	.-8      	; 0xdcc <__divsf3_pse+0x6c>
     dd4:	98 3e       	cpi	r25, 0xE8	; 232
     dd6:	d4 f3       	brlt	.-12     	; 0xdcc <__divsf3_pse+0x6c>
     dd8:	86 95       	lsr	r24
     dda:	77 95       	ror	r23
     ddc:	67 95       	ror	r22
     dde:	b7 95       	ror	r27
     de0:	f7 95       	ror	r31
     de2:	9f 5f       	subi	r25, 0xFF	; 255
     de4:	c9 f7       	brne	.-14     	; 0xdd8 <__divsf3_pse+0x78>
     de6:	88 0f       	add	r24, r24
     de8:	91 1d       	adc	r25, r1
     dea:	96 95       	lsr	r25
     dec:	87 95       	ror	r24
     dee:	97 f9       	bld	r25, 7
     df0:	08 95       	ret
     df2:	e1 e0       	ldi	r30, 0x01	; 1
     df4:	66 0f       	add	r22, r22
     df6:	77 1f       	adc	r23, r23
     df8:	88 1f       	adc	r24, r24
     dfa:	bb 1f       	adc	r27, r27
     dfc:	62 17       	cp	r22, r18
     dfe:	73 07       	cpc	r23, r19
     e00:	84 07       	cpc	r24, r20
     e02:	ba 07       	cpc	r27, r26
     e04:	20 f0       	brcs	.+8      	; 0xe0e <__divsf3_pse+0xae>
     e06:	62 1b       	sub	r22, r18
     e08:	73 0b       	sbc	r23, r19
     e0a:	84 0b       	sbc	r24, r20
     e0c:	ba 0b       	sbc	r27, r26
     e0e:	ee 1f       	adc	r30, r30
     e10:	88 f7       	brcc	.-30     	; 0xdf4 <__divsf3_pse+0x94>
     e12:	e0 95       	com	r30
     e14:	08 95       	ret
     e16:	29 f4       	brne	.+10     	; 0xe22 <__divsf3_pse+0xc2>
     e18:	16 f0       	brts	.+4      	; 0xe1e <__divsf3_pse+0xbe>
     e1a:	0c 94 d5 07 	jmp	0xfaa	; 0xfaa <__fp_inf>
     e1e:	0c 94 46 08 	jmp	0x108c	; 0x108c <__fp_zero>
     e22:	0c 94 db 07 	jmp	0xfb6	; 0xfb6 <__fp_nan>

00000e26 <exp>:
     e26:	0e 94 2c 08 	call	0x1058	; 0x1058 <__fp_splitA>
     e2a:	a8 f3       	brcs	.-22     	; 0xe16 <__divsf3_pse+0xb6>
     e2c:	96 38       	cpi	r25, 0x86	; 134
     e2e:	a0 f7       	brcc	.-24     	; 0xe18 <__divsf3_pse+0xb8>
     e30:	07 f8       	bld	r0, 7
     e32:	0f 92       	push	r0
     e34:	e8 94       	clt
     e36:	2b e3       	ldi	r18, 0x3B	; 59
     e38:	3a ea       	ldi	r19, 0xAA	; 170
     e3a:	48 eb       	ldi	r20, 0xB8	; 184
     e3c:	5f e7       	ldi	r21, 0x7F	; 127
     e3e:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <__mulsf3_pse>
     e42:	0f 92       	push	r0
     e44:	0f 92       	push	r0
     e46:	0f 92       	push	r0
     e48:	4d b7       	in	r20, 0x3d	; 61
     e4a:	5e b7       	in	r21, 0x3e	; 62
     e4c:	0f 92       	push	r0
     e4e:	0e 94 8f 08 	call	0x111e	; 0x111e <modf>
     e52:	e4 e4       	ldi	r30, 0x44	; 68
     e54:	f1 e0       	ldi	r31, 0x01	; 1
     e56:	0e 94 de 07 	call	0xfbc	; 0xfbc <__fp_powser>
     e5a:	4f 91       	pop	r20
     e5c:	5f 91       	pop	r21
     e5e:	ef 91       	pop	r30
     e60:	ff 91       	pop	r31
     e62:	e5 95       	asr	r30
     e64:	ee 1f       	adc	r30, r30
     e66:	ff 1f       	adc	r31, r31
     e68:	49 f0       	breq	.+18     	; 0xe7c <exp+0x56>
     e6a:	fe 57       	subi	r31, 0x7E	; 126
     e6c:	e0 68       	ori	r30, 0x80	; 128
     e6e:	44 27       	eor	r20, r20
     e70:	ee 0f       	add	r30, r30
     e72:	44 1f       	adc	r20, r20
     e74:	fa 95       	dec	r31
     e76:	e1 f7       	brne	.-8      	; 0xe70 <exp+0x4a>
     e78:	41 95       	neg	r20
     e7a:	55 0b       	sbc	r21, r21
     e7c:	0e 94 59 08 	call	0x10b2	; 0x10b2 <ldexp>
     e80:	0f 90       	pop	r0
     e82:	07 fe       	sbrs	r0, 7
     e84:	0c 94 4d 08 	jmp	0x109a	; 0x109a <inverse>
     e88:	08 95       	ret

00000e8a <__fixunssfsi>:
     e8a:	0e 94 2c 08 	call	0x1058	; 0x1058 <__fp_splitA>
     e8e:	88 f0       	brcs	.+34     	; 0xeb2 <__fixunssfsi+0x28>
     e90:	9f 57       	subi	r25, 0x7F	; 127
     e92:	98 f0       	brcs	.+38     	; 0xeba <__fixunssfsi+0x30>
     e94:	b9 2f       	mov	r27, r25
     e96:	99 27       	eor	r25, r25
     e98:	b7 51       	subi	r27, 0x17	; 23
     e9a:	b0 f0       	brcs	.+44     	; 0xec8 <__fixunssfsi+0x3e>
     e9c:	e1 f0       	breq	.+56     	; 0xed6 <__fixunssfsi+0x4c>
     e9e:	66 0f       	add	r22, r22
     ea0:	77 1f       	adc	r23, r23
     ea2:	88 1f       	adc	r24, r24
     ea4:	99 1f       	adc	r25, r25
     ea6:	1a f0       	brmi	.+6      	; 0xeae <__fixunssfsi+0x24>
     ea8:	ba 95       	dec	r27
     eaa:	c9 f7       	brne	.-14     	; 0xe9e <__fixunssfsi+0x14>
     eac:	14 c0       	rjmp	.+40     	; 0xed6 <__fixunssfsi+0x4c>
     eae:	b1 30       	cpi	r27, 0x01	; 1
     eb0:	91 f0       	breq	.+36     	; 0xed6 <__fixunssfsi+0x4c>
     eb2:	0e 94 46 08 	call	0x108c	; 0x108c <__fp_zero>
     eb6:	b1 e0       	ldi	r27, 0x01	; 1
     eb8:	08 95       	ret
     eba:	0c 94 46 08 	jmp	0x108c	; 0x108c <__fp_zero>
     ebe:	67 2f       	mov	r22, r23
     ec0:	78 2f       	mov	r23, r24
     ec2:	88 27       	eor	r24, r24
     ec4:	b8 5f       	subi	r27, 0xF8	; 248
     ec6:	39 f0       	breq	.+14     	; 0xed6 <__fixunssfsi+0x4c>
     ec8:	b9 3f       	cpi	r27, 0xF9	; 249
     eca:	cc f3       	brlt	.-14     	; 0xebe <__fixunssfsi+0x34>
     ecc:	86 95       	lsr	r24
     ece:	77 95       	ror	r23
     ed0:	67 95       	ror	r22
     ed2:	b3 95       	inc	r27
     ed4:	d9 f7       	brne	.-10     	; 0xecc <__fixunssfsi+0x42>
     ed6:	3e f4       	brtc	.+14     	; 0xee6 <__fixunssfsi+0x5c>
     ed8:	90 95       	com	r25
     eda:	80 95       	com	r24
     edc:	70 95       	com	r23
     ede:	61 95       	neg	r22
     ee0:	7f 4f       	sbci	r23, 0xFF	; 255
     ee2:	8f 4f       	sbci	r24, 0xFF	; 255
     ee4:	9f 4f       	sbci	r25, 0xFF	; 255
     ee6:	08 95       	ret

00000ee8 <__floatunsisf>:
     ee8:	e8 94       	clt
     eea:	09 c0       	rjmp	.+18     	; 0xefe <__floatsisf+0x12>

00000eec <__floatsisf>:
     eec:	97 fb       	bst	r25, 7
     eee:	3e f4       	brtc	.+14     	; 0xefe <__floatsisf+0x12>
     ef0:	90 95       	com	r25
     ef2:	80 95       	com	r24
     ef4:	70 95       	com	r23
     ef6:	61 95       	neg	r22
     ef8:	7f 4f       	sbci	r23, 0xFF	; 255
     efa:	8f 4f       	sbci	r24, 0xFF	; 255
     efc:	9f 4f       	sbci	r25, 0xFF	; 255
     efe:	99 23       	and	r25, r25
     f00:	a9 f0       	breq	.+42     	; 0xf2c <__floatsisf+0x40>
     f02:	f9 2f       	mov	r31, r25
     f04:	96 e9       	ldi	r25, 0x96	; 150
     f06:	bb 27       	eor	r27, r27
     f08:	93 95       	inc	r25
     f0a:	f6 95       	lsr	r31
     f0c:	87 95       	ror	r24
     f0e:	77 95       	ror	r23
     f10:	67 95       	ror	r22
     f12:	b7 95       	ror	r27
     f14:	f1 11       	cpse	r31, r1
     f16:	f8 cf       	rjmp	.-16     	; 0xf08 <__floatsisf+0x1c>
     f18:	fa f4       	brpl	.+62     	; 0xf58 <__floatsisf+0x6c>
     f1a:	bb 0f       	add	r27, r27
     f1c:	11 f4       	brne	.+4      	; 0xf22 <__floatsisf+0x36>
     f1e:	60 ff       	sbrs	r22, 0
     f20:	1b c0       	rjmp	.+54     	; 0xf58 <__floatsisf+0x6c>
     f22:	6f 5f       	subi	r22, 0xFF	; 255
     f24:	7f 4f       	sbci	r23, 0xFF	; 255
     f26:	8f 4f       	sbci	r24, 0xFF	; 255
     f28:	9f 4f       	sbci	r25, 0xFF	; 255
     f2a:	16 c0       	rjmp	.+44     	; 0xf58 <__floatsisf+0x6c>
     f2c:	88 23       	and	r24, r24
     f2e:	11 f0       	breq	.+4      	; 0xf34 <__floatsisf+0x48>
     f30:	96 e9       	ldi	r25, 0x96	; 150
     f32:	11 c0       	rjmp	.+34     	; 0xf56 <__floatsisf+0x6a>
     f34:	77 23       	and	r23, r23
     f36:	21 f0       	breq	.+8      	; 0xf40 <__floatsisf+0x54>
     f38:	9e e8       	ldi	r25, 0x8E	; 142
     f3a:	87 2f       	mov	r24, r23
     f3c:	76 2f       	mov	r23, r22
     f3e:	05 c0       	rjmp	.+10     	; 0xf4a <__floatsisf+0x5e>
     f40:	66 23       	and	r22, r22
     f42:	71 f0       	breq	.+28     	; 0xf60 <__floatsisf+0x74>
     f44:	96 e8       	ldi	r25, 0x86	; 134
     f46:	86 2f       	mov	r24, r22
     f48:	70 e0       	ldi	r23, 0x00	; 0
     f4a:	60 e0       	ldi	r22, 0x00	; 0
     f4c:	2a f0       	brmi	.+10     	; 0xf58 <__floatsisf+0x6c>
     f4e:	9a 95       	dec	r25
     f50:	66 0f       	add	r22, r22
     f52:	77 1f       	adc	r23, r23
     f54:	88 1f       	adc	r24, r24
     f56:	da f7       	brpl	.-10     	; 0xf4e <__floatsisf+0x62>
     f58:	88 0f       	add	r24, r24
     f5a:	96 95       	lsr	r25
     f5c:	87 95       	ror	r24
     f5e:	97 f9       	bld	r25, 7
     f60:	08 95       	ret

00000f62 <__fp_cmp>:
     f62:	99 0f       	add	r25, r25
     f64:	00 08       	sbc	r0, r0
     f66:	55 0f       	add	r21, r21
     f68:	aa 0b       	sbc	r26, r26
     f6a:	e0 e8       	ldi	r30, 0x80	; 128
     f6c:	fe ef       	ldi	r31, 0xFE	; 254
     f6e:	16 16       	cp	r1, r22
     f70:	17 06       	cpc	r1, r23
     f72:	e8 07       	cpc	r30, r24
     f74:	f9 07       	cpc	r31, r25
     f76:	c0 f0       	brcs	.+48     	; 0xfa8 <__fp_cmp+0x46>
     f78:	12 16       	cp	r1, r18
     f7a:	13 06       	cpc	r1, r19
     f7c:	e4 07       	cpc	r30, r20
     f7e:	f5 07       	cpc	r31, r21
     f80:	98 f0       	brcs	.+38     	; 0xfa8 <__fp_cmp+0x46>
     f82:	62 1b       	sub	r22, r18
     f84:	73 0b       	sbc	r23, r19
     f86:	84 0b       	sbc	r24, r20
     f88:	95 0b       	sbc	r25, r21
     f8a:	39 f4       	brne	.+14     	; 0xf9a <__fp_cmp+0x38>
     f8c:	0a 26       	eor	r0, r26
     f8e:	61 f0       	breq	.+24     	; 0xfa8 <__fp_cmp+0x46>
     f90:	23 2b       	or	r18, r19
     f92:	24 2b       	or	r18, r20
     f94:	25 2b       	or	r18, r21
     f96:	21 f4       	brne	.+8      	; 0xfa0 <__fp_cmp+0x3e>
     f98:	08 95       	ret
     f9a:	0a 26       	eor	r0, r26
     f9c:	09 f4       	brne	.+2      	; 0xfa0 <__fp_cmp+0x3e>
     f9e:	a1 40       	sbci	r26, 0x01	; 1
     fa0:	a6 95       	lsr	r26
     fa2:	8f ef       	ldi	r24, 0xFF	; 255
     fa4:	81 1d       	adc	r24, r1
     fa6:	81 1d       	adc	r24, r1
     fa8:	08 95       	ret

00000faa <__fp_inf>:
     faa:	97 f9       	bld	r25, 7
     fac:	9f 67       	ori	r25, 0x7F	; 127
     fae:	80 e8       	ldi	r24, 0x80	; 128
     fb0:	70 e0       	ldi	r23, 0x00	; 0
     fb2:	60 e0       	ldi	r22, 0x00	; 0
     fb4:	08 95       	ret

00000fb6 <__fp_nan>:
     fb6:	9f ef       	ldi	r25, 0xFF	; 255
     fb8:	80 ec       	ldi	r24, 0xC0	; 192
     fba:	08 95       	ret

00000fbc <__fp_powser>:
     fbc:	df 93       	push	r29
     fbe:	cf 93       	push	r28
     fc0:	1f 93       	push	r17
     fc2:	0f 93       	push	r16
     fc4:	ff 92       	push	r15
     fc6:	ef 92       	push	r14
     fc8:	df 92       	push	r13
     fca:	7b 01       	movw	r14, r22
     fcc:	8c 01       	movw	r16, r24
     fce:	68 94       	set
     fd0:	06 c0       	rjmp	.+12     	; 0xfde <__fp_powser+0x22>
     fd2:	da 2e       	mov	r13, r26
     fd4:	ef 01       	movw	r28, r30
     fd6:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__mulsf3x>
     fda:	fe 01       	movw	r30, r28
     fdc:	e8 94       	clt
     fde:	a5 91       	lpm	r26, Z+
     fe0:	25 91       	lpm	r18, Z+
     fe2:	35 91       	lpm	r19, Z+
     fe4:	45 91       	lpm	r20, Z+
     fe6:	55 91       	lpm	r21, Z+
     fe8:	a6 f3       	brts	.-24     	; 0xfd2 <__fp_powser+0x16>
     fea:	ef 01       	movw	r28, r30
     fec:	0e 94 3f 06 	call	0xc7e	; 0xc7e <__addsf3x>
     ff0:	fe 01       	movw	r30, r28
     ff2:	97 01       	movw	r18, r14
     ff4:	a8 01       	movw	r20, r16
     ff6:	da 94       	dec	r13
     ff8:	69 f7       	brne	.-38     	; 0xfd4 <__fp_powser+0x18>
     ffa:	df 90       	pop	r13
     ffc:	ef 90       	pop	r14
     ffe:	ff 90       	pop	r15
    1000:	0f 91       	pop	r16
    1002:	1f 91       	pop	r17
    1004:	cf 91       	pop	r28
    1006:	df 91       	pop	r29
    1008:	08 95       	ret

0000100a <__fp_pscA>:
    100a:	00 24       	eor	r0, r0
    100c:	0a 94       	dec	r0
    100e:	16 16       	cp	r1, r22
    1010:	17 06       	cpc	r1, r23
    1012:	18 06       	cpc	r1, r24
    1014:	09 06       	cpc	r0, r25
    1016:	08 95       	ret

00001018 <__fp_pscB>:
    1018:	00 24       	eor	r0, r0
    101a:	0a 94       	dec	r0
    101c:	12 16       	cp	r1, r18
    101e:	13 06       	cpc	r1, r19
    1020:	14 06       	cpc	r1, r20
    1022:	05 06       	cpc	r0, r21
    1024:	08 95       	ret

00001026 <__fp_round>:
    1026:	09 2e       	mov	r0, r25
    1028:	03 94       	inc	r0
    102a:	00 0c       	add	r0, r0
    102c:	11 f4       	brne	.+4      	; 0x1032 <__fp_round+0xc>
    102e:	88 23       	and	r24, r24
    1030:	52 f0       	brmi	.+20     	; 0x1046 <__fp_round+0x20>
    1032:	bb 0f       	add	r27, r27
    1034:	40 f4       	brcc	.+16     	; 0x1046 <__fp_round+0x20>
    1036:	bf 2b       	or	r27, r31
    1038:	11 f4       	brne	.+4      	; 0x103e <__fp_round+0x18>
    103a:	60 ff       	sbrs	r22, 0
    103c:	04 c0       	rjmp	.+8      	; 0x1046 <__fp_round+0x20>
    103e:	6f 5f       	subi	r22, 0xFF	; 255
    1040:	7f 4f       	sbci	r23, 0xFF	; 255
    1042:	8f 4f       	sbci	r24, 0xFF	; 255
    1044:	9f 4f       	sbci	r25, 0xFF	; 255
    1046:	08 95       	ret

00001048 <__fp_split3>:
    1048:	57 fd       	sbrc	r21, 7
    104a:	90 58       	subi	r25, 0x80	; 128
    104c:	44 0f       	add	r20, r20
    104e:	55 1f       	adc	r21, r21
    1050:	59 f0       	breq	.+22     	; 0x1068 <__fp_splitA+0x10>
    1052:	5f 3f       	cpi	r21, 0xFF	; 255
    1054:	71 f0       	breq	.+28     	; 0x1072 <__fp_splitA+0x1a>
    1056:	47 95       	ror	r20

00001058 <__fp_splitA>:
    1058:	88 0f       	add	r24, r24
    105a:	97 fb       	bst	r25, 7
    105c:	99 1f       	adc	r25, r25
    105e:	61 f0       	breq	.+24     	; 0x1078 <__fp_splitA+0x20>
    1060:	9f 3f       	cpi	r25, 0xFF	; 255
    1062:	79 f0       	breq	.+30     	; 0x1082 <__fp_splitA+0x2a>
    1064:	87 95       	ror	r24
    1066:	08 95       	ret
    1068:	12 16       	cp	r1, r18
    106a:	13 06       	cpc	r1, r19
    106c:	14 06       	cpc	r1, r20
    106e:	55 1f       	adc	r21, r21
    1070:	f2 cf       	rjmp	.-28     	; 0x1056 <__fp_split3+0xe>
    1072:	46 95       	lsr	r20
    1074:	f1 df       	rcall	.-30     	; 0x1058 <__fp_splitA>
    1076:	08 c0       	rjmp	.+16     	; 0x1088 <__fp_splitA+0x30>
    1078:	16 16       	cp	r1, r22
    107a:	17 06       	cpc	r1, r23
    107c:	18 06       	cpc	r1, r24
    107e:	99 1f       	adc	r25, r25
    1080:	f1 cf       	rjmp	.-30     	; 0x1064 <__fp_splitA+0xc>
    1082:	86 95       	lsr	r24
    1084:	71 05       	cpc	r23, r1
    1086:	61 05       	cpc	r22, r1
    1088:	08 94       	sec
    108a:	08 95       	ret

0000108c <__fp_zero>:
    108c:	e8 94       	clt

0000108e <__fp_szero>:
    108e:	bb 27       	eor	r27, r27
    1090:	66 27       	eor	r22, r22
    1092:	77 27       	eor	r23, r23
    1094:	cb 01       	movw	r24, r22
    1096:	97 f9       	bld	r25, 7
    1098:	08 95       	ret

0000109a <inverse>:
    109a:	9b 01       	movw	r18, r22
    109c:	ac 01       	movw	r20, r24
    109e:	60 e0       	ldi	r22, 0x00	; 0
    10a0:	70 e0       	ldi	r23, 0x00	; 0
    10a2:	80 e8       	ldi	r24, 0x80	; 128
    10a4:	9f e3       	ldi	r25, 0x3F	; 63
    10a6:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__divsf3>
    10aa:	0c 94 d5 07 	jmp	0xfaa	; 0xfaa <__fp_inf>
    10ae:	0c 94 30 09 	jmp	0x1260	; 0x1260 <__fp_mpack>

000010b2 <ldexp>:
    10b2:	0e 94 2c 08 	call	0x1058	; 0x1058 <__fp_splitA>
    10b6:	d8 f3       	brcs	.-10     	; 0x10ae <inverse+0x14>
    10b8:	99 23       	and	r25, r25
    10ba:	c9 f3       	breq	.-14     	; 0x10ae <inverse+0x14>
    10bc:	94 0f       	add	r25, r20
    10be:	51 1d       	adc	r21, r1
    10c0:	a3 f3       	brvs	.-24     	; 0x10aa <inverse+0x10>
    10c2:	91 50       	subi	r25, 0x01	; 1
    10c4:	50 40       	sbci	r21, 0x00	; 0
    10c6:	94 f0       	brlt	.+36     	; 0x10ec <ldexp+0x3a>
    10c8:	59 f0       	breq	.+22     	; 0x10e0 <ldexp+0x2e>
    10ca:	88 23       	and	r24, r24
    10cc:	32 f0       	brmi	.+12     	; 0x10da <ldexp+0x28>
    10ce:	66 0f       	add	r22, r22
    10d0:	77 1f       	adc	r23, r23
    10d2:	88 1f       	adc	r24, r24
    10d4:	91 50       	subi	r25, 0x01	; 1
    10d6:	50 40       	sbci	r21, 0x00	; 0
    10d8:	c1 f7       	brne	.-16     	; 0x10ca <ldexp+0x18>
    10da:	9e 3f       	cpi	r25, 0xFE	; 254
    10dc:	51 05       	cpc	r21, r1
    10de:	2c f7       	brge	.-54     	; 0x10aa <inverse+0x10>
    10e0:	88 0f       	add	r24, r24
    10e2:	91 1d       	adc	r25, r1
    10e4:	96 95       	lsr	r25
    10e6:	87 95       	ror	r24
    10e8:	97 f9       	bld	r25, 7
    10ea:	08 95       	ret
    10ec:	5f 3f       	cpi	r21, 0xFF	; 255
    10ee:	ac f0       	brlt	.+42     	; 0x111a <ldexp+0x68>
    10f0:	98 3e       	cpi	r25, 0xE8	; 232
    10f2:	9c f0       	brlt	.+38     	; 0x111a <ldexp+0x68>
    10f4:	bb 27       	eor	r27, r27
    10f6:	86 95       	lsr	r24
    10f8:	77 95       	ror	r23
    10fa:	67 95       	ror	r22
    10fc:	b7 95       	ror	r27
    10fe:	08 f4       	brcc	.+2      	; 0x1102 <ldexp+0x50>
    1100:	b1 60       	ori	r27, 0x01	; 1
    1102:	93 95       	inc	r25
    1104:	c1 f7       	brne	.-16     	; 0x10f6 <ldexp+0x44>
    1106:	bb 0f       	add	r27, r27
    1108:	58 f7       	brcc	.-42     	; 0x10e0 <ldexp+0x2e>
    110a:	11 f4       	brne	.+4      	; 0x1110 <ldexp+0x5e>
    110c:	60 ff       	sbrs	r22, 0
    110e:	e8 cf       	rjmp	.-48     	; 0x10e0 <ldexp+0x2e>
    1110:	6f 5f       	subi	r22, 0xFF	; 255
    1112:	7f 4f       	sbci	r23, 0xFF	; 255
    1114:	8f 4f       	sbci	r24, 0xFF	; 255
    1116:	9f 4f       	sbci	r25, 0xFF	; 255
    1118:	e3 cf       	rjmp	.-58     	; 0x10e0 <ldexp+0x2e>
    111a:	0c 94 47 08 	jmp	0x108e	; 0x108e <__fp_szero>

0000111e <modf>:
    111e:	fa 01       	movw	r30, r20
    1120:	dc 01       	movw	r26, r24
    1122:	aa 0f       	add	r26, r26
    1124:	bb 1f       	adc	r27, r27
    1126:	9b 01       	movw	r18, r22
    1128:	ac 01       	movw	r20, r24
    112a:	bf 57       	subi	r27, 0x7F	; 127
    112c:	28 f4       	brcc	.+10     	; 0x1138 <modf+0x1a>
    112e:	22 27       	eor	r18, r18
    1130:	33 27       	eor	r19, r19
    1132:	44 27       	eor	r20, r20
    1134:	50 78       	andi	r21, 0x80	; 128
    1136:	20 c0       	rjmp	.+64     	; 0x1178 <modf+0x5a>
    1138:	b7 51       	subi	r27, 0x17	; 23
    113a:	90 f4       	brcc	.+36     	; 0x1160 <modf+0x42>
    113c:	ab 2f       	mov	r26, r27
    113e:	00 24       	eor	r0, r0
    1140:	46 95       	lsr	r20
    1142:	37 95       	ror	r19
    1144:	27 95       	ror	r18
    1146:	01 1c       	adc	r0, r1
    1148:	a3 95       	inc	r26
    114a:	d2 f3       	brmi	.-12     	; 0x1140 <modf+0x22>
    114c:	00 20       	and	r0, r0
    114e:	71 f0       	breq	.+28     	; 0x116c <modf+0x4e>
    1150:	22 0f       	add	r18, r18
    1152:	33 1f       	adc	r19, r19
    1154:	44 1f       	adc	r20, r20
    1156:	b3 95       	inc	r27
    1158:	da f3       	brmi	.-10     	; 0x1150 <modf+0x32>
    115a:	0e d0       	rcall	.+28     	; 0x1178 <modf+0x5a>
    115c:	0c 94 27 06 	jmp	0xc4e	; 0xc4e <__subsf3>
    1160:	61 30       	cpi	r22, 0x01	; 1
    1162:	71 05       	cpc	r23, r1
    1164:	a0 e8       	ldi	r26, 0x80	; 128
    1166:	8a 07       	cpc	r24, r26
    1168:	b9 46       	sbci	r27, 0x69	; 105
    116a:	30 f4       	brcc	.+12     	; 0x1178 <modf+0x5a>
    116c:	9b 01       	movw	r18, r22
    116e:	ac 01       	movw	r20, r24
    1170:	66 27       	eor	r22, r22
    1172:	77 27       	eor	r23, r23
    1174:	88 27       	eor	r24, r24
    1176:	90 78       	andi	r25, 0x80	; 128
    1178:	30 96       	adiw	r30, 0x00	; 0
    117a:	21 f0       	breq	.+8      	; 0x1184 <modf+0x66>
    117c:	20 83       	st	Z, r18
    117e:	31 83       	std	Z+1, r19	; 0x01
    1180:	42 83       	std	Z+2, r20	; 0x02
    1182:	53 83       	std	Z+3, r21	; 0x03
    1184:	08 95       	ret

00001186 <__mulsf3>:
    1186:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__mulsf3x>
    118a:	0c 94 13 08 	jmp	0x1026	; 0x1026 <__fp_round>
    118e:	0e 94 05 08 	call	0x100a	; 0x100a <__fp_pscA>
    1192:	38 f0       	brcs	.+14     	; 0x11a2 <__mulsf3+0x1c>
    1194:	0e 94 0c 08 	call	0x1018	; 0x1018 <__fp_pscB>
    1198:	20 f0       	brcs	.+8      	; 0x11a2 <__mulsf3+0x1c>
    119a:	95 23       	and	r25, r21
    119c:	11 f0       	breq	.+4      	; 0x11a2 <__mulsf3+0x1c>
    119e:	0c 94 d5 07 	jmp	0xfaa	; 0xfaa <__fp_inf>
    11a2:	0c 94 db 07 	jmp	0xfb6	; 0xfb6 <__fp_nan>
    11a6:	11 24       	eor	r1, r1
    11a8:	0c 94 47 08 	jmp	0x108e	; 0x108e <__fp_szero>

000011ac <__mulsf3x>:
    11ac:	0e 94 24 08 	call	0x1048	; 0x1048 <__fp_split3>
    11b0:	70 f3       	brcs	.-36     	; 0x118e <__mulsf3+0x8>

000011b2 <__mulsf3_pse>:
    11b2:	95 9f       	mul	r25, r21
    11b4:	c1 f3       	breq	.-16     	; 0x11a6 <__mulsf3+0x20>
    11b6:	95 0f       	add	r25, r21
    11b8:	50 e0       	ldi	r21, 0x00	; 0
    11ba:	55 1f       	adc	r21, r21
    11bc:	62 9f       	mul	r22, r18
    11be:	f0 01       	movw	r30, r0
    11c0:	72 9f       	mul	r23, r18
    11c2:	bb 27       	eor	r27, r27
    11c4:	f0 0d       	add	r31, r0
    11c6:	b1 1d       	adc	r27, r1
    11c8:	63 9f       	mul	r22, r19
    11ca:	aa 27       	eor	r26, r26
    11cc:	f0 0d       	add	r31, r0
    11ce:	b1 1d       	adc	r27, r1
    11d0:	aa 1f       	adc	r26, r26
    11d2:	64 9f       	mul	r22, r20
    11d4:	66 27       	eor	r22, r22
    11d6:	b0 0d       	add	r27, r0
    11d8:	a1 1d       	adc	r26, r1
    11da:	66 1f       	adc	r22, r22
    11dc:	82 9f       	mul	r24, r18
    11de:	22 27       	eor	r18, r18
    11e0:	b0 0d       	add	r27, r0
    11e2:	a1 1d       	adc	r26, r1
    11e4:	62 1f       	adc	r22, r18
    11e6:	73 9f       	mul	r23, r19
    11e8:	b0 0d       	add	r27, r0
    11ea:	a1 1d       	adc	r26, r1
    11ec:	62 1f       	adc	r22, r18
    11ee:	83 9f       	mul	r24, r19
    11f0:	a0 0d       	add	r26, r0
    11f2:	61 1d       	adc	r22, r1
    11f4:	22 1f       	adc	r18, r18
    11f6:	74 9f       	mul	r23, r20
    11f8:	33 27       	eor	r19, r19
    11fa:	a0 0d       	add	r26, r0
    11fc:	61 1d       	adc	r22, r1
    11fe:	23 1f       	adc	r18, r19
    1200:	84 9f       	mul	r24, r20
    1202:	60 0d       	add	r22, r0
    1204:	21 1d       	adc	r18, r1
    1206:	82 2f       	mov	r24, r18
    1208:	76 2f       	mov	r23, r22
    120a:	6a 2f       	mov	r22, r26
    120c:	11 24       	eor	r1, r1
    120e:	9f 57       	subi	r25, 0x7F	; 127
    1210:	50 40       	sbci	r21, 0x00	; 0
    1212:	9a f0       	brmi	.+38     	; 0x123a <__mulsf3_pse+0x88>
    1214:	f1 f0       	breq	.+60     	; 0x1252 <__mulsf3_pse+0xa0>
    1216:	88 23       	and	r24, r24
    1218:	4a f0       	brmi	.+18     	; 0x122c <__mulsf3_pse+0x7a>
    121a:	ee 0f       	add	r30, r30
    121c:	ff 1f       	adc	r31, r31
    121e:	bb 1f       	adc	r27, r27
    1220:	66 1f       	adc	r22, r22
    1222:	77 1f       	adc	r23, r23
    1224:	88 1f       	adc	r24, r24
    1226:	91 50       	subi	r25, 0x01	; 1
    1228:	50 40       	sbci	r21, 0x00	; 0
    122a:	a9 f7       	brne	.-22     	; 0x1216 <__mulsf3_pse+0x64>
    122c:	9e 3f       	cpi	r25, 0xFE	; 254
    122e:	51 05       	cpc	r21, r1
    1230:	80 f0       	brcs	.+32     	; 0x1252 <__mulsf3_pse+0xa0>
    1232:	0c 94 d5 07 	jmp	0xfaa	; 0xfaa <__fp_inf>
    1236:	0c 94 47 08 	jmp	0x108e	; 0x108e <__fp_szero>
    123a:	5f 3f       	cpi	r21, 0xFF	; 255
    123c:	e4 f3       	brlt	.-8      	; 0x1236 <__mulsf3_pse+0x84>
    123e:	98 3e       	cpi	r25, 0xE8	; 232
    1240:	d4 f3       	brlt	.-12     	; 0x1236 <__mulsf3_pse+0x84>
    1242:	86 95       	lsr	r24
    1244:	77 95       	ror	r23
    1246:	67 95       	ror	r22
    1248:	b7 95       	ror	r27
    124a:	f7 95       	ror	r31
    124c:	e7 95       	ror	r30
    124e:	9f 5f       	subi	r25, 0xFF	; 255
    1250:	c1 f7       	brne	.-16     	; 0x1242 <__mulsf3_pse+0x90>
    1252:	fe 2b       	or	r31, r30
    1254:	88 0f       	add	r24, r24
    1256:	91 1d       	adc	r25, r1
    1258:	96 95       	lsr	r25
    125a:	87 95       	ror	r24
    125c:	97 f9       	bld	r25, 7
    125e:	08 95       	ret

00001260 <__fp_mpack>:
    1260:	9f 3f       	cpi	r25, 0xFF	; 255
    1262:	31 f0       	breq	.+12     	; 0x1270 <__fp_mpack_finite+0xc>

00001264 <__fp_mpack_finite>:
    1264:	91 50       	subi	r25, 0x01	; 1
    1266:	20 f4       	brcc	.+8      	; 0x1270 <__fp_mpack_finite+0xc>
    1268:	87 95       	ror	r24
    126a:	77 95       	ror	r23
    126c:	67 95       	ror	r22
    126e:	b7 95       	ror	r27
    1270:	88 0f       	add	r24, r24
    1272:	91 1d       	adc	r25, r1
    1274:	96 95       	lsr	r25
    1276:	87 95       	ror	r24
    1278:	97 f9       	bld	r25, 7
    127a:	08 95       	ret

0000127c <Tx_Handler>:
    127c:	cf 93       	push	r28
    127e:	df 93       	push	r29
    1280:	fc 01       	movw	r30, r24
    1282:	82 8d       	ldd	r24, Z+26	; 0x1a
    1284:	80 fd       	sbrc	r24, 0
    1286:	1e c0       	rjmp	.+60     	; 0x12c4 <Tx_Handler+0x48>
    1288:	93 89       	ldd	r25, Z+19	; 0x13
    128a:	84 89       	ldd	r24, Z+20	; 0x14
    128c:	98 13       	cpse	r25, r24
    128e:	09 c0       	rjmp	.+18     	; 0x12a2 <Tx_Handler+0x26>
    1290:	82 8d       	ldd	r24, Z+26	; 0x1a
    1292:	81 60       	ori	r24, 0x01	; 1
    1294:	82 8f       	std	Z+26, r24	; 0x1a
    1296:	82 8d       	ldd	r24, Z+26	; 0x1a
    1298:	8d 7f       	andi	r24, 0xFD	; 253
    129a:	82 8f       	std	Z+26, r24	; 0x1a
    129c:	14 8a       	std	Z+20, r1	; 0x14
    129e:	13 8a       	std	Z+19, r1	; 0x13
    12a0:	11 c0       	rjmp	.+34     	; 0x12c4 <Tx_Handler+0x48>
    12a2:	a0 81       	ld	r26, Z
    12a4:	b1 81       	ldd	r27, Z+1	; 0x01
    12a6:	c6 85       	ldd	r28, Z+14	; 0x0e
    12a8:	d7 85       	ldd	r29, Z+15	; 0x0f
    12aa:	83 89       	ldd	r24, Z+19	; 0x13
    12ac:	91 e0       	ldi	r25, 0x01	; 1
    12ae:	98 0f       	add	r25, r24
    12b0:	93 8b       	std	Z+19, r25	; 0x13
    12b2:	c8 0f       	add	r28, r24
    12b4:	d1 1d       	adc	r29, r1
    12b6:	88 81       	ld	r24, Y
    12b8:	8c 93       	st	X, r24
    12ba:	93 89       	ldd	r25, Z+19	; 0x13
    12bc:	85 89       	ldd	r24, Z+21	; 0x15
    12be:	98 17       	cp	r25, r24
    12c0:	08 f0       	brcs	.+2      	; 0x12c4 <Tx_Handler+0x48>
    12c2:	13 8a       	std	Z+19, r1	; 0x13
    12c4:	df 91       	pop	r29
    12c6:	cf 91       	pop	r28
    12c8:	08 95       	ret

000012ca <Rx_Handler>:
    12ca:	fc 01       	movw	r30, r24
    12cc:	a0 81       	ld	r26, Z
    12ce:	b1 81       	ldd	r27, Z+1	; 0x01
    12d0:	8c 91       	ld	r24, X
    12d2:	82 8b       	std	Z+18, r24	; 0x12
    12d4:	83 8d       	ldd	r24, Z+27	; 0x1b
    12d6:	80 ff       	sbrs	r24, 0
    12d8:	04 c0       	rjmp	.+8      	; 0x12e2 <Rx_Handler+0x18>
    12da:	a0 81       	ld	r26, Z
    12dc:	b1 81       	ldd	r27, Z+1	; 0x01
    12de:	82 89       	ldd	r24, Z+18	; 0x12
    12e0:	8c 93       	st	X, r24
    12e2:	a0 89       	ldd	r26, Z+16	; 0x10
    12e4:	b1 89       	ldd	r27, Z+17	; 0x11
    12e6:	86 89       	ldd	r24, Z+22	; 0x16
    12e8:	91 e0       	ldi	r25, 0x01	; 1
    12ea:	98 0f       	add	r25, r24
    12ec:	96 8b       	std	Z+22, r25	; 0x16
    12ee:	a8 0f       	add	r26, r24
    12f0:	b1 1d       	adc	r27, r1
    12f2:	82 89       	ldd	r24, Z+18	; 0x12
    12f4:	8c 93       	st	X, r24
    12f6:	96 89       	ldd	r25, Z+22	; 0x16
    12f8:	81 8d       	ldd	r24, Z+25	; 0x19
    12fa:	98 17       	cp	r25, r24
    12fc:	08 f0       	brcs	.+2      	; 0x1300 <Rx_Handler+0x36>
    12fe:	16 8a       	std	Z+22, r1	; 0x16
    1300:	96 89       	ldd	r25, Z+22	; 0x16
    1302:	87 89       	ldd	r24, Z+23	; 0x17
    1304:	98 13       	cpse	r25, r24
    1306:	18 c0       	rjmp	.+48     	; 0x1338 <Rx_Handler+0x6e>
    1308:	82 8d       	ldd	r24, Z+26	; 0x1a
    130a:	88 60       	ori	r24, 0x08	; 8
    130c:	82 8f       	std	Z+26, r24	; 0x1a
    130e:	82 a1       	ldd	r24, Z+34	; 0x22
    1310:	81 30       	cpi	r24, 0x01	; 1
    1312:	31 f4       	brne	.+12     	; 0x1320 <Rx_Handler+0x56>
    1314:	86 89       	ldd	r24, Z+22	; 0x16
    1316:	80 8f       	std	Z+24, r24	; 0x18
    1318:	82 8d       	ldd	r24, Z+26	; 0x1a
    131a:	84 60       	ori	r24, 0x04	; 4
    131c:	82 8f       	std	Z+26, r24	; 0x1a
    131e:	08 95       	ret
    1320:	86 89       	ldd	r24, Z+22	; 0x16
    1322:	8f 5f       	subi	r24, 0xFF	; 255
    1324:	87 8b       	std	Z+23, r24	; 0x17
    1326:	27 89       	ldd	r18, Z+23	; 0x17
    1328:	81 8d       	ldd	r24, Z+25	; 0x19
    132a:	30 e0       	ldi	r19, 0x00	; 0
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	01 97       	sbiw	r24, 0x01	; 1
    1330:	82 17       	cp	r24, r18
    1332:	93 07       	cpc	r25, r19
    1334:	0c f4       	brge	.+2      	; 0x1338 <Rx_Handler+0x6e>
    1336:	17 8a       	std	Z+23, r1	; 0x17
    1338:	80 8d       	ldd	r24, Z+24	; 0x18
    133a:	88 23       	and	r24, r24
    133c:	89 f0       	breq	.+34     	; 0x1360 <Rx_Handler+0x96>
    133e:	87 89       	ldd	r24, Z+23	; 0x17
    1340:	90 8d       	ldd	r25, Z+24	; 0x18
    1342:	89 0f       	add	r24, r25
    1344:	91 8d       	ldd	r25, Z+25	; 0x19
    1346:	98 17       	cp	r25, r24
    1348:	10 f4       	brcc	.+4      	; 0x134e <Rx_Handler+0x84>
    134a:	91 8d       	ldd	r25, Z+25	; 0x19
    134c:	89 1b       	sub	r24, r25
    134e:	96 89       	ldd	r25, Z+22	; 0x16
    1350:	98 13       	cpse	r25, r24
    1352:	06 c0       	rjmp	.+12     	; 0x1360 <Rx_Handler+0x96>
    1354:	82 8d       	ldd	r24, Z+26	; 0x1a
    1356:	84 60       	ori	r24, 0x04	; 4
    1358:	82 8f       	std	Z+26, r24	; 0x1a
    135a:	86 89       	ldd	r24, Z+22	; 0x16
    135c:	80 8f       	std	Z+24, r24	; 0x18
    135e:	08 95       	ret
    1360:	83 8d       	ldd	r24, Z+27	; 0x1b
    1362:	8e 71       	andi	r24, 0x1E	; 30
    1364:	09 f4       	brne	.+2      	; 0x1368 <Rx_Handler+0x9e>
    1366:	41 c0       	rjmp	.+130    	; 0x13ea <Rx_Handler+0x120>
    1368:	83 8d       	ldd	r24, Z+27	; 0x1b
    136a:	84 ff       	sbrs	r24, 4
    136c:	0e c0       	rjmp	.+28     	; 0x138a <Rx_Handler+0xc0>
    136e:	82 89       	ldd	r24, Z+18	; 0x12
    1370:	88 30       	cpi	r24, 0x08	; 8
    1372:	59 f4       	brne	.+22     	; 0x138a <Rx_Handler+0xc0>
    1374:	86 89       	ldd	r24, Z+22	; 0x16
    1376:	82 50       	subi	r24, 0x02	; 2
    1378:	86 8b       	std	Z+22, r24	; 0x16
    137a:	80 89       	ldd	r24, Z+16	; 0x10
    137c:	91 89       	ldd	r25, Z+17	; 0x11
    137e:	26 89       	ldd	r18, Z+22	; 0x16
    1380:	fc 01       	movw	r30, r24
    1382:	e2 0f       	add	r30, r18
    1384:	f1 1d       	adc	r31, r1
    1386:	10 82       	st	Z, r1
    1388:	08 95       	ret
    138a:	83 8d       	ldd	r24, Z+27	; 0x1b
    138c:	82 ff       	sbrs	r24, 2
    138e:	06 c0       	rjmp	.+12     	; 0x139c <Rx_Handler+0xd2>
    1390:	82 89       	ldd	r24, Z+18	; 0x12
    1392:	21 e0       	ldi	r18, 0x01	; 1
    1394:	8d 30       	cpi	r24, 0x0D	; 13
    1396:	19 f0       	breq	.+6      	; 0x139e <Rx_Handler+0xd4>
    1398:	20 e0       	ldi	r18, 0x00	; 0
    139a:	01 c0       	rjmp	.+2      	; 0x139e <Rx_Handler+0xd4>
    139c:	20 e0       	ldi	r18, 0x00	; 0
    139e:	83 8d       	ldd	r24, Z+27	; 0x1b
    13a0:	81 ff       	sbrs	r24, 1
    13a2:	04 c0       	rjmp	.+8      	; 0x13ac <Rx_Handler+0xe2>
    13a4:	82 89       	ldd	r24, Z+18	; 0x12
    13a6:	8a 30       	cpi	r24, 0x0A	; 10
    13a8:	09 f4       	brne	.+2      	; 0x13ac <Rx_Handler+0xe2>
    13aa:	21 e0       	ldi	r18, 0x01	; 1
    13ac:	83 8d       	ldd	r24, Z+27	; 0x1b
    13ae:	83 ff       	sbrs	r24, 3
    13b0:	15 c0       	rjmp	.+42     	; 0x13dc <Rx_Handler+0x112>
    13b2:	86 89       	ldd	r24, Z+22	; 0x16
    13b4:	82 30       	cpi	r24, 0x02	; 2
    13b6:	90 f0       	brcs	.+36     	; 0x13dc <Rx_Handler+0x112>
    13b8:	80 89       	ldd	r24, Z+16	; 0x10
    13ba:	91 89       	ldd	r25, Z+17	; 0x11
    13bc:	a6 89       	ldd	r26, Z+22	; 0x16
    13be:	b0 e0       	ldi	r27, 0x00	; 0
    13c0:	12 97       	sbiw	r26, 0x02	; 2
    13c2:	a8 0f       	add	r26, r24
    13c4:	b9 1f       	adc	r27, r25
    13c6:	9c 91       	ld	r25, X
    13c8:	82 89       	ldd	r24, Z+18	; 0x12
    13ca:	8d 30       	cpi	r24, 0x0D	; 13
    13cc:	19 f4       	brne	.+6      	; 0x13d4 <Rx_Handler+0x10a>
    13ce:	9a 30       	cpi	r25, 0x0A	; 10
    13d0:	29 f4       	brne	.+10     	; 0x13dc <Rx_Handler+0x112>
    13d2:	06 c0       	rjmp	.+12     	; 0x13e0 <Rx_Handler+0x116>
    13d4:	8a 30       	cpi	r24, 0x0A	; 10
    13d6:	11 f4       	brne	.+4      	; 0x13dc <Rx_Handler+0x112>
    13d8:	9d 30       	cpi	r25, 0x0D	; 13
    13da:	11 f0       	breq	.+4      	; 0x13e0 <Rx_Handler+0x116>
    13dc:	22 23       	and	r18, r18
    13de:	29 f0       	breq	.+10     	; 0x13ea <Rx_Handler+0x120>
    13e0:	82 8d       	ldd	r24, Z+26	; 0x1a
    13e2:	84 60       	ori	r24, 0x04	; 4
    13e4:	82 8f       	std	Z+26, r24	; 0x1a
    13e6:	86 89       	ldd	r24, Z+22	; 0x16
    13e8:	80 8f       	std	Z+24, r24	; 0x18
    13ea:	08 95       	ret

000013ec <USART_enable>:
    13ec:	fc 01       	movw	r30, r24
    13ee:	00 97       	sbiw	r24, 0x00	; 0
    13f0:	a9 f1       	breq	.+106    	; 0x145c <USART_enable+0x70>
    13f2:	63 ff       	sbrs	r22, 3
    13f4:	06 c0       	rjmp	.+12     	; 0x1402 <USART_enable+0x16>
    13f6:	a6 81       	ldd	r26, Z+6	; 0x06
    13f8:	b7 81       	ldd	r27, Z+7	; 0x07
    13fa:	8c 91       	ld	r24, X
    13fc:	88 60       	ori	r24, 0x08	; 8
    13fe:	8c 93       	st	X, r24
    1400:	05 c0       	rjmp	.+10     	; 0x140c <USART_enable+0x20>
    1402:	a6 81       	ldd	r26, Z+6	; 0x06
    1404:	b7 81       	ldd	r27, Z+7	; 0x07
    1406:	8c 91       	ld	r24, X
    1408:	87 7f       	andi	r24, 0xF7	; 247
    140a:	8c 93       	st	X, r24
    140c:	64 ff       	sbrs	r22, 4
    140e:	06 c0       	rjmp	.+12     	; 0x141c <USART_enable+0x30>
    1410:	a6 81       	ldd	r26, Z+6	; 0x06
    1412:	b7 81       	ldd	r27, Z+7	; 0x07
    1414:	8c 91       	ld	r24, X
    1416:	80 61       	ori	r24, 0x10	; 16
    1418:	8c 93       	st	X, r24
    141a:	05 c0       	rjmp	.+10     	; 0x1426 <USART_enable+0x3a>
    141c:	a6 81       	ldd	r26, Z+6	; 0x06
    141e:	b7 81       	ldd	r27, Z+7	; 0x07
    1420:	8c 91       	ld	r24, X
    1422:	8f 7e       	andi	r24, 0xEF	; 239
    1424:	8c 93       	st	X, r24
    1426:	a6 81       	ldd	r26, Z+6	; 0x06
    1428:	b7 81       	ldd	r27, Z+7	; 0x07
    142a:	8c 91       	ld	r24, X
    142c:	83 ff       	sbrs	r24, 3
    142e:	04 c0       	rjmp	.+8      	; 0x1438 <USART_enable+0x4c>
    1430:	82 8d       	ldd	r24, Z+26	; 0x1a
    1432:	81 61       	ori	r24, 0x11	; 17
    1434:	82 8f       	std	Z+26, r24	; 0x1a
    1436:	03 c0       	rjmp	.+6      	; 0x143e <USART_enable+0x52>
    1438:	82 8d       	ldd	r24, Z+26	; 0x1a
    143a:	8f 7e       	andi	r24, 0xEF	; 239
    143c:	82 8f       	std	Z+26, r24	; 0x1a
    143e:	a6 81       	ldd	r26, Z+6	; 0x06
    1440:	b7 81       	ldd	r27, Z+7	; 0x07
    1442:	8c 91       	ld	r24, X
    1444:	84 ff       	sbrs	r24, 4
    1446:	05 c0       	rjmp	.+10     	; 0x1452 <USART_enable+0x66>
    1448:	82 8d       	ldd	r24, Z+26	; 0x1a
    144a:	80 62       	ori	r24, 0x20	; 32
    144c:	82 8f       	std	Z+26, r24	; 0x1a
    144e:	80 e0       	ldi	r24, 0x00	; 0
    1450:	08 95       	ret
    1452:	82 8d       	ldd	r24, Z+26	; 0x1a
    1454:	8f 7d       	andi	r24, 0xDF	; 223
    1456:	82 8f       	std	Z+26, r24	; 0x1a
    1458:	80 e0       	ldi	r24, 0x00	; 0
    145a:	08 95       	ret
    145c:	8f ef       	ldi	r24, 0xFF	; 255
    145e:	08 95       	ret

00001460 <USART_buffer_init>:
    1460:	0f 93       	push	r16
    1462:	1f 93       	push	r17
    1464:	cf 93       	push	r28
    1466:	df 93       	push	r29
    1468:	ec 01       	movw	r28, r24
    146a:	06 2f       	mov	r16, r22
    146c:	14 2f       	mov	r17, r20
    146e:	00 97       	sbiw	r24, 0x00	; 0
    1470:	31 f1       	breq	.+76     	; 0x14be <USART_buffer_init+0x5e>
    1472:	61 11       	cpse	r22, r1
    1474:	09 c0       	rjmp	.+18     	; 0x1488 <USART_buffer_init+0x28>
    1476:	88 89       	ldd	r24, Y+16	; 0x10
    1478:	99 89       	ldd	r25, Y+17	; 0x11
    147a:	89 2b       	or	r24, r25
    147c:	29 f0       	breq	.+10     	; 0x1488 <USART_buffer_init+0x28>
    147e:	88 89       	ldd	r24, Y+16	; 0x10
    1480:	99 89       	ldd	r25, Y+17	; 0x11
    1482:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <free>
    1486:	06 c0       	rjmp	.+12     	; 0x1494 <USART_buffer_init+0x34>
    1488:	80 2f       	mov	r24, r16
    148a:	90 e0       	ldi	r25, 0x00	; 0
    148c:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <malloc>
    1490:	88 8b       	std	Y+16, r24	; 0x10
    1492:	99 8b       	std	Y+17, r25	; 0x11
    1494:	11 11       	cpse	r17, r1
    1496:	09 c0       	rjmp	.+18     	; 0x14aa <USART_buffer_init+0x4a>
    1498:	8e 85       	ldd	r24, Y+14	; 0x0e
    149a:	9f 85       	ldd	r25, Y+15	; 0x0f
    149c:	89 2b       	or	r24, r25
    149e:	29 f0       	breq	.+10     	; 0x14aa <USART_buffer_init+0x4a>
    14a0:	8e 85       	ldd	r24, Y+14	; 0x0e
    14a2:	9f 85       	ldd	r25, Y+15	; 0x0f
    14a4:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <free>
    14a8:	06 c0       	rjmp	.+12     	; 0x14b6 <USART_buffer_init+0x56>
    14aa:	81 2f       	mov	r24, r17
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <malloc>
    14b2:	8e 87       	std	Y+14, r24	; 0x0e
    14b4:	9f 87       	std	Y+15, r25	; 0x0f
    14b6:	09 8f       	std	Y+25, r16	; 0x19
    14b8:	1d 8b       	std	Y+21, r17	; 0x15
    14ba:	80 e0       	ldi	r24, 0x00	; 0
    14bc:	01 c0       	rjmp	.+2      	; 0x14c0 <USART_buffer_init+0x60>
    14be:	8f ef       	ldi	r24, 0xFF	; 255
    14c0:	df 91       	pop	r29
    14c2:	cf 91       	pop	r28
    14c4:	1f 91       	pop	r17
    14c6:	0f 91       	pop	r16
    14c8:	08 95       	ret

000014ca <assign_USART_regsX1>:
    14ca:	fc 01       	movw	r30, r24
    14cc:	60 3c       	cpi	r22, 0xC0	; 192
    14ce:	29 f5       	brne	.+74     	; 0x151a <assign_USART_regsX1+0x50>
    14d0:	80 ec       	ldi	r24, 0xC0	; 192
    14d2:	85 8f       	std	Z+29, r24	; 0x1d
    14d4:	80 ea       	ldi	r24, 0xA0	; 160
    14d6:	98 e0       	ldi	r25, 0x08	; 8
    14d8:	80 83       	st	Z, r24
    14da:	91 83       	std	Z+1, r25	; 0x01
    14dc:	81 ea       	ldi	r24, 0xA1	; 161
    14de:	98 e0       	ldi	r25, 0x08	; 8
    14e0:	82 83       	std	Z+2, r24	; 0x02
    14e2:	93 83       	std	Z+3, r25	; 0x03
    14e4:	83 ea       	ldi	r24, 0xA3	; 163
    14e6:	98 e0       	ldi	r25, 0x08	; 8
    14e8:	84 83       	std	Z+4, r24	; 0x04
    14ea:	95 83       	std	Z+5, r25	; 0x05
    14ec:	84 ea       	ldi	r24, 0xA4	; 164
    14ee:	98 e0       	ldi	r25, 0x08	; 8
    14f0:	86 83       	std	Z+6, r24	; 0x06
    14f2:	97 83       	std	Z+7, r25	; 0x07
    14f4:	85 ea       	ldi	r24, 0xA5	; 165
    14f6:	98 e0       	ldi	r25, 0x08	; 8
    14f8:	80 87       	std	Z+8, r24	; 0x08
    14fa:	91 87       	std	Z+9, r25	; 0x09
    14fc:	86 ea       	ldi	r24, 0xA6	; 166
    14fe:	98 e0       	ldi	r25, 0x08	; 8
    1500:	82 87       	std	Z+10, r24	; 0x0a
    1502:	93 87       	std	Z+11, r25	; 0x0b
    1504:	87 ea       	ldi	r24, 0xA7	; 167
    1506:	98 e0       	ldi	r25, 0x08	; 8
    1508:	84 87       	std	Z+12, r24	; 0x0c
    150a:	95 87       	std	Z+13, r25	; 0x0d
    150c:	e0 e4       	ldi	r30, 0x40	; 64
    150e:	f6 e0       	ldi	r31, 0x06	; 6
    1510:	80 81       	ld	r24, Z
    1512:	88 60       	ori	r24, 0x08	; 8
    1514:	80 83       	st	Z, r24
    1516:	80 e0       	ldi	r24, 0x00	; 0
    1518:	08 95       	ret
    151a:	8f ef       	ldi	r24, 0xFF	; 255
    151c:	08 95       	ret

0000151e <USART_init>:
    151e:	2f 92       	push	r2
    1520:	3f 92       	push	r3
    1522:	4f 92       	push	r4
    1524:	5f 92       	push	r5
    1526:	6f 92       	push	r6
    1528:	7f 92       	push	r7
    152a:	8f 92       	push	r8
    152c:	9f 92       	push	r9
    152e:	af 92       	push	r10
    1530:	bf 92       	push	r11
    1532:	cf 92       	push	r12
    1534:	df 92       	push	r13
    1536:	ef 92       	push	r14
    1538:	ff 92       	push	r15
    153a:	0f 93       	push	r16
    153c:	1f 93       	push	r17
    153e:	cf 93       	push	r28
    1540:	df 93       	push	r29
    1542:	1f 92       	push	r1
    1544:	cd b7       	in	r28, 0x3d	; 61
    1546:	de b7       	in	r29, 0x3e	; 62
    1548:	3c 01       	movw	r6, r24
    154a:	19 01       	movw	r2, r18
    154c:	2a 01       	movw	r4, r20
    154e:	c9 82       	std	Y+1, r12	; 0x01
    1550:	dc 01       	movw	r26, r24
    1552:	54 96       	adiw	r26, 0x14	; 20
    1554:	1c 92       	st	X, r1
    1556:	54 97       	sbiw	r26, 0x14	; 20
    1558:	53 96       	adiw	r26, 0x13	; 19
    155a:	1c 92       	st	X, r1
    155c:	53 97       	sbiw	r26, 0x13	; 19
    155e:	5a 96       	adiw	r26, 0x1a	; 26
    1560:	1c 92       	st	X, r1
    1562:	0e 94 65 0a 	call	0x14ca	; 0x14ca <assign_USART_regsX1>
    1566:	88 23       	and	r24, r24
    1568:	0c f4       	brge	.+2      	; 0x156c <USART_init+0x4e>
    156a:	7c c0       	rjmp	.+248    	; 0x1664 <USART_init+0x146>
    156c:	d3 01       	movw	r26, r6
    156e:	14 96       	adiw	r26, 0x04	; 4
    1570:	ed 91       	ld	r30, X+
    1572:	fc 91       	ld	r31, X
    1574:	15 97       	sbiw	r26, 0x05	; 5
    1576:	00 83       	st	Z, r16
    1578:	16 96       	adiw	r26, 0x06	; 6
    157a:	ed 91       	ld	r30, X+
    157c:	fc 91       	ld	r31, X
    157e:	17 97       	sbiw	r26, 0x07	; 7
    1580:	10 82       	st	Z, r1
    1582:	18 96       	adiw	r26, 0x08	; 8
    1584:	ed 91       	ld	r30, X+
    1586:	fc 91       	ld	r31, X
    1588:	19 97       	sbiw	r26, 0x09	; 9
    158a:	8f 89       	ldd	r24, Y+23	; 0x17
    158c:	a8 2a       	or	r10, r24
    158e:	8a 28       	or	r8, r10
    1590:	80 82       	st	Z, r8
    1592:	24 e6       	ldi	r18, 0x64	; 100
    1594:	2e 9d       	mul	r18, r14
    1596:	c0 01       	movw	r24, r0
    1598:	2f 9d       	mul	r18, r15
    159a:	90 0d       	add	r25, r0
    159c:	11 24       	eor	r1, r1
    159e:	6c 01       	movw	r12, r24
    15a0:	e1 2c       	mov	r14, r1
    15a2:	f1 2c       	mov	r15, r1
    15a4:	b9 81       	ldd	r27, Y+1	; 0x01
    15a6:	6b 2f       	mov	r22, r27
    15a8:	77 27       	eor	r23, r23
    15aa:	67 fd       	sbrc	r22, 7
    15ac:	70 95       	com	r23
    15ae:	87 2f       	mov	r24, r23
    15b0:	97 2f       	mov	r25, r23
    15b2:	0e 94 76 07 	call	0xeec	; 0xeec <__floatsisf>
    15b6:	9b 01       	movw	r18, r22
    15b8:	ac 01       	movw	r20, r24
    15ba:	60 e0       	ldi	r22, 0x00	; 0
    15bc:	70 e0       	ldi	r23, 0x00	; 0
    15be:	80 e0       	ldi	r24, 0x00	; 0
    15c0:	90 e4       	ldi	r25, 0x40	; 64
    15c2:	0e 94 0f 0c 	call	0x181e	; 0x181e <pow>
    15c6:	9b 01       	movw	r18, r22
    15c8:	ac 01       	movw	r20, r24
    15ca:	60 e0       	ldi	r22, 0x00	; 0
    15cc:	70 e0       	ldi	r23, 0x00	; 0
    15ce:	80 e8       	ldi	r24, 0x80	; 128
    15d0:	9f e3       	ldi	r25, 0x3F	; 63
    15d2:	0e 94 99 06 	call	0xd32	; 0xd32 <__divsf3>
    15d6:	4b 01       	movw	r8, r22
    15d8:	5c 01       	movw	r10, r24
    15da:	d7 01       	movw	r26, r14
    15dc:	c6 01       	movw	r24, r12
    15de:	88 0f       	add	r24, r24
    15e0:	99 1f       	adc	r25, r25
    15e2:	aa 1f       	adc	r26, r26
    15e4:	bb 1f       	adc	r27, r27
    15e6:	88 0f       	add	r24, r24
    15e8:	99 1f       	adc	r25, r25
    15ea:	aa 1f       	adc	r26, r26
    15ec:	bb 1f       	adc	r27, r27
    15ee:	8c 01       	movw	r16, r24
    15f0:	9d 01       	movw	r18, r26
    15f2:	00 0f       	add	r16, r16
    15f4:	11 1f       	adc	r17, r17
    15f6:	22 1f       	adc	r18, r18
    15f8:	33 1f       	adc	r19, r19
    15fa:	c9 01       	movw	r24, r18
    15fc:	b8 01       	movw	r22, r16
    15fe:	62 0d       	add	r22, r2
    1600:	73 1d       	adc	r23, r3
    1602:	84 1d       	adc	r24, r4
    1604:	95 1d       	adc	r25, r5
    1606:	a9 01       	movw	r20, r18
    1608:	98 01       	movw	r18, r16
    160a:	22 0f       	add	r18, r18
    160c:	33 1f       	adc	r19, r19
    160e:	44 1f       	adc	r20, r20
    1610:	55 1f       	adc	r21, r21
    1612:	0e 94 af 0c 	call	0x195e	; 0x195e <__udivmodsi4>
    1616:	ca 01       	movw	r24, r20
    1618:	b9 01       	movw	r22, r18
    161a:	0e 94 74 07 	call	0xee8	; 0xee8 <__floatunsisf>
    161e:	9b 01       	movw	r18, r22
    1620:	ac 01       	movw	r20, r24
    1622:	c5 01       	movw	r24, r10
    1624:	b4 01       	movw	r22, r8
    1626:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
    162a:	20 e0       	ldi	r18, 0x00	; 0
    162c:	30 e0       	ldi	r19, 0x00	; 0
    162e:	40 e8       	ldi	r20, 0x80	; 128
    1630:	5f e3       	ldi	r21, 0x3F	; 63
    1632:	0e 94 27 06 	call	0xc4e	; 0xc4e <__subsf3>
    1636:	0e 94 45 07 	call	0xe8a	; 0xe8a <__fixunssfsi>
    163a:	d3 01       	movw	r26, r6
    163c:	1a 96       	adiw	r26, 0x0a	; 10
    163e:	ed 91       	ld	r30, X+
    1640:	fc 91       	ld	r31, X
    1642:	1b 97       	sbiw	r26, 0x0b	; 11
    1644:	60 83       	st	Z, r22
    1646:	1c 96       	adiw	r26, 0x0c	; 12
    1648:	ed 91       	ld	r30, X+
    164a:	fc 91       	ld	r31, X
    164c:	1d 97       	sbiw	r26, 0x0d	; 13
    164e:	66 27       	eor	r22, r22
    1650:	7f 70       	andi	r23, 0x0F	; 15
    1652:	c9 80       	ldd	r12, Y+1	; 0x01
    1654:	cc 0c       	add	r12, r12
    1656:	cc 0c       	add	r12, r12
    1658:	cc 0c       	add	r12, r12
    165a:	cc 0c       	add	r12, r12
    165c:	c7 2a       	or	r12, r23
    165e:	c0 82       	st	Z, r12
    1660:	80 e0       	ldi	r24, 0x00	; 0
    1662:	01 c0       	rjmp	.+2      	; 0x1666 <USART_init+0x148>
    1664:	8f ef       	ldi	r24, 0xFF	; 255
    1666:	0f 90       	pop	r0
    1668:	df 91       	pop	r29
    166a:	cf 91       	pop	r28
    166c:	1f 91       	pop	r17
    166e:	0f 91       	pop	r16
    1670:	ff 90       	pop	r15
    1672:	ef 90       	pop	r14
    1674:	df 90       	pop	r13
    1676:	cf 90       	pop	r12
    1678:	bf 90       	pop	r11
    167a:	af 90       	pop	r10
    167c:	9f 90       	pop	r9
    167e:	8f 90       	pop	r8
    1680:	7f 90       	pop	r7
    1682:	6f 90       	pop	r6
    1684:	5f 90       	pop	r5
    1686:	4f 90       	pop	r4
    1688:	3f 90       	pop	r3
    168a:	2f 90       	pop	r2
    168c:	08 95       	ret

0000168e <GetSystemClocks>:
    168e:	0f 93       	push	r16
    1690:	1f 93       	push	r17
    1692:	cf 93       	push	r28
    1694:	df 93       	push	r29
    1696:	8c 01       	movw	r16, r24
    1698:	eb 01       	movw	r28, r22
    169a:	80 91 40 00 	lds	r24, 0x0040	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
    169e:	87 70       	andi	r24, 0x07	; 7
    16a0:	82 30       	cpi	r24, 0x02	; 2
    16a2:	61 f0       	breq	.+24     	; 0x16bc <GetSystemClocks+0x2e>
    16a4:	30 f4       	brcc	.+12     	; 0x16b2 <GetSystemClocks+0x24>
    16a6:	88 23       	and	r24, r24
    16a8:	09 f4       	brne	.+2      	; 0x16ac <GetSystemClocks+0x1e>
    16aa:	46 c0       	rjmp	.+140    	; 0x1738 <GetSystemClocks+0xaa>
    16ac:	81 30       	cpi	r24, 0x01	; 1
    16ae:	81 f0       	breq	.+32     	; 0x16d0 <GetSystemClocks+0x42>
    16b0:	af c0       	rjmp	.+350    	; 0x1810 <GetSystemClocks+0x182>
    16b2:	83 30       	cpi	r24, 0x03	; 3
    16b4:	b9 f0       	breq	.+46     	; 0x16e4 <GetSystemClocks+0x56>
    16b6:	84 30       	cpi	r24, 0x04	; 4
    16b8:	f9 f0       	breq	.+62     	; 0x16f8 <GetSystemClocks+0x6a>
    16ba:	aa c0       	rjmp	.+340    	; 0x1810 <GetSystemClocks+0x182>
    16bc:	80 e0       	ldi	r24, 0x00	; 0
    16be:	9d e7       	ldi	r25, 0x7D	; 125
    16c0:	a0 e0       	ldi	r26, 0x00	; 0
    16c2:	b0 e0       	ldi	r27, 0x00	; 0
    16c4:	f8 01       	movw	r30, r16
    16c6:	80 83       	st	Z, r24
    16c8:	91 83       	std	Z+1, r25	; 0x01
    16ca:	a2 83       	std	Z+2, r26	; 0x02
    16cc:	b3 83       	std	Z+3, r27	; 0x03
    16ce:	3d c0       	rjmp	.+122    	; 0x174a <GetSystemClocks+0xbc>
    16d0:	80 e0       	ldi	r24, 0x00	; 0
    16d2:	98 e4       	ldi	r25, 0x48	; 72
    16d4:	a8 ee       	ldi	r26, 0xE8	; 232
    16d6:	b1 e0       	ldi	r27, 0x01	; 1
    16d8:	f8 01       	movw	r30, r16
    16da:	80 83       	st	Z, r24
    16dc:	91 83       	std	Z+1, r25	; 0x01
    16de:	a2 83       	std	Z+2, r26	; 0x02
    16e0:	b3 83       	std	Z+3, r27	; 0x03
    16e2:	33 c0       	rjmp	.+102    	; 0x174a <GetSystemClocks+0xbc>
    16e4:	80 e0       	ldi	r24, 0x00	; 0
    16e6:	94 e2       	ldi	r25, 0x24	; 36
    16e8:	a4 ef       	ldi	r26, 0xF4	; 244
    16ea:	b0 e0       	ldi	r27, 0x00	; 0
    16ec:	f8 01       	movw	r30, r16
    16ee:	80 83       	st	Z, r24
    16f0:	91 83       	std	Z+1, r25	; 0x01
    16f2:	a2 83       	std	Z+2, r26	; 0x02
    16f4:	b3 83       	std	Z+3, r27	; 0x03
    16f6:	29 c0       	rjmp	.+82     	; 0x174a <GetSystemClocks+0xbc>
    16f8:	25 e5       	ldi	r18, 0x55	; 85
    16fa:	30 e0       	ldi	r19, 0x00	; 0
    16fc:	d9 01       	movw	r26, r18
    16fe:	8c 91       	ld	r24, X
    1700:	80 e8       	ldi	r24, 0x80	; 128
    1702:	94 e8       	ldi	r25, 0x84	; 132
    1704:	ae e1       	ldi	r26, 0x1E	; 30
    1706:	b0 e0       	ldi	r27, 0x00	; 0
    1708:	f8 01       	movw	r30, r16
    170a:	80 83       	st	Z, r24
    170c:	91 83       	std	Z+1, r25	; 0x01
    170e:	a2 83       	std	Z+2, r26	; 0x02
    1710:	b3 83       	std	Z+3, r27	; 0x03
    1712:	d9 01       	movw	r26, r18
    1714:	8c 91       	ld	r24, X
    1716:	a8 2f       	mov	r26, r24
    1718:	af 71       	andi	r26, 0x1F	; 31
    171a:	09 f4       	brne	.+2      	; 0x171e <GetSystemClocks+0x90>
    171c:	a1 e0       	ldi	r26, 0x01	; 1
    171e:	b0 e0       	ldi	r27, 0x00	; 0
    1720:	20 e8       	ldi	r18, 0x80	; 128
    1722:	34 e8       	ldi	r19, 0x84	; 132
    1724:	4e e1       	ldi	r20, 0x1E	; 30
    1726:	50 e0       	ldi	r21, 0x00	; 0
    1728:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__muluhisi3>
    172c:	f8 01       	movw	r30, r16
    172e:	60 83       	st	Z, r22
    1730:	71 83       	std	Z+1, r23	; 0x01
    1732:	82 83       	std	Z+2, r24	; 0x02
    1734:	93 83       	std	Z+3, r25	; 0x03
    1736:	09 c0       	rjmp	.+18     	; 0x174a <GetSystemClocks+0xbc>
    1738:	80 e8       	ldi	r24, 0x80	; 128
    173a:	94 e8       	ldi	r25, 0x84	; 132
    173c:	ae e1       	ldi	r26, 0x1E	; 30
    173e:	b0 e0       	ldi	r27, 0x00	; 0
    1740:	f8 01       	movw	r30, r16
    1742:	80 83       	st	Z, r24
    1744:	91 83       	std	Z+1, r25	; 0x01
    1746:	a2 83       	std	Z+2, r26	; 0x02
    1748:	b3 83       	std	Z+3, r27	; 0x03
    174a:	80 91 41 00 	lds	r24, 0x0041	; 0x800041 <__TEXT_REGION_LENGTH__+0x700041>
    174e:	8c 77       	andi	r24, 0x7C	; 124
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	96 95       	lsr	r25
    1754:	87 95       	ror	r24
    1756:	96 95       	lsr	r25
    1758:	87 95       	ror	r24
    175a:	01 97       	sbiw	r24, 0x01	; 1
    175c:	81 32       	cpi	r24, 0x21	; 33
    175e:	91 05       	cpc	r25, r1
    1760:	28 f4       	brcc	.+10     	; 0x176c <GetSystemClocks+0xde>
    1762:	8a 54       	subi	r24, 0x4A	; 74
    1764:	9f 4f       	sbci	r25, 0xFF	; 255
    1766:	fc 01       	movw	r30, r24
    1768:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__tablejump2__>
    176c:	21 e0       	ldi	r18, 0x01	; 1
    176e:	30 e0       	ldi	r19, 0x00	; 0
    1770:	40 e0       	ldi	r20, 0x00	; 0
    1772:	50 e0       	ldi	r21, 0x00	; 0
    1774:	2c c0       	rjmp	.+88     	; 0x17ce <GetSystemClocks+0x140>
    1776:	24 e0       	ldi	r18, 0x04	; 4
    1778:	30 e0       	ldi	r19, 0x00	; 0
    177a:	40 e0       	ldi	r20, 0x00	; 0
    177c:	50 e0       	ldi	r21, 0x00	; 0
    177e:	27 c0       	rjmp	.+78     	; 0x17ce <GetSystemClocks+0x140>
    1780:	28 e0       	ldi	r18, 0x08	; 8
    1782:	30 e0       	ldi	r19, 0x00	; 0
    1784:	40 e0       	ldi	r20, 0x00	; 0
    1786:	50 e0       	ldi	r21, 0x00	; 0
    1788:	22 c0       	rjmp	.+68     	; 0x17ce <GetSystemClocks+0x140>
    178a:	20 e1       	ldi	r18, 0x10	; 16
    178c:	30 e0       	ldi	r19, 0x00	; 0
    178e:	40 e0       	ldi	r20, 0x00	; 0
    1790:	50 e0       	ldi	r21, 0x00	; 0
    1792:	1d c0       	rjmp	.+58     	; 0x17ce <GetSystemClocks+0x140>
    1794:	20 e2       	ldi	r18, 0x20	; 32
    1796:	30 e0       	ldi	r19, 0x00	; 0
    1798:	40 e0       	ldi	r20, 0x00	; 0
    179a:	50 e0       	ldi	r21, 0x00	; 0
    179c:	18 c0       	rjmp	.+48     	; 0x17ce <GetSystemClocks+0x140>
    179e:	20 e4       	ldi	r18, 0x40	; 64
    17a0:	30 e0       	ldi	r19, 0x00	; 0
    17a2:	40 e0       	ldi	r20, 0x00	; 0
    17a4:	50 e0       	ldi	r21, 0x00	; 0
    17a6:	13 c0       	rjmp	.+38     	; 0x17ce <GetSystemClocks+0x140>
    17a8:	20 e8       	ldi	r18, 0x80	; 128
    17aa:	30 e0       	ldi	r19, 0x00	; 0
    17ac:	40 e0       	ldi	r20, 0x00	; 0
    17ae:	50 e0       	ldi	r21, 0x00	; 0
    17b0:	0e c0       	rjmp	.+28     	; 0x17ce <GetSystemClocks+0x140>
    17b2:	20 e0       	ldi	r18, 0x00	; 0
    17b4:	31 e0       	ldi	r19, 0x01	; 1
    17b6:	40 e0       	ldi	r20, 0x00	; 0
    17b8:	50 e0       	ldi	r21, 0x00	; 0
    17ba:	09 c0       	rjmp	.+18     	; 0x17ce <GetSystemClocks+0x140>
    17bc:	20 e0       	ldi	r18, 0x00	; 0
    17be:	32 e0       	ldi	r19, 0x02	; 2
    17c0:	40 e0       	ldi	r20, 0x00	; 0
    17c2:	50 e0       	ldi	r21, 0x00	; 0
    17c4:	04 c0       	rjmp	.+8      	; 0x17ce <GetSystemClocks+0x140>
    17c6:	22 e0       	ldi	r18, 0x02	; 2
    17c8:	30 e0       	ldi	r19, 0x00	; 0
    17ca:	40 e0       	ldi	r20, 0x00	; 0
    17cc:	50 e0       	ldi	r21, 0x00	; 0
    17ce:	80 91 41 00 	lds	r24, 0x0041	; 0x800041 <__TEXT_REGION_LENGTH__+0x700041>
    17d2:	81 ff       	sbrs	r24, 1
    17d4:	09 c0       	rjmp	.+18     	; 0x17e8 <GetSystemClocks+0x15a>
    17d6:	22 0f       	add	r18, r18
    17d8:	33 1f       	adc	r19, r19
    17da:	44 1f       	adc	r20, r20
    17dc:	55 1f       	adc	r21, r21
    17de:	22 0f       	add	r18, r18
    17e0:	33 1f       	adc	r19, r19
    17e2:	44 1f       	adc	r20, r20
    17e4:	55 1f       	adc	r21, r21
    17e6:	06 c0       	rjmp	.+12     	; 0x17f4 <GetSystemClocks+0x166>
    17e8:	80 ff       	sbrs	r24, 0
    17ea:	04 c0       	rjmp	.+8      	; 0x17f4 <GetSystemClocks+0x166>
    17ec:	22 0f       	add	r18, r18
    17ee:	33 1f       	adc	r19, r19
    17f0:	44 1f       	adc	r20, r20
    17f2:	55 1f       	adc	r21, r21
    17f4:	d8 01       	movw	r26, r16
    17f6:	6d 91       	ld	r22, X+
    17f8:	7d 91       	ld	r23, X+
    17fa:	8d 91       	ld	r24, X+
    17fc:	9c 91       	ld	r25, X
    17fe:	0e 94 af 0c 	call	0x195e	; 0x195e <__udivmodsi4>
    1802:	28 83       	st	Y, r18
    1804:	39 83       	std	Y+1, r19	; 0x01
    1806:	4a 83       	std	Y+2, r20	; 0x02
    1808:	5b 83       	std	Y+3, r21	; 0x03
    180a:	81 e0       	ldi	r24, 0x01	; 1
    180c:	90 e0       	ldi	r25, 0x00	; 0
    180e:	02 c0       	rjmp	.+4      	; 0x1814 <GetSystemClocks+0x186>
    1810:	8f ef       	ldi	r24, 0xFF	; 255
    1812:	9f ef       	ldi	r25, 0xFF	; 255
    1814:	df 91       	pop	r29
    1816:	cf 91       	pop	r28
    1818:	1f 91       	pop	r17
    181a:	0f 91       	pop	r16
    181c:	08 95       	ret

0000181e <pow>:
    181e:	fa 01       	movw	r30, r20
    1820:	ee 0f       	add	r30, r30
    1822:	ff 1f       	adc	r31, r31
    1824:	30 96       	adiw	r30, 0x00	; 0
    1826:	21 05       	cpc	r18, r1
    1828:	31 05       	cpc	r19, r1
    182a:	a1 f1       	breq	.+104    	; 0x1894 <pow+0x76>
    182c:	61 15       	cp	r22, r1
    182e:	71 05       	cpc	r23, r1
    1830:	61 f4       	brne	.+24     	; 0x184a <pow+0x2c>
    1832:	80 38       	cpi	r24, 0x80	; 128
    1834:	bf e3       	ldi	r27, 0x3F	; 63
    1836:	9b 07       	cpc	r25, r27
    1838:	49 f1       	breq	.+82     	; 0x188c <pow+0x6e>
    183a:	68 94       	set
    183c:	90 38       	cpi	r25, 0x80	; 128
    183e:	81 05       	cpc	r24, r1
    1840:	61 f0       	breq	.+24     	; 0x185a <pow+0x3c>
    1842:	80 38       	cpi	r24, 0x80	; 128
    1844:	bf ef       	ldi	r27, 0xFF	; 255
    1846:	9b 07       	cpc	r25, r27
    1848:	41 f0       	breq	.+16     	; 0x185a <pow+0x3c>
    184a:	99 23       	and	r25, r25
    184c:	4a f5       	brpl	.+82     	; 0x18a0 <pow+0x82>
    184e:	ff 3f       	cpi	r31, 0xFF	; 255
    1850:	e1 05       	cpc	r30, r1
    1852:	31 05       	cpc	r19, r1
    1854:	21 05       	cpc	r18, r1
    1856:	19 f1       	breq	.+70     	; 0x189e <pow+0x80>
    1858:	e8 94       	clt
    185a:	08 94       	sec
    185c:	e7 95       	ror	r30
    185e:	d9 01       	movw	r26, r18
    1860:	aa 23       	and	r26, r26
    1862:	29 f4       	brne	.+10     	; 0x186e <pow+0x50>
    1864:	ab 2f       	mov	r26, r27
    1866:	be 2f       	mov	r27, r30
    1868:	f8 5f       	subi	r31, 0xF8	; 248
    186a:	d0 f3       	brcs	.-12     	; 0x1860 <pow+0x42>
    186c:	10 c0       	rjmp	.+32     	; 0x188e <pow+0x70>
    186e:	ff 5f       	subi	r31, 0xFF	; 255
    1870:	70 f4       	brcc	.+28     	; 0x188e <pow+0x70>
    1872:	a6 95       	lsr	r26
    1874:	e0 f7       	brcc	.-8      	; 0x186e <pow+0x50>
    1876:	f7 39       	cpi	r31, 0x97	; 151
    1878:	50 f0       	brcs	.+20     	; 0x188e <pow+0x70>
    187a:	19 f0       	breq	.+6      	; 0x1882 <pow+0x64>
    187c:	ff 3a       	cpi	r31, 0xAF	; 175
    187e:	38 f4       	brcc	.+14     	; 0x188e <pow+0x70>
    1880:	9f 77       	andi	r25, 0x7F	; 127
    1882:	9f 93       	push	r25
    1884:	0d d0       	rcall	.+26     	; 0x18a0 <pow+0x82>
    1886:	0f 90       	pop	r0
    1888:	07 fc       	sbrc	r0, 7
    188a:	90 58       	subi	r25, 0x80	; 128
    188c:	08 95       	ret
    188e:	46 f0       	brts	.+16     	; 0x18a0 <pow+0x82>
    1890:	0c 94 db 07 	jmp	0xfb6	; 0xfb6 <__fp_nan>
    1894:	60 e0       	ldi	r22, 0x00	; 0
    1896:	70 e0       	ldi	r23, 0x00	; 0
    1898:	80 e8       	ldi	r24, 0x80	; 128
    189a:	9f e3       	ldi	r25, 0x3F	; 63
    189c:	08 95       	ret
    189e:	4f e7       	ldi	r20, 0x7F	; 127
    18a0:	9f 77       	andi	r25, 0x7F	; 127
    18a2:	5f 93       	push	r21
    18a4:	4f 93       	push	r20
    18a6:	3f 93       	push	r19
    18a8:	2f 93       	push	r18
    18aa:	0e 94 67 0c 	call	0x18ce	; 0x18ce <log>
    18ae:	2f 91       	pop	r18
    18b0:	3f 91       	pop	r19
    18b2:	4f 91       	pop	r20
    18b4:	5f 91       	pop	r21
    18b6:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3>
    18ba:	0c 94 13 07 	jmp	0xe26	; 0xe26 <exp>
    18be:	16 f0       	brts	.+4      	; 0x18c4 <pow+0xa6>
    18c0:	0c 94 30 09 	jmp	0x1260	; 0x1260 <__fp_mpack>
    18c4:	0c 94 db 07 	jmp	0xfb6	; 0xfb6 <__fp_nan>
    18c8:	68 94       	set
    18ca:	0c 94 d5 07 	jmp	0xfaa	; 0xfaa <__fp_inf>

000018ce <log>:
    18ce:	0e 94 2c 08 	call	0x1058	; 0x1058 <__fp_splitA>
    18d2:	a8 f3       	brcs	.-22     	; 0x18be <pow+0xa0>
    18d4:	99 23       	and	r25, r25
    18d6:	c1 f3       	breq	.-16     	; 0x18c8 <pow+0xaa>
    18d8:	ae f3       	brts	.-22     	; 0x18c4 <pow+0xa6>
    18da:	df 93       	push	r29
    18dc:	cf 93       	push	r28
    18de:	1f 93       	push	r17
    18e0:	0f 93       	push	r16
    18e2:	ff 92       	push	r15
    18e4:	c9 2f       	mov	r28, r25
    18e6:	dd 27       	eor	r29, r29
    18e8:	88 23       	and	r24, r24
    18ea:	2a f0       	brmi	.+10     	; 0x18f6 <log+0x28>
    18ec:	21 97       	sbiw	r28, 0x01	; 1
    18ee:	66 0f       	add	r22, r22
    18f0:	77 1f       	adc	r23, r23
    18f2:	88 1f       	adc	r24, r24
    18f4:	da f7       	brpl	.-10     	; 0x18ec <log+0x1e>
    18f6:	20 e0       	ldi	r18, 0x00	; 0
    18f8:	30 e0       	ldi	r19, 0x00	; 0
    18fa:	40 e8       	ldi	r20, 0x80	; 128
    18fc:	5f eb       	ldi	r21, 0xBF	; 191
    18fe:	9f e3       	ldi	r25, 0x3F	; 63
    1900:	88 39       	cpi	r24, 0x98	; 152
    1902:	20 f0       	brcs	.+8      	; 0x190c <log+0x3e>
    1904:	80 3e       	cpi	r24, 0xE0	; 224
    1906:	38 f0       	brcs	.+14     	; 0x1916 <log+0x48>
    1908:	21 96       	adiw	r28, 0x01	; 1
    190a:	8f 77       	andi	r24, 0x7F	; 127
    190c:	0e 94 28 06 	call	0xc50	; 0xc50 <__addsf3>
    1910:	ee ea       	ldi	r30, 0xAE	; 174
    1912:	f1 e0       	ldi	r31, 0x01	; 1
    1914:	04 c0       	rjmp	.+8      	; 0x191e <log+0x50>
    1916:	0e 94 28 06 	call	0xc50	; 0xc50 <__addsf3>
    191a:	eb ed       	ldi	r30, 0xDB	; 219
    191c:	f1 e0       	ldi	r31, 0x01	; 1
    191e:	0e 94 de 07 	call	0xfbc	; 0xfbc <__fp_powser>
    1922:	8b 01       	movw	r16, r22
    1924:	be 01       	movw	r22, r28
    1926:	ec 01       	movw	r28, r24
    1928:	fb 2e       	mov	r15, r27
    192a:	6f 57       	subi	r22, 0x7F	; 127
    192c:	71 09       	sbc	r23, r1
    192e:	75 95       	asr	r23
    1930:	77 1f       	adc	r23, r23
    1932:	88 0b       	sbc	r24, r24
    1934:	99 0b       	sbc	r25, r25
    1936:	0e 94 76 07 	call	0xeec	; 0xeec <__floatsisf>
    193a:	28 e1       	ldi	r18, 0x18	; 24
    193c:	32 e7       	ldi	r19, 0x72	; 114
    193e:	41 e3       	ldi	r20, 0x31	; 49
    1940:	5f e3       	ldi	r21, 0x3F	; 63
    1942:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__mulsf3x>
    1946:	af 2d       	mov	r26, r15
    1948:	98 01       	movw	r18, r16
    194a:	ae 01       	movw	r20, r28
    194c:	ff 90       	pop	r15
    194e:	0f 91       	pop	r16
    1950:	1f 91       	pop	r17
    1952:	cf 91       	pop	r28
    1954:	df 91       	pop	r29
    1956:	0e 94 3f 06 	call	0xc7e	; 0xc7e <__addsf3x>
    195a:	0c 94 13 08 	jmp	0x1026	; 0x1026 <__fp_round>

0000195e <__udivmodsi4>:
    195e:	a1 e2       	ldi	r26, 0x21	; 33
    1960:	1a 2e       	mov	r1, r26
    1962:	aa 1b       	sub	r26, r26
    1964:	bb 1b       	sub	r27, r27
    1966:	fd 01       	movw	r30, r26
    1968:	0d c0       	rjmp	.+26     	; 0x1984 <__udivmodsi4_ep>

0000196a <__udivmodsi4_loop>:
    196a:	aa 1f       	adc	r26, r26
    196c:	bb 1f       	adc	r27, r27
    196e:	ee 1f       	adc	r30, r30
    1970:	ff 1f       	adc	r31, r31
    1972:	a2 17       	cp	r26, r18
    1974:	b3 07       	cpc	r27, r19
    1976:	e4 07       	cpc	r30, r20
    1978:	f5 07       	cpc	r31, r21
    197a:	20 f0       	brcs	.+8      	; 0x1984 <__udivmodsi4_ep>
    197c:	a2 1b       	sub	r26, r18
    197e:	b3 0b       	sbc	r27, r19
    1980:	e4 0b       	sbc	r30, r20
    1982:	f5 0b       	sbc	r31, r21

00001984 <__udivmodsi4_ep>:
    1984:	66 1f       	adc	r22, r22
    1986:	77 1f       	adc	r23, r23
    1988:	88 1f       	adc	r24, r24
    198a:	99 1f       	adc	r25, r25
    198c:	1a 94       	dec	r1
    198e:	69 f7       	brne	.-38     	; 0x196a <__udivmodsi4_loop>
    1990:	60 95       	com	r22
    1992:	70 95       	com	r23
    1994:	80 95       	com	r24
    1996:	90 95       	com	r25
    1998:	9b 01       	movw	r18, r22
    199a:	ac 01       	movw	r20, r24
    199c:	bd 01       	movw	r22, r26
    199e:	cf 01       	movw	r24, r30
    19a0:	08 95       	ret

000019a2 <__tablejump2__>:
    19a2:	ee 0f       	add	r30, r30
    19a4:	ff 1f       	adc	r31, r31
    19a6:	88 1f       	adc	r24, r24
    19a8:	8b bf       	out	0x3b, r24	; 59
    19aa:	07 90       	elpm	r0, Z+
    19ac:	f6 91       	elpm	r31, Z
    19ae:	e0 2d       	mov	r30, r0
    19b0:	19 94       	eijmp

000019b2 <__muluhisi3>:
    19b2:	0e 94 e4 0c 	call	0x19c8	; 0x19c8 <__umulhisi3>
    19b6:	a5 9f       	mul	r26, r21
    19b8:	90 0d       	add	r25, r0
    19ba:	b4 9f       	mul	r27, r20
    19bc:	90 0d       	add	r25, r0
    19be:	a4 9f       	mul	r26, r20
    19c0:	80 0d       	add	r24, r0
    19c2:	91 1d       	adc	r25, r1
    19c4:	11 24       	eor	r1, r1
    19c6:	08 95       	ret

000019c8 <__umulhisi3>:
    19c8:	a2 9f       	mul	r26, r18
    19ca:	b0 01       	movw	r22, r0
    19cc:	b3 9f       	mul	r27, r19
    19ce:	c0 01       	movw	r24, r0
    19d0:	a3 9f       	mul	r26, r19
    19d2:	70 0d       	add	r23, r0
    19d4:	81 1d       	adc	r24, r1
    19d6:	11 24       	eor	r1, r1
    19d8:	91 1d       	adc	r25, r1
    19da:	b2 9f       	mul	r27, r18
    19dc:	70 0d       	add	r23, r0
    19de:	81 1d       	adc	r24, r1
    19e0:	11 24       	eor	r1, r1
    19e2:	91 1d       	adc	r25, r1
    19e4:	08 95       	ret

000019e6 <malloc>:
    19e6:	0f 93       	push	r16
    19e8:	1f 93       	push	r17
    19ea:	cf 93       	push	r28
    19ec:	df 93       	push	r29
    19ee:	82 30       	cpi	r24, 0x02	; 2
    19f0:	91 05       	cpc	r25, r1
    19f2:	10 f4       	brcc	.+4      	; 0x19f8 <malloc+0x12>
    19f4:	82 e0       	ldi	r24, 0x02	; 2
    19f6:	90 e0       	ldi	r25, 0x00	; 0
    19f8:	e0 91 92 20 	lds	r30, 0x2092	; 0x802092 <__flp>
    19fc:	f0 91 93 20 	lds	r31, 0x2093	; 0x802093 <__flp+0x1>
    1a00:	20 e0       	ldi	r18, 0x00	; 0
    1a02:	30 e0       	ldi	r19, 0x00	; 0
    1a04:	a0 e0       	ldi	r26, 0x00	; 0
    1a06:	b0 e0       	ldi	r27, 0x00	; 0
    1a08:	30 97       	sbiw	r30, 0x00	; 0
    1a0a:	19 f1       	breq	.+70     	; 0x1a52 <malloc+0x6c>
    1a0c:	40 81       	ld	r20, Z
    1a0e:	51 81       	ldd	r21, Z+1	; 0x01
    1a10:	02 81       	ldd	r16, Z+2	; 0x02
    1a12:	13 81       	ldd	r17, Z+3	; 0x03
    1a14:	48 17       	cp	r20, r24
    1a16:	59 07       	cpc	r21, r25
    1a18:	c8 f0       	brcs	.+50     	; 0x1a4c <malloc+0x66>
    1a1a:	84 17       	cp	r24, r20
    1a1c:	95 07       	cpc	r25, r21
    1a1e:	69 f4       	brne	.+26     	; 0x1a3a <malloc+0x54>
    1a20:	10 97       	sbiw	r26, 0x00	; 0
    1a22:	31 f0       	breq	.+12     	; 0x1a30 <malloc+0x4a>
    1a24:	12 96       	adiw	r26, 0x02	; 2
    1a26:	0c 93       	st	X, r16
    1a28:	12 97       	sbiw	r26, 0x02	; 2
    1a2a:	13 96       	adiw	r26, 0x03	; 3
    1a2c:	1c 93       	st	X, r17
    1a2e:	27 c0       	rjmp	.+78     	; 0x1a7e <malloc+0x98>
    1a30:	00 93 92 20 	sts	0x2092, r16	; 0x802092 <__flp>
    1a34:	10 93 93 20 	sts	0x2093, r17	; 0x802093 <__flp+0x1>
    1a38:	22 c0       	rjmp	.+68     	; 0x1a7e <malloc+0x98>
    1a3a:	21 15       	cp	r18, r1
    1a3c:	31 05       	cpc	r19, r1
    1a3e:	19 f0       	breq	.+6      	; 0x1a46 <malloc+0x60>
    1a40:	42 17       	cp	r20, r18
    1a42:	53 07       	cpc	r21, r19
    1a44:	18 f4       	brcc	.+6      	; 0x1a4c <malloc+0x66>
    1a46:	9a 01       	movw	r18, r20
    1a48:	bd 01       	movw	r22, r26
    1a4a:	ef 01       	movw	r28, r30
    1a4c:	df 01       	movw	r26, r30
    1a4e:	f8 01       	movw	r30, r16
    1a50:	db cf       	rjmp	.-74     	; 0x1a08 <malloc+0x22>
    1a52:	21 15       	cp	r18, r1
    1a54:	31 05       	cpc	r19, r1
    1a56:	f9 f0       	breq	.+62     	; 0x1a96 <malloc+0xb0>
    1a58:	28 1b       	sub	r18, r24
    1a5a:	39 0b       	sbc	r19, r25
    1a5c:	24 30       	cpi	r18, 0x04	; 4
    1a5e:	31 05       	cpc	r19, r1
    1a60:	80 f4       	brcc	.+32     	; 0x1a82 <malloc+0x9c>
    1a62:	8a 81       	ldd	r24, Y+2	; 0x02
    1a64:	9b 81       	ldd	r25, Y+3	; 0x03
    1a66:	61 15       	cp	r22, r1
    1a68:	71 05       	cpc	r23, r1
    1a6a:	21 f0       	breq	.+8      	; 0x1a74 <malloc+0x8e>
    1a6c:	fb 01       	movw	r30, r22
    1a6e:	82 83       	std	Z+2, r24	; 0x02
    1a70:	93 83       	std	Z+3, r25	; 0x03
    1a72:	04 c0       	rjmp	.+8      	; 0x1a7c <malloc+0x96>
    1a74:	80 93 92 20 	sts	0x2092, r24	; 0x802092 <__flp>
    1a78:	90 93 93 20 	sts	0x2093, r25	; 0x802093 <__flp+0x1>
    1a7c:	fe 01       	movw	r30, r28
    1a7e:	32 96       	adiw	r30, 0x02	; 2
    1a80:	44 c0       	rjmp	.+136    	; 0x1b0a <malloc+0x124>
    1a82:	fe 01       	movw	r30, r28
    1a84:	e2 0f       	add	r30, r18
    1a86:	f3 1f       	adc	r31, r19
    1a88:	81 93       	st	Z+, r24
    1a8a:	91 93       	st	Z+, r25
    1a8c:	22 50       	subi	r18, 0x02	; 2
    1a8e:	31 09       	sbc	r19, r1
    1a90:	28 83       	st	Y, r18
    1a92:	39 83       	std	Y+1, r19	; 0x01
    1a94:	3a c0       	rjmp	.+116    	; 0x1b0a <malloc+0x124>
    1a96:	20 91 90 20 	lds	r18, 0x2090	; 0x802090 <__brkval>
    1a9a:	30 91 91 20 	lds	r19, 0x2091	; 0x802091 <__brkval+0x1>
    1a9e:	23 2b       	or	r18, r19
    1aa0:	41 f4       	brne	.+16     	; 0x1ab2 <malloc+0xcc>
    1aa2:	20 91 02 20 	lds	r18, 0x2002	; 0x802002 <__malloc_heap_start>
    1aa6:	30 91 03 20 	lds	r19, 0x2003	; 0x802003 <__malloc_heap_start+0x1>
    1aaa:	20 93 90 20 	sts	0x2090, r18	; 0x802090 <__brkval>
    1aae:	30 93 91 20 	sts	0x2091, r19	; 0x802091 <__brkval+0x1>
    1ab2:	20 91 00 20 	lds	r18, 0x2000	; 0x802000 <__data_start>
    1ab6:	30 91 01 20 	lds	r19, 0x2001	; 0x802001 <__data_start+0x1>
    1aba:	21 15       	cp	r18, r1
    1abc:	31 05       	cpc	r19, r1
    1abe:	41 f4       	brne	.+16     	; 0x1ad0 <malloc+0xea>
    1ac0:	2d b7       	in	r18, 0x3d	; 61
    1ac2:	3e b7       	in	r19, 0x3e	; 62
    1ac4:	40 91 04 20 	lds	r20, 0x2004	; 0x802004 <__malloc_margin>
    1ac8:	50 91 05 20 	lds	r21, 0x2005	; 0x802005 <__malloc_margin+0x1>
    1acc:	24 1b       	sub	r18, r20
    1ace:	35 0b       	sbc	r19, r21
    1ad0:	e0 91 90 20 	lds	r30, 0x2090	; 0x802090 <__brkval>
    1ad4:	f0 91 91 20 	lds	r31, 0x2091	; 0x802091 <__brkval+0x1>
    1ad8:	e2 17       	cp	r30, r18
    1ada:	f3 07       	cpc	r31, r19
    1adc:	a0 f4       	brcc	.+40     	; 0x1b06 <malloc+0x120>
    1ade:	2e 1b       	sub	r18, r30
    1ae0:	3f 0b       	sbc	r19, r31
    1ae2:	28 17       	cp	r18, r24
    1ae4:	39 07       	cpc	r19, r25
    1ae6:	78 f0       	brcs	.+30     	; 0x1b06 <malloc+0x120>
    1ae8:	ac 01       	movw	r20, r24
    1aea:	4e 5f       	subi	r20, 0xFE	; 254
    1aec:	5f 4f       	sbci	r21, 0xFF	; 255
    1aee:	24 17       	cp	r18, r20
    1af0:	35 07       	cpc	r19, r21
    1af2:	48 f0       	brcs	.+18     	; 0x1b06 <malloc+0x120>
    1af4:	4e 0f       	add	r20, r30
    1af6:	5f 1f       	adc	r21, r31
    1af8:	40 93 90 20 	sts	0x2090, r20	; 0x802090 <__brkval>
    1afc:	50 93 91 20 	sts	0x2091, r21	; 0x802091 <__brkval+0x1>
    1b00:	81 93       	st	Z+, r24
    1b02:	91 93       	st	Z+, r25
    1b04:	02 c0       	rjmp	.+4      	; 0x1b0a <malloc+0x124>
    1b06:	e0 e0       	ldi	r30, 0x00	; 0
    1b08:	f0 e0       	ldi	r31, 0x00	; 0
    1b0a:	cf 01       	movw	r24, r30
    1b0c:	df 91       	pop	r29
    1b0e:	cf 91       	pop	r28
    1b10:	1f 91       	pop	r17
    1b12:	0f 91       	pop	r16
    1b14:	08 95       	ret

00001b16 <free>:
    1b16:	cf 93       	push	r28
    1b18:	df 93       	push	r29
    1b1a:	00 97       	sbiw	r24, 0x00	; 0
    1b1c:	09 f4       	brne	.+2      	; 0x1b20 <free+0xa>
    1b1e:	81 c0       	rjmp	.+258    	; 0x1c22 <free+0x10c>
    1b20:	fc 01       	movw	r30, r24
    1b22:	32 97       	sbiw	r30, 0x02	; 2
    1b24:	12 82       	std	Z+2, r1	; 0x02
    1b26:	13 82       	std	Z+3, r1	; 0x03
    1b28:	a0 91 92 20 	lds	r26, 0x2092	; 0x802092 <__flp>
    1b2c:	b0 91 93 20 	lds	r27, 0x2093	; 0x802093 <__flp+0x1>
    1b30:	10 97       	sbiw	r26, 0x00	; 0
    1b32:	81 f4       	brne	.+32     	; 0x1b54 <free+0x3e>
    1b34:	20 81       	ld	r18, Z
    1b36:	31 81       	ldd	r19, Z+1	; 0x01
    1b38:	82 0f       	add	r24, r18
    1b3a:	93 1f       	adc	r25, r19
    1b3c:	20 91 90 20 	lds	r18, 0x2090	; 0x802090 <__brkval>
    1b40:	30 91 91 20 	lds	r19, 0x2091	; 0x802091 <__brkval+0x1>
    1b44:	28 17       	cp	r18, r24
    1b46:	39 07       	cpc	r19, r25
    1b48:	51 f5       	brne	.+84     	; 0x1b9e <free+0x88>
    1b4a:	e0 93 90 20 	sts	0x2090, r30	; 0x802090 <__brkval>
    1b4e:	f0 93 91 20 	sts	0x2091, r31	; 0x802091 <__brkval+0x1>
    1b52:	67 c0       	rjmp	.+206    	; 0x1c22 <free+0x10c>
    1b54:	ed 01       	movw	r28, r26
    1b56:	20 e0       	ldi	r18, 0x00	; 0
    1b58:	30 e0       	ldi	r19, 0x00	; 0
    1b5a:	ce 17       	cp	r28, r30
    1b5c:	df 07       	cpc	r29, r31
    1b5e:	40 f4       	brcc	.+16     	; 0x1b70 <free+0x5a>
    1b60:	4a 81       	ldd	r20, Y+2	; 0x02
    1b62:	5b 81       	ldd	r21, Y+3	; 0x03
    1b64:	9e 01       	movw	r18, r28
    1b66:	41 15       	cp	r20, r1
    1b68:	51 05       	cpc	r21, r1
    1b6a:	f1 f0       	breq	.+60     	; 0x1ba8 <free+0x92>
    1b6c:	ea 01       	movw	r28, r20
    1b6e:	f5 cf       	rjmp	.-22     	; 0x1b5a <free+0x44>
    1b70:	c2 83       	std	Z+2, r28	; 0x02
    1b72:	d3 83       	std	Z+3, r29	; 0x03
    1b74:	40 81       	ld	r20, Z
    1b76:	51 81       	ldd	r21, Z+1	; 0x01
    1b78:	84 0f       	add	r24, r20
    1b7a:	95 1f       	adc	r25, r21
    1b7c:	c8 17       	cp	r28, r24
    1b7e:	d9 07       	cpc	r29, r25
    1b80:	59 f4       	brne	.+22     	; 0x1b98 <free+0x82>
    1b82:	88 81       	ld	r24, Y
    1b84:	99 81       	ldd	r25, Y+1	; 0x01
    1b86:	84 0f       	add	r24, r20
    1b88:	95 1f       	adc	r25, r21
    1b8a:	02 96       	adiw	r24, 0x02	; 2
    1b8c:	80 83       	st	Z, r24
    1b8e:	91 83       	std	Z+1, r25	; 0x01
    1b90:	8a 81       	ldd	r24, Y+2	; 0x02
    1b92:	9b 81       	ldd	r25, Y+3	; 0x03
    1b94:	82 83       	std	Z+2, r24	; 0x02
    1b96:	93 83       	std	Z+3, r25	; 0x03
    1b98:	21 15       	cp	r18, r1
    1b9a:	31 05       	cpc	r19, r1
    1b9c:	29 f4       	brne	.+10     	; 0x1ba8 <free+0x92>
    1b9e:	e0 93 92 20 	sts	0x2092, r30	; 0x802092 <__flp>
    1ba2:	f0 93 93 20 	sts	0x2093, r31	; 0x802093 <__flp+0x1>
    1ba6:	3d c0       	rjmp	.+122    	; 0x1c22 <free+0x10c>
    1ba8:	e9 01       	movw	r28, r18
    1baa:	ea 83       	std	Y+2, r30	; 0x02
    1bac:	fb 83       	std	Y+3, r31	; 0x03
    1bae:	49 91       	ld	r20, Y+
    1bb0:	59 91       	ld	r21, Y+
    1bb2:	c4 0f       	add	r28, r20
    1bb4:	d5 1f       	adc	r29, r21
    1bb6:	ec 17       	cp	r30, r28
    1bb8:	fd 07       	cpc	r31, r29
    1bba:	61 f4       	brne	.+24     	; 0x1bd4 <free+0xbe>
    1bbc:	80 81       	ld	r24, Z
    1bbe:	91 81       	ldd	r25, Z+1	; 0x01
    1bc0:	84 0f       	add	r24, r20
    1bc2:	95 1f       	adc	r25, r21
    1bc4:	02 96       	adiw	r24, 0x02	; 2
    1bc6:	e9 01       	movw	r28, r18
    1bc8:	88 83       	st	Y, r24
    1bca:	99 83       	std	Y+1, r25	; 0x01
    1bcc:	82 81       	ldd	r24, Z+2	; 0x02
    1bce:	93 81       	ldd	r25, Z+3	; 0x03
    1bd0:	8a 83       	std	Y+2, r24	; 0x02
    1bd2:	9b 83       	std	Y+3, r25	; 0x03
    1bd4:	e0 e0       	ldi	r30, 0x00	; 0
    1bd6:	f0 e0       	ldi	r31, 0x00	; 0
    1bd8:	12 96       	adiw	r26, 0x02	; 2
    1bda:	8d 91       	ld	r24, X+
    1bdc:	9c 91       	ld	r25, X
    1bde:	13 97       	sbiw	r26, 0x03	; 3
    1be0:	00 97       	sbiw	r24, 0x00	; 0
    1be2:	19 f0       	breq	.+6      	; 0x1bea <free+0xd4>
    1be4:	fd 01       	movw	r30, r26
    1be6:	dc 01       	movw	r26, r24
    1be8:	f7 cf       	rjmp	.-18     	; 0x1bd8 <free+0xc2>
    1bea:	8d 91       	ld	r24, X+
    1bec:	9c 91       	ld	r25, X
    1bee:	11 97       	sbiw	r26, 0x01	; 1
    1bf0:	9d 01       	movw	r18, r26
    1bf2:	2e 5f       	subi	r18, 0xFE	; 254
    1bf4:	3f 4f       	sbci	r19, 0xFF	; 255
    1bf6:	82 0f       	add	r24, r18
    1bf8:	93 1f       	adc	r25, r19
    1bfa:	20 91 90 20 	lds	r18, 0x2090	; 0x802090 <__brkval>
    1bfe:	30 91 91 20 	lds	r19, 0x2091	; 0x802091 <__brkval+0x1>
    1c02:	28 17       	cp	r18, r24
    1c04:	39 07       	cpc	r19, r25
    1c06:	69 f4       	brne	.+26     	; 0x1c22 <free+0x10c>
    1c08:	30 97       	sbiw	r30, 0x00	; 0
    1c0a:	29 f4       	brne	.+10     	; 0x1c16 <free+0x100>
    1c0c:	10 92 92 20 	sts	0x2092, r1	; 0x802092 <__flp>
    1c10:	10 92 93 20 	sts	0x2093, r1	; 0x802093 <__flp+0x1>
    1c14:	02 c0       	rjmp	.+4      	; 0x1c1a <free+0x104>
    1c16:	12 82       	std	Z+2, r1	; 0x02
    1c18:	13 82       	std	Z+3, r1	; 0x03
    1c1a:	a0 93 90 20 	sts	0x2090, r26	; 0x802090 <__brkval>
    1c1e:	b0 93 91 20 	sts	0x2091, r27	; 0x802091 <__brkval+0x1>
    1c22:	df 91       	pop	r29
    1c24:	cf 91       	pop	r28
    1c26:	08 95       	ret

00001c28 <_exit>:
    1c28:	f8 94       	cli

00001c2a <__stop_program>:
    1c2a:	ff cf       	rjmp	.-2      	; 0x1c2a <__stop_program>
